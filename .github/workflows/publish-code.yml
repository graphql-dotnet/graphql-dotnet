name: Publish code

on:
  release:
    types:
      - published

env:
  NODE_VERSION: '18.x'   # Node 18 LTS, see https://nodejs.org/en/about/releases/
  DOTNET_NOLOGO: true
  DOTNET_CLI_TELEMETRY_OPTOUT: true

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Check github.ref starts with 'refs/tags/'
        if: ${{ !startsWith(github.ref, 'refs/tags/') }}
        run: |
          echo Error! github.ref does not start with 'refs/tags'
          echo github.ref: ${{ github.ref }}
          exit 1
      - name: Set version number environment variable
        env:
          github_ref: ${{ github.ref }}
        run: |
          version="${github_ref:10}"
          echo version=$version
          echo "version=$version" >> $GITHUB_ENV
      - name: Use Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
      - name: yarn docs2
        working-directory: docs2
        run: yarn
      - name: yarn gatsby build
        working-directory: docs2
        run: yarn gatsby build
      - name: Upload documentation as workflow artifacts
        uses: actions/upload-artifact@v4
        with:
          name: Documentation
          path: docs2/public/**
          if-no-files-found: error
      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '7.0.x'
          source-url: https://api.nuget.org/v3/index.json
        env:
          NUGET_AUTH_TOKEN: ${{secrets.NUGET_AUTH_TOKEN}}
      - name: Install dependencies
        working-directory: src
        run: dotnet restore
      - name: Build solution [Release]
        working-directory: src
        run: dotnet build --no-restore -c Release -p:Version=$version
      - name: Pack solution [Release]
        working-directory: src
        run: dotnet pack --no-restore --no-build -c Release -p:Version=$version -o out
      - name: Upload Nuget packages as workflow artifacts
        uses: actions/upload-artifact@v4
        with:
          name: Nuget packages
          path: |
            src/out/*
      - name: Publish Nuget packages to Nuget registry
        working-directory: src
        run: dotnet nuget push "out/*" -k ${{secrets.NUGET_AUTH_TOKEN}}
      - name: Zip documentation
        working-directory: docs2/public
        run: zip -r ../../src/out/Documentation.zip .
      - name: Upload Nuget packages and documentation as release artifacts
        uses: actions/github-script@v7
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            console.log('environment', process.versions);
            const fs = require('fs').promises;
            const { repo: { owner, repo }, sha } = context;

            for (let file of await fs.readdir('src/out')) {
              console.log('uploading', file);

              await github.rest.repos.uploadReleaseAsset({
                owner,
                repo,
                release_id: ${{ github.event.release.id }},
                name: file,
                data: await fs.readFile(`src/out/${file}`)
              });
            }
