namespace GraphQL.SystemTextJson
{
    public class ApolloTraceJsonConverter : System.Text.Json.Serialization.JsonConverter<GraphQL.Instrumentation.ApolloTrace>
    {
        public ApolloTraceJsonConverter() { }
        public override GraphQL.Instrumentation.ApolloTrace Read(ref System.Text.Json.Utf8JsonReader reader, System.Type typeToConvert, System.Text.Json.JsonSerializerOptions options) { }
        public override void Write(System.Text.Json.Utf8JsonWriter writer, GraphQL.Instrumentation.ApolloTrace value, System.Text.Json.JsonSerializerOptions options) { }
    }
    public class ExecutionResultJsonConverter : System.Text.Json.Serialization.JsonConverter<GraphQL.ExecutionResult>
    {
        public ExecutionResultJsonConverter(GraphQL.Execution.IErrorInfoProvider errorInfoProvider) { }
        public override bool CanConvert(System.Type typeToConvert) { }
        public override GraphQL.ExecutionResult Read(ref System.Text.Json.Utf8JsonReader reader, System.Type typeToConvert, System.Text.Json.JsonSerializerOptions options) { }
        public override void Write(System.Text.Json.Utf8JsonWriter writer, GraphQL.ExecutionResult value, System.Text.Json.JsonSerializerOptions options) { }
    }
    public static class GraphQLBuilderExtensions
    {
        public static GraphQL.DI.IGraphQLBuilder AddSystemTextJson(this GraphQL.DI.IGraphQLBuilder builder, System.Action<System.Text.Json.JsonSerializerOptions>? action = null) { }
        public static GraphQL.DI.IGraphQLBuilder AddSystemTextJson(this GraphQL.DI.IGraphQLBuilder builder, System.Action<System.Text.Json.JsonSerializerOptions, System.IServiceProvider>? action) { }
    }
    public class GraphQLRequestJsonConverter : System.Text.Json.Serialization.JsonConverter<GraphQL.Transports.Json.GraphQLRequest>
    {
        public GraphQLRequestJsonConverter() { }
        public override GraphQL.Transports.Json.GraphQLRequest Read(ref System.Text.Json.Utf8JsonReader reader, System.Type typeToConvert, System.Text.Json.JsonSerializerOptions options) { }
        public override void Write(System.Text.Json.Utf8JsonWriter writer, GraphQL.Transports.Json.GraphQLRequest value, System.Text.Json.JsonSerializerOptions options) { }
    }
    public class GraphQLRequestListJsonConverter : System.Text.Json.Serialization.JsonConverter<System.Collections.Generic.IEnumerable<GraphQL.Transports.Json.GraphQLRequest>>
    {
        public GraphQLRequestListJsonConverter() { }
        public override bool CanConvert(System.Type typeToConvert) { }
        public override System.Collections.Generic.IEnumerable<GraphQL.Transports.Json.GraphQLRequest> Read(ref System.Text.Json.Utf8JsonReader reader, System.Type typeToConvert, System.Text.Json.JsonSerializerOptions options) { }
        public override void Write(System.Text.Json.Utf8JsonWriter writer, System.Collections.Generic.IEnumerable<GraphQL.Transports.Json.GraphQLRequest> value, System.Text.Json.JsonSerializerOptions options) { }
    }
    public class GraphQLSerializer : GraphQL.IGraphQLSerializer, GraphQL.IGraphQLTextSerializer
    {
        public GraphQLSerializer() { }
        public GraphQLSerializer(GraphQL.Execution.IErrorInfoProvider errorInfoProvider) { }
        public GraphQLSerializer(System.Action<System.Text.Json.JsonSerializerOptions> configureSerializerOptions) { }
        public GraphQLSerializer(bool indent) { }
        public GraphQLSerializer(System.Text.Json.JsonSerializerOptions serializerOptions) { }
        public GraphQLSerializer(System.Action<System.Text.Json.JsonSerializerOptions> configureSerializerOptions, GraphQL.Execution.IErrorInfoProvider errorInfoProvider) { }
        public GraphQLSerializer(bool indent, GraphQL.Execution.IErrorInfoProvider errorInfoProvider) { }
        public GraphQLSerializer(System.Text.Json.JsonSerializerOptions serializerOptions, GraphQL.Execution.IErrorInfoProvider errorInfoProvider) { }
        public T Deserialize<T>(string json) { }
        public System.Threading.Tasks.ValueTask<T> ReadAsync<T>(System.IO.Stream stream, System.Threading.CancellationToken cancellationToken = default) { }
        public T ReadDocument<T>(System.Text.Json.JsonDocument jsonDocument) { }
        public T ReadNode<T>(System.Text.Json.JsonElement jsonElement) { }
        public string Serialize<T>(T value) { }
        public System.Threading.Tasks.Task WriteAsync<T>(System.IO.Stream stream, T value, System.Threading.CancellationToken cancellationToken = default) { }
    }
    public class InputsJsonConverter : System.Text.Json.Serialization.JsonConverter<GraphQL.Inputs>
    {
        public InputsJsonConverter() { }
        public override GraphQL.Inputs Read(ref System.Text.Json.Utf8JsonReader reader, System.Type typeToConvert, System.Text.Json.JsonSerializerOptions options) { }
        public override void Write(System.Text.Json.Utf8JsonWriter writer, GraphQL.Inputs value, System.Text.Json.JsonSerializerOptions options) { }
    }
    public sealed class JsonConverterBigInteger : System.Text.Json.Serialization.JsonConverter<System.Numerics.BigInteger>
    {
        public JsonConverterBigInteger() { }
        public override System.Numerics.BigInteger Read(ref System.Text.Json.Utf8JsonReader reader, System.Type typeToConvert, System.Text.Json.JsonSerializerOptions options) { }
        public override void Write(System.Text.Json.Utf8JsonWriter writer, System.Numerics.BigInteger value, System.Text.Json.JsonSerializerOptions options) { }
        public static bool TryGetBigInteger(ref System.Text.Json.Utf8JsonReader reader, out System.Numerics.BigInteger bi) { }
    }
    public static class SchemaExtensions
    {
        public static System.Threading.Tasks.Task<string> ExecuteAsync(this GraphQL.Types.ISchema schema, System.Action<GraphQL.ExecutionOptions> configure, System.Threading.CancellationToken cancellationToken = default) { }
    }
    public class WebSocketMessageJsonConverter : System.Text.Json.Serialization.JsonConverter<GraphQL.Transports.Json.WebSocketMessage>
    {
        public WebSocketMessageJsonConverter() { }
        public override GraphQL.Transports.Json.WebSocketMessage Read(ref System.Text.Json.Utf8JsonReader reader, System.Type typeToConvert, System.Text.Json.JsonSerializerOptions options) { }
        public override void Write(System.Text.Json.Utf8JsonWriter writer, GraphQL.Transports.Json.WebSocketMessage value, System.Text.Json.JsonSerializerOptions options) { }
    }
}
