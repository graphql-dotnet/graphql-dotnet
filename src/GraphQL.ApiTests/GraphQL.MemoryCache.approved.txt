namespace GraphQL.Caching
{
    public class AutomaticPersistedQueriesExecution : GraphQL.DI.IConfigureExecution
    {
        public AutomaticPersistedQueriesExecution(GraphQL.Caching.IQueryCache cache) { }
        protected virtual string ComputeSHA256(string input) { }
        protected virtual GraphQL.ExecutionResult CreateExecutionResult(GraphQL.ExecutionError error) { }
        public System.Threading.Tasks.Task<GraphQL.ExecutionResult> ExecuteAsync(GraphQL.ExecutionOptions options, GraphQL.DI.ExecutionDelegate next) { }
        protected virtual string? GetHash(GraphQL.Inputs? extensions) { }
    }
    public abstract class BaseMemoryCacheOptions<TDescendantOptions> : Microsoft.Extensions.Caching.Memory.MemoryCacheOptions, Microsoft.Extensions.Options.IOptions<TDescendantOptions>
        where TDescendantOptions : GraphQL.Caching.BaseMemoryCacheOptions<TDescendantOptions>, new ()
    {
        public BaseMemoryCacheOptions() { }
        public System.TimeSpan? SlidingExpiration { get; set; }
    }
    public class BaseMemoryCache<TValue, TOptions> : GraphQL.Caching.ICache<TValue>, System.IDisposable
        where TOptions : GraphQL.Caching.BaseMemoryCacheOptions<TOptions>, new ()
    {
        protected readonly GraphQL.Caching.BaseMemoryCacheOptions<TOptions> _options;
        public BaseMemoryCache() { }
        public BaseMemoryCache(Microsoft.Extensions.Options.IOptions<TOptions> options) { }
        protected BaseMemoryCache(Microsoft.Extensions.Caching.Memory.IMemoryCache memoryCache, bool disposeMemoryCache, Microsoft.Extensions.Options.IOptions<TOptions> options) { }
        public virtual void Dispose() { }
        public virtual System.Threading.Tasks.ValueTask<TValue?> GetAsync(string key) { }
        protected virtual Microsoft.Extensions.Caching.Memory.MemoryCacheEntryOptions GetMemoryCacheEntryOptions(string key, TValue value) { }
        public virtual System.Threading.Tasks.ValueTask SetAsync(string key, TValue value) { }
    }
    public static class GraphQLBuilderExtensions
    {
        public static GraphQL.DI.IGraphQLBuilder AddAutomaticPersistedQueries(this GraphQL.DI.IGraphQLBuilder builder, System.Action<GraphQL.Caching.MemoryQueryCacheOptions>? action = null) { }
        public static GraphQL.DI.IGraphQLBuilder AddAutomaticPersistedQueries(this GraphQL.DI.IGraphQLBuilder builder, System.Action<GraphQL.Caching.MemoryQueryCacheOptions, System.IServiceProvider>? action) { }
        public static GraphQL.DI.IGraphQLBuilder AddMemoryCache(this GraphQL.DI.IGraphQLBuilder builder, System.Action<GraphQL.Caching.MemoryDocumentCacheOptions>? action = null) { }
        public static GraphQL.DI.IGraphQLBuilder AddMemoryCache(this GraphQL.DI.IGraphQLBuilder builder, System.Action<GraphQL.Caching.MemoryDocumentCacheOptions, System.IServiceProvider>? action) { }
    }
    public interface IQueryCache : GraphQL.Caching.ICache<string> { }
    public class MemoryDocumentCache : GraphQL.Caching.BaseMemoryCache<GraphQLParser.AST.GraphQLDocument, GraphQL.Caching.MemoryDocumentCacheOptions>, GraphQL.Caching.ICache<GraphQLParser.AST.GraphQLDocument>, GraphQL.Caching.IDocumentCache
    {
        public MemoryDocumentCache() { }
        protected override Microsoft.Extensions.Caching.Memory.MemoryCacheEntryOptions GetMemoryCacheEntryOptions(string key, GraphQLParser.AST.GraphQLDocument _) { }
    }
    public class MemoryDocumentCacheOptions : GraphQL.Caching.BaseMemoryCacheOptions<GraphQL.Caching.MemoryDocumentCacheOptions>
    {
        public MemoryDocumentCacheOptions() { }
    }
    public class MemoryQueryCache : GraphQL.Caching.BaseMemoryCache<string, GraphQL.Caching.MemoryQueryCacheOptions>, GraphQL.Caching.ICache<string>, GraphQL.Caching.IQueryCache
    {
        public MemoryQueryCache() { }
        protected override Microsoft.Extensions.Caching.Memory.MemoryCacheEntryOptions GetMemoryCacheEntryOptions(string _, string value) { }
    }
    public class MemoryQueryCacheOptions : GraphQL.Caching.BaseMemoryCacheOptions<GraphQL.Caching.MemoryQueryCacheOptions>
    {
        public MemoryQueryCacheOptions() { }
    }
    [System.Serializable]
    public class PersistedQueryBadHashError : GraphQL.Validation.ValidationError
    {
        public PersistedQueryBadHashError(string hash) { }
    }
    [System.Serializable]
    public class PersistedQueryNotFoundError : GraphQL.Validation.ValidationError
    {
        public PersistedQueryNotFoundError(string hash) { }
    }
}
