// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: reports.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Mdg.Engine.Proto
{

    /// <summary>Holder for reflection information generated from reports.proto</summary>
    public static partial class ReportsReflection
    {

        #region Descriptor
        /// <summary>File descriptor for reports.proto</summary>
        public static pbr::FileDescriptor Descriptor
        {
            get { return descriptor; }
        }
        private static pbr::FileDescriptor descriptor;

        static ReportsReflection()
        {
            byte[] descriptorData = global::System.Convert.FromBase64String(
                string.Concat(
                  "Cg1yZXBvcnRzLnByb3RvEhBtZGcuZW5naW5lLnByb3RvGh9nb29nbGUvcHJv",
                  "dG9idWYvdGltZXN0YW1wLnByb3RvIpcZCgVUcmFjZRIuCgpzdGFydF90aW1l",
                  "GAQgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcBIsCghlbmRfdGlt",
                  "ZRgDIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXASEwoLZHVyYXRp",
                  "b25fbnMYCyABKAQSKgoEcm9vdBgOIAEoCzIcLm1kZy5lbmdpbmUucHJvdG8u",
                  "VHJhY2UuTm9kZRIRCglzaWduYXR1cmUYEyABKAkSHwoXdW5leGVjdXRlZE9w",
                  "ZXJhdGlvbkJvZHkYGyABKAkSHwoXdW5leGVjdXRlZE9wZXJhdGlvbk5hbWUY",
                  "HCABKAkSMAoHZGV0YWlscxgGIAEoCzIfLm1kZy5lbmdpbmUucHJvdG8uVHJh",
                  "Y2UuRGV0YWlscxITCgtjbGllbnRfbmFtZRgHIAEoCRIWCg5jbGllbnRfdmVy",
                  "c2lvbhgIIAEoCRIWCg5jbGllbnRfYWRkcmVzcxgJIAEoCRIbChNjbGllbnRf",
                  "cmVmZXJlbmNlX2lkGBcgASgJEioKBGh0dHAYCiABKAsyHC5tZGcuZW5naW5l",
                  "LnByb3RvLlRyYWNlLkhUVFASOQoMY2FjaGVfcG9saWN5GBIgASgLMiMubWRn",
                  "LmVuZ2luZS5wcm90by5UcmFjZS5DYWNoZVBvbGljeRI5CgpxdWVyeV9wbGFu",
                  "GBogASgLMiUubWRnLmVuZ2luZS5wcm90by5UcmFjZS5RdWVyeVBsYW5Ob2Rl",
                  "EhwKFGZ1bGxfcXVlcnlfY2FjaGVfaGl0GBQgASgIEhsKE3BlcnNpc3RlZF9x",
                  "dWVyeV9oaXQYFSABKAgSIAoYcGVyc2lzdGVkX3F1ZXJ5X3JlZ2lzdGVyGBYg",
                  "ASgIEhwKFHJlZ2lzdGVyZWRfb3BlcmF0aW9uGBggASgIEhsKE2ZvcmJpZGRl",
                  "bl9vcGVyYXRpb24YGSABKAgSKAogbGVnYWN5X3NpZ25hdHVyZV9uZWVkc19y",
                  "ZXNpZ25pbmcYBSABKAkaigEKC0NhY2hlUG9saWN5EjgKBXNjb3BlGAEgASgO",
                  "MikubWRnLmVuZ2luZS5wcm90by5UcmFjZS5DYWNoZVBvbGljeS5TY29wZRIS",
                  "CgptYXhfYWdlX25zGAIgASgDIi0KBVNjb3BlEgsKB1VOS05PV04QABIKCgZQ",
                  "VUJMSUMQARILCgdQUklWQVRFEAIatwIKB0RldGFpbHMSSgoOdmFyaWFibGVz",
                  "X2pzb24YBCADKAsyMi5tZGcuZW5naW5lLnByb3RvLlRyYWNlLkRldGFpbHMu",
                  "VmFyaWFibGVzSnNvbkVudHJ5ElYKFGRlcHJlY2F0ZWRfdmFyaWFibGVzGAEg",
                  "AygLMjgubWRnLmVuZ2luZS5wcm90by5UcmFjZS5EZXRhaWxzLkRlcHJlY2F0",
                  "ZWRWYXJpYWJsZXNFbnRyeRIWCg5vcGVyYXRpb25fbmFtZRgDIAEoCRo0ChJW",
                  "YXJpYWJsZXNKc29uRW50cnkSCwoDa2V5GAEgASgJEg0KBXZhbHVlGAIgASgJ",
                  "OgI4ARo6ChhEZXByZWNhdGVkVmFyaWFibGVzRW50cnkSCwoDa2V5GAEgASgJ",
                  "Eg0KBXZhbHVlGAIgASgMOgI4ARprCgVFcnJvchIPCgdtZXNzYWdlGAEgASgJ",
                  "EjIKCGxvY2F0aW9uGAIgAygLMiAubWRnLmVuZ2luZS5wcm90by5UcmFjZS5M",
                  "b2NhdGlvbhIPCgd0aW1lX25zGAMgASgEEgwKBGpzb24YBCABKAka8QQKBEhU",
                  "VFASMwoGbWV0aG9kGAEgASgOMiMubWRnLmVuZ2luZS5wcm90by5UcmFjZS5I",
                  "VFRQLk1ldGhvZBIMCgRob3N0GAIgASgJEgwKBHBhdGgYAyABKAkSSQoPcmVx",
                  "dWVzdF9oZWFkZXJzGAQgAygLMjAubWRnLmVuZ2luZS5wcm90by5UcmFjZS5I",
                  "VFRQLlJlcXVlc3RIZWFkZXJzRW50cnkSSwoQcmVzcG9uc2VfaGVhZGVycxgF",
                  "IAMoCzIxLm1kZy5lbmdpbmUucHJvdG8uVHJhY2UuSFRUUC5SZXNwb25zZUhl",
                  "YWRlcnNFbnRyeRITCgtzdGF0dXNfY29kZRgGIAEoDRIOCgZzZWN1cmUYCCAB",
                  "KAgSEAoIcHJvdG9jb2wYCSABKAkaFwoGVmFsdWVzEg0KBXZhbHVlGAEgAygJ",
                  "GloKE1JlcXVlc3RIZWFkZXJzRW50cnkSCwoDa2V5GAEgASgJEjIKBXZhbHVl",
                  "GAIgASgLMiMubWRnLmVuZ2luZS5wcm90by5UcmFjZS5IVFRQLlZhbHVlczoC",
                  "OAEaWwoUUmVzcG9uc2VIZWFkZXJzRW50cnkSCwoDa2V5GAEgASgJEjIKBXZh",
                  "bHVlGAIgASgLMiMubWRnLmVuZ2luZS5wcm90by5UcmFjZS5IVFRQLlZhbHVl",
                  "czoCOAEidwoGTWV0aG9kEgsKB1VOS05PV04QABILCgdPUFRJT05TEAESBwoD",
                  "R0VUEAISCAoESEVBRBADEggKBFBPU1QQBBIHCgNQVVQQBRIKCgZERUxFVEUQ",
                  "BhIJCgVUUkFDRRAHEgsKB0NPTk5FQ1QQCBIJCgVQQVRDSBAJGigKCExvY2F0",
                  "aW9uEgwKBGxpbmUYASABKA0SDgoGY29sdW1uGAIgASgNGrgCCgROb2RlEhcK",
                  "DXJlc3BvbnNlX25hbWUYASABKAlIABIPCgVpbmRleBgCIAEoDUgAEhsKE29y",
                  "aWdpbmFsX2ZpZWxkX25hbWUYDiABKAkSDAoEdHlwZRgDIAEoCRITCgtwYXJl",
                  "bnRfdHlwZRgNIAEoCRI5CgxjYWNoZV9wb2xpY3kYBSABKAsyIy5tZGcuZW5n",
                  "aW5lLnByb3RvLlRyYWNlLkNhY2hlUG9saWN5EhIKCnN0YXJ0X3RpbWUYCCAB",
                  "KAQSEAoIZW5kX3RpbWUYCSABKAQSLAoFZXJyb3IYCyADKAsyHS5tZGcuZW5n",
                  "aW5lLnByb3RvLlRyYWNlLkVycm9yEisKBWNoaWxkGAwgAygLMhwubWRnLmVu",
                  "Z2luZS5wcm90by5UcmFjZS5Ob2RlQgQKAmlkSgQIBBAFGvwGCg1RdWVyeVBs",
                  "YW5Ob2RlEkYKCHNlcXVlbmNlGAEgASgLMjIubWRnLmVuZ2luZS5wcm90by5U",
                  "cmFjZS5RdWVyeVBsYW5Ob2RlLlNlcXVlbmNlTm9kZUgAEkYKCHBhcmFsbGVs",
                  "GAIgASgLMjIubWRnLmVuZ2luZS5wcm90by5UcmFjZS5RdWVyeVBsYW5Ob2Rl",
                  "LlBhcmFsbGVsTm9kZUgAEkAKBWZldGNoGAMgASgLMi8ubWRnLmVuZ2luZS5w",
                  "cm90by5UcmFjZS5RdWVyeVBsYW5Ob2RlLkZldGNoTm9kZUgAEkQKB2ZsYXR0",
                  "ZW4YBCABKAsyMS5tZGcuZW5naW5lLnByb3RvLlRyYWNlLlF1ZXJ5UGxhbk5v",
                  "ZGUuRmxhdHRlbk5vZGVIABpECgxTZXF1ZW5jZU5vZGUSNAoFbm9kZXMYASAD",
                  "KAsyJS5tZGcuZW5naW5lLnByb3RvLlRyYWNlLlF1ZXJ5UGxhbk5vZGUaRAoM",
                  "UGFyYWxsZWxOb2RlEjQKBW5vZGVzGAEgAygLMiUubWRnLmVuZ2luZS5wcm90",
                  "by5UcmFjZS5RdWVyeVBsYW5Ob2RlGuMBCglGZXRjaE5vZGUSFAoMc2Vydmlj",
                  "ZV9uYW1lGAEgASgJEhwKFHRyYWNlX3BhcnNpbmdfZmFpbGVkGAIgASgIEiYK",
                  "BXRyYWNlGAMgASgLMhcubWRnLmVuZ2luZS5wcm90by5UcmFjZRIYChBzZW50",
                  "X3RpbWVfb2Zmc2V0GAQgASgEEi0KCXNlbnRfdGltZRgFIAEoCzIaLmdvb2ds",
                  "ZS5wcm90b2J1Zi5UaW1lc3RhbXASMQoNcmVjZWl2ZWRfdGltZRgGIAEoCzIa",
                  "Lmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXAalAEKC0ZsYXR0ZW5Ob2RlElAK",
                  "DXJlc3BvbnNlX3BhdGgYASADKAsyOS5tZGcuZW5naW5lLnByb3RvLlRyYWNl",
                  "LlF1ZXJ5UGxhbk5vZGUuUmVzcG9uc2VQYXRoRWxlbWVudBIzCgRub2RlGAIg",
                  "ASgLMiUubWRnLmVuZ2luZS5wcm90by5UcmFjZS5RdWVyeVBsYW5Ob2RlGkIK",
                  "E1Jlc3BvbnNlUGF0aEVsZW1lbnQSFAoKZmllbGRfbmFtZRgBIAEoCUgAEg8K",
                  "BWluZGV4GAIgASgNSABCBAoCaWRCBgoEbm9kZUoECAwQDUoECA0QDkoECAEQ",
                  "AkoECAIQAyKwAQoMUmVwb3J0SGVhZGVyEhAKCGhvc3RuYW1lGAUgASgJEhUK",
                  "DWFnZW50X3ZlcnNpb24YBiABKAkSFwoPc2VydmljZV92ZXJzaW9uGAcgASgJ",
                  "EhcKD3J1bnRpbWVfdmVyc2lvbhgIIAEoCRINCgV1bmFtZRgJIAEoCRISCgpz",
                  "Y2hlbWFfdGFnGAogASgJEhwKFGV4ZWN1dGFibGVfc2NoZW1hX2lkGAsgASgJ",
                  "SgQIAxAEIt8BCg5QYXRoRXJyb3JTdGF0cxJACghjaGlsZHJlbhgBIAMoCzIu",
                  "Lm1kZy5lbmdpbmUucHJvdG8uUGF0aEVycm9yU3RhdHMuQ2hpbGRyZW5FbnRy",
                  "eRIUCgxlcnJvcnNfY291bnQYBCABKAQSIgoacmVxdWVzdHNfd2l0aF9lcnJv",
                  "cnNfY291bnQYBSABKAQaUQoNQ2hpbGRyZW5FbnRyeRILCgNrZXkYASABKAkS",
                  "LwoFdmFsdWUYAiABKAsyIC5tZGcuZW5naW5lLnByb3RvLlBhdGhFcnJvclN0",
                  "YXRzOgI4ASKYAwoRUXVlcnlMYXRlbmN5U3RhdHMSFQoNbGF0ZW5jeV9jb3Vu",
                  "dBgBIAMoAxIVCg1yZXF1ZXN0X2NvdW50GAIgASgEEhIKCmNhY2hlX2hpdHMY",
                  "AyABKAQSHAoUcGVyc2lzdGVkX3F1ZXJ5X2hpdHMYBCABKAQSHgoWcGVyc2lz",
                  "dGVkX3F1ZXJ5X21pc3NlcxgFIAEoBBIbChNjYWNoZV9sYXRlbmN5X2NvdW50",
                  "GAYgAygDEjoKEHJvb3RfZXJyb3Jfc3RhdHMYByABKAsyIC5tZGcuZW5naW5l",
                  "LnByb3RvLlBhdGhFcnJvclN0YXRzEiIKGnJlcXVlc3RzX3dpdGhfZXJyb3Jz",
                  "X2NvdW50GAggASgEEh4KFnB1YmxpY19jYWNoZV90dGxfY291bnQYCSADKAMS",
                  "HwoXcHJpdmF0ZV9jYWNoZV90dGxfY291bnQYCiADKAMSIgoacmVnaXN0ZXJl",
                  "ZF9vcGVyYXRpb25fY291bnQYCyABKAQSIQoZZm9yYmlkZGVuX29wZXJhdGlv",
                  "bl9jb3VudBgMIAEoBCJYCgxTdGF0c0NvbnRleHQSGwoTY2xpZW50X3JlZmVy",
                  "ZW5jZV9pZBgBIAEoCRITCgtjbGllbnRfbmFtZRgCIAEoCRIWCg5jbGllbnRf",
                  "dmVyc2lvbhgDIAEoCSKUAQofQ29udGV4dHVhbGl6ZWRRdWVyeUxhdGVuY3lT",
                  "dGF0cxJAChNxdWVyeV9sYXRlbmN5X3N0YXRzGAEgASgLMiMubWRnLmVuZ2lu",
                  "ZS5wcm90by5RdWVyeUxhdGVuY3lTdGF0cxIvCgdjb250ZXh0GAIgASgLMh4u",
                  "bWRnLmVuZ2luZS5wcm90by5TdGF0c0NvbnRleHQi7QEKF0NvbnRleHR1YWxp",
                  "emVkVHlwZVN0YXRzEi8KB2NvbnRleHQYASABKAsyHi5tZGcuZW5naW5lLnBy",
                  "b3RvLlN0YXRzQ29udGV4dBJRCg1wZXJfdHlwZV9zdGF0GAIgAygLMjoubWRn",
                  "LmVuZ2luZS5wcm90by5Db250ZXh0dWFsaXplZFR5cGVTdGF0cy5QZXJUeXBl",
                  "U3RhdEVudHJ5Gk4KEFBlclR5cGVTdGF0RW50cnkSCwoDa2V5GAEgASgJEikK",
                  "BXZhbHVlGAIgASgLMhoubWRnLmVuZ2luZS5wcm90by5UeXBlU3RhdDoCOAEi",
                  "kgEKCUZpZWxkU3RhdBITCgtyZXR1cm5fdHlwZRgDIAEoCRIUCgxlcnJvcnNf",
                  "Y291bnQYBCABKAQSDQoFY291bnQYBSABKAQSIgoacmVxdWVzdHNfd2l0aF9l",
                  "cnJvcnNfY291bnQYBiABKAQSFQoNbGF0ZW5jeV9jb3VudBgIIAMoA0oECAEQ",
                  "AkoECAIQA0oECAcQCCKuAQoIVHlwZVN0YXQSRAoOcGVyX2ZpZWxkX3N0YXQY",
                  "AyADKAsyLC5tZGcuZW5naW5lLnByb3RvLlR5cGVTdGF0LlBlckZpZWxkU3Rh",
                  "dEVudHJ5GlAKEVBlckZpZWxkU3RhdEVudHJ5EgsKA2tleRgBIAEoCRIqCgV2",
                  "YWx1ZRgCIAEoCzIbLm1kZy5lbmdpbmUucHJvdG8uRmllbGRTdGF0OgI4AUoE",
                  "CAEQAkoECAIQAyIqCgVGaWVsZBIMCgRuYW1lGAIgASgJEhMKC3JldHVybl90",
                  "eXBlGAMgASgJIjwKBFR5cGUSDAoEbmFtZRgBIAEoCRImCgVmaWVsZBgCIAMo",
                  "CzIXLm1kZy5lbmdpbmUucHJvdG8uRmllbGQihwIKBlJlcG9ydBIuCgZoZWFk",
                  "ZXIYASABKAsyHi5tZGcuZW5naW5lLnByb3RvLlJlcG9ydEhlYWRlchJGChB0",
                  "cmFjZXNfcGVyX3F1ZXJ5GAUgAygLMiwubWRnLmVuZ2luZS5wcm90by5SZXBv",
                  "cnQuVHJhY2VzUGVyUXVlcnlFbnRyeRIsCghlbmRfdGltZRgCIAEoCzIaLmdv",
                  "b2dsZS5wcm90b2J1Zi5UaW1lc3RhbXAaVwoTVHJhY2VzUGVyUXVlcnlFbnRy",
                  "eRILCgNrZXkYASABKAkSLwoFdmFsdWUYAiABKAsyIC5tZGcuZW5naW5lLnBy",
                  "b3RvLlRyYWNlc0FuZFN0YXRzOgI4ASKnAgoTQ29udGV4dHVhbGl6ZWRTdGF0",
                  "cxIvCgdjb250ZXh0GAEgASgLMh4ubWRnLmVuZ2luZS5wcm90by5TdGF0c0Nv",
                  "bnRleHQSQAoTcXVlcnlfbGF0ZW5jeV9zdGF0cxgCIAEoCzIjLm1kZy5lbmdp",
                  "bmUucHJvdG8uUXVlcnlMYXRlbmN5U3RhdHMSTQoNcGVyX3R5cGVfc3RhdBgD",
                  "IAMoCzI2Lm1kZy5lbmdpbmUucHJvdG8uQ29udGV4dHVhbGl6ZWRTdGF0cy5Q",
                  "ZXJUeXBlU3RhdEVudHJ5Gk4KEFBlclR5cGVTdGF0RW50cnkSCwoDa2V5GAEg",
                  "ASgJEikKBXZhbHVlGAIgASgLMhoubWRnLmVuZ2luZS5wcm90by5UeXBlU3Rh",
                  "dDoCOAEiewoOVHJhY2VzQW5kU3RhdHMSJgoFdHJhY2UYASADKAsyFy5tZGcu",
                  "ZW5naW5lLnByb3RvLlRyYWNlEkEKEnN0YXRzX3dpdGhfY29udGV4dBgCIAMo",
                  "CzIlLm1kZy5lbmdpbmUucHJvdG8uQ29udGV4dHVhbGl6ZWRTdGF0c2IGcHJv",
                  "dG8z"));
            descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
                new pbr::FileDescriptor[] { global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, },
                new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Mdg.Engine.Proto.Trace), global::Mdg.Engine.Proto.Trace.Parser, new[]{ "StartTime", "EndTime", "DurationNs", "Root", "Signature", "UnexecutedOperationBody", "UnexecutedOperationName", "Details", "ClientName", "ClientVersion", "ClientAddress", "ClientReferenceId", "Http", "CachePolicy", "QueryPlan", "FullQueryCacheHit", "PersistedQueryHit", "PersistedQueryRegister", "RegisteredOperation", "ForbiddenOperation", "LegacySignatureNeedsResigning" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Mdg.Engine.Proto.Trace.Types.CachePolicy), global::Mdg.Engine.Proto.Trace.Types.CachePolicy.Parser, new[]{ "Scope", "MaxAgeNs" }, null, new[]{ typeof(global::Mdg.Engine.Proto.Trace.Types.CachePolicy.Types.Scope) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Mdg.Engine.Proto.Trace.Types.Details), global::Mdg.Engine.Proto.Trace.Types.Details.Parser, new[]{ "VariablesJson", "DeprecatedVariables", "OperationName" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Mdg.Engine.Proto.Trace.Types.Error), global::Mdg.Engine.Proto.Trace.Types.Error.Parser, new[]{ "Message", "Location", "TimeNs", "Json" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Mdg.Engine.Proto.Trace.Types.HTTP), global::Mdg.Engine.Proto.Trace.Types.HTTP.Parser, new[]{ "Method", "Host", "Path", "RequestHeaders", "ResponseHeaders", "StatusCode", "Secure", "Protocol" }, null, new[]{ typeof(global::Mdg.Engine.Proto.Trace.Types.HTTP.Types.Method) }, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Mdg.Engine.Proto.Trace.Types.HTTP.Types.Values), global::Mdg.Engine.Proto.Trace.Types.HTTP.Types.Values.Parser, new[]{ "Value" }, null, null, null, null),
            null, null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Mdg.Engine.Proto.Trace.Types.Location), global::Mdg.Engine.Proto.Trace.Types.Location.Parser, new[]{ "Line", "Column" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Mdg.Engine.Proto.Trace.Types.Node), global::Mdg.Engine.Proto.Trace.Types.Node.Parser, new[]{ "ResponseName", "Index", "OriginalFieldName", "Type", "ParentType", "CachePolicy", "StartTime", "EndTime", "Error", "Child" }, new[]{ "Id" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Mdg.Engine.Proto.Trace.Types.QueryPlanNode), global::Mdg.Engine.Proto.Trace.Types.QueryPlanNode.Parser, new[]{ "Sequence", "Parallel", "Fetch", "Flatten" }, new[]{ "Node" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Mdg.Engine.Proto.Trace.Types.QueryPlanNode.Types.SequenceNode), global::Mdg.Engine.Proto.Trace.Types.QueryPlanNode.Types.SequenceNode.Parser, new[]{ "Nodes" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Mdg.Engine.Proto.Trace.Types.QueryPlanNode.Types.ParallelNode), global::Mdg.Engine.Proto.Trace.Types.QueryPlanNode.Types.ParallelNode.Parser, new[]{ "Nodes" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Mdg.Engine.Proto.Trace.Types.QueryPlanNode.Types.FetchNode), global::Mdg.Engine.Proto.Trace.Types.QueryPlanNode.Types.FetchNode.Parser, new[]{ "ServiceName", "TraceParsingFailed", "Trace", "SentTimeOffset", "SentTime", "ReceivedTime" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Mdg.Engine.Proto.Trace.Types.QueryPlanNode.Types.FlattenNode), global::Mdg.Engine.Proto.Trace.Types.QueryPlanNode.Types.FlattenNode.Parser, new[]{ "ResponsePath", "Node" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Mdg.Engine.Proto.Trace.Types.QueryPlanNode.Types.ResponsePathElement), global::Mdg.Engine.Proto.Trace.Types.QueryPlanNode.Types.ResponsePathElement.Parser, new[]{ "FieldName", "Index" }, new[]{ "Id" }, null, null, null)})}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Mdg.Engine.Proto.ReportHeader), global::Mdg.Engine.Proto.ReportHeader.Parser, new[]{ "Hostname", "AgentVersion", "ServiceVersion", "RuntimeVersion", "Uname", "SchemaTag", "ExecutableSchemaId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Mdg.Engine.Proto.PathErrorStats), global::Mdg.Engine.Proto.PathErrorStats.Parser, new[]{ "Children", "ErrorsCount", "RequestsWithErrorsCount" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Mdg.Engine.Proto.QueryLatencyStats), global::Mdg.Engine.Proto.QueryLatencyStats.Parser, new[]{ "LatencyCount", "RequestCount", "CacheHits", "PersistedQueryHits", "PersistedQueryMisses", "CacheLatencyCount", "RootErrorStats", "RequestsWithErrorsCount", "PublicCacheTtlCount", "PrivateCacheTtlCount", "RegisteredOperationCount", "ForbiddenOperationCount" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Mdg.Engine.Proto.StatsContext), global::Mdg.Engine.Proto.StatsContext.Parser, new[]{ "ClientReferenceId", "ClientName", "ClientVersion" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Mdg.Engine.Proto.ContextualizedQueryLatencyStats), global::Mdg.Engine.Proto.ContextualizedQueryLatencyStats.Parser, new[]{ "QueryLatencyStats", "Context" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Mdg.Engine.Proto.ContextualizedTypeStats), global::Mdg.Engine.Proto.ContextualizedTypeStats.Parser, new[]{ "Context", "PerTypeStat" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Mdg.Engine.Proto.FieldStat), global::Mdg.Engine.Proto.FieldStat.Parser, new[]{ "ReturnType", "ErrorsCount", "Count", "RequestsWithErrorsCount", "LatencyCount" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Mdg.Engine.Proto.TypeStat), global::Mdg.Engine.Proto.TypeStat.Parser, new[]{ "PerFieldStat" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Mdg.Engine.Proto.Field), global::Mdg.Engine.Proto.Field.Parser, new[]{ "Name", "ReturnType" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Mdg.Engine.Proto.Type), global::Mdg.Engine.Proto.Type.Parser, new[]{ "Name", "Field" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Mdg.Engine.Proto.Report), global::Mdg.Engine.Proto.Report.Parser, new[]{ "Header", "TracesPerQuery", "EndTime" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Mdg.Engine.Proto.ContextualizedStats), global::Mdg.Engine.Proto.ContextualizedStats.Parser, new[]{ "Context", "QueryLatencyStats", "PerTypeStat" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Mdg.Engine.Proto.TracesAndStats), global::Mdg.Engine.Proto.TracesAndStats.Parser, new[]{ "Trace", "StatsWithContext" }, null, null, null, null)
                }));
        }
        #endregion

    }
    #region Messages
    public sealed partial class Trace : pb::IMessage<Trace>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
#endif
    {
        private static readonly pb::MessageParser<Trace> _parser = new pb::MessageParser<Trace>(() => new Trace());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Trace> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor
        {
            get { return global::Mdg.Engine.Proto.ReportsReflection.Descriptor.MessageTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor
        {
            get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Trace()
        {
            OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Trace(Trace other) : this()
        {
            startTime_ = other.startTime_ != null ? other.startTime_.Clone() : null;
            endTime_ = other.endTime_ != null ? other.endTime_.Clone() : null;
            durationNs_ = other.durationNs_;
            root_ = other.root_ != null ? other.root_.Clone() : null;
            signature_ = other.signature_;
            unexecutedOperationBody_ = other.unexecutedOperationBody_;
            unexecutedOperationName_ = other.unexecutedOperationName_;
            details_ = other.details_ != null ? other.details_.Clone() : null;
            clientName_ = other.clientName_;
            clientVersion_ = other.clientVersion_;
            clientAddress_ = other.clientAddress_;
            clientReferenceId_ = other.clientReferenceId_;
            http_ = other.http_ != null ? other.http_.Clone() : null;
            cachePolicy_ = other.cachePolicy_ != null ? other.cachePolicy_.Clone() : null;
            queryPlan_ = other.queryPlan_ != null ? other.queryPlan_.Clone() : null;
            fullQueryCacheHit_ = other.fullQueryCacheHit_;
            persistedQueryHit_ = other.persistedQueryHit_;
            persistedQueryRegister_ = other.persistedQueryRegister_;
            registeredOperation_ = other.registeredOperation_;
            forbiddenOperation_ = other.forbiddenOperation_;
            legacySignatureNeedsResigning_ = other.legacySignatureNeedsResigning_;
            _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Trace Clone()
        {
            return new Trace(this);
        }

        /// <summary>Field number for the "start_time" field.</summary>
        public const int StartTimeFieldNumber = 4;
        private global::Google.Protobuf.WellKnownTypes.Timestamp startTime_;
        /// <summary>
        /// Wallclock time when the trace began.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Google.Protobuf.WellKnownTypes.Timestamp StartTime
        {
            get { return startTime_; }
            set
            {
                startTime_ = value;
            }
        }

        /// <summary>Field number for the "end_time" field.</summary>
        public const int EndTimeFieldNumber = 3;
        private global::Google.Protobuf.WellKnownTypes.Timestamp endTime_;
        /// <summary>
        /// Wallclock time when the trace ended.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Google.Protobuf.WellKnownTypes.Timestamp EndTime
        {
            get { return endTime_; }
            set
            {
                endTime_ = value;
            }
        }

        /// <summary>Field number for the "duration_ns" field.</summary>
        public const int DurationNsFieldNumber = 11;
        private ulong durationNs_;
        /// <summary>
        /// High precision duration of the trace; may not equal end_time-start_time
        /// (eg, if your machine's clock changed during the trace).
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ulong DurationNs
        {
            get { return durationNs_; }
            set
            {
                durationNs_ = value;
            }
        }

        /// <summary>Field number for the "root" field.</summary>
        public const int RootFieldNumber = 14;
        private global::Mdg.Engine.Proto.Trace.Types.Node root_;
        /// <summary>
        /// A tree containing information about all resolvers run directly by this
        /// service, including errors.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Mdg.Engine.Proto.Trace.Types.Node Root
        {
            get { return root_; }
            set
            {
                root_ = value;
            }
        }

        /// <summary>Field number for the "signature" field.</summary>
        public const int SignatureFieldNumber = 19;
        private string signature_ = "";
        /// <summary>
        /// In addition to details.raw_query, we include a "signature" of the query,
        /// which can be normalized: for example, you may want to discard aliases, drop
        /// unused operations and fragments, sort fields, etc. The most important thing
        /// here is that the signature match the signature in StatsReports. In
        /// StatsReports signatures show up as the key in the per_query map (with the
        /// operation name prepended).  The signature should be a valid GraphQL query.
        /// All traces must have a signature; if this Trace is in a FullTracesReport
        /// that signature is in the key of traces_per_query rather than in this field.
        /// Engineproxy provides the signature in legacy_signature_needs_resigning
        /// instead.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Signature
        {
            get { return signature_; }
            set
            {
                signature_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
            }
        }

        /// <summary>Field number for the "unexecutedOperationBody" field.</summary>
        public const int UnexecutedOperationBodyFieldNumber = 27;
        private string unexecutedOperationBody_ = "";
        /// <summary>
        /// Optional: when GraphQL parsing or validation against the GraphQL schema fails, these fields
        /// can include reference to the operation being sent for users to dig into the set of operations
        /// that are failing validation.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string UnexecutedOperationBody
        {
            get { return unexecutedOperationBody_; }
            set
            {
                unexecutedOperationBody_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
            }
        }

        /// <summary>Field number for the "unexecutedOperationName" field.</summary>
        public const int UnexecutedOperationNameFieldNumber = 28;
        private string unexecutedOperationName_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string UnexecutedOperationName
        {
            get { return unexecutedOperationName_; }
            set
            {
                unexecutedOperationName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
            }
        }

        /// <summary>Field number for the "details" field.</summary>
        public const int DetailsFieldNumber = 6;
        private global::Mdg.Engine.Proto.Trace.Types.Details details_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Mdg.Engine.Proto.Trace.Types.Details Details
        {
            get { return details_; }
            set
            {
                details_ = value;
            }
        }

        /// <summary>Field number for the "client_name" field.</summary>
        public const int ClientNameFieldNumber = 7;
        private string clientName_ = "";
        /// <summary>
        /// Note: engineproxy always sets client_name, client_version, and client_address to "none".
        /// apollo-engine-reporting allows for them to be set by the user.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string ClientName
        {
            get { return clientName_; }
            set
            {
                clientName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
            }
        }

        /// <summary>Field number for the "client_version" field.</summary>
        public const int ClientVersionFieldNumber = 8;
        private string clientVersion_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string ClientVersion
        {
            get { return clientVersion_; }
            set
            {
                clientVersion_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
            }
        }

        /// <summary>Field number for the "client_address" field.</summary>
        public const int ClientAddressFieldNumber = 9;
        private string clientAddress_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string ClientAddress
        {
            get { return clientAddress_; }
            set
            {
                clientAddress_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
            }
        }

        /// <summary>Field number for the "client_reference_id" field.</summary>
        public const int ClientReferenceIdFieldNumber = 23;
        private string clientReferenceId_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string ClientReferenceId
        {
            get { return clientReferenceId_; }
            set
            {
                clientReferenceId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
            }
        }

        /// <summary>Field number for the "http" field.</summary>
        public const int HttpFieldNumber = 10;
        private global::Mdg.Engine.Proto.Trace.Types.HTTP http_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Mdg.Engine.Proto.Trace.Types.HTTP Http
        {
            get { return http_; }
            set
            {
                http_ = value;
            }
        }

        /// <summary>Field number for the "cache_policy" field.</summary>
        public const int CachePolicyFieldNumber = 18;
        private global::Mdg.Engine.Proto.Trace.Types.CachePolicy cachePolicy_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Mdg.Engine.Proto.Trace.Types.CachePolicy CachePolicy
        {
            get { return cachePolicy_; }
            set
            {
                cachePolicy_ = value;
            }
        }

        /// <summary>Field number for the "query_plan" field.</summary>
        public const int QueryPlanFieldNumber = 26;
        private global::Mdg.Engine.Proto.Trace.Types.QueryPlanNode queryPlan_;
        /// <summary>
        /// If this Trace was created by a gateway, this is the query plan, including
        /// sub-Traces for federated services. Note that the 'root' tree on the
        /// top-level Trace won't contain any resolvers (though it could contain errors
        /// that occurred in the gateway itself).
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Mdg.Engine.Proto.Trace.Types.QueryPlanNode QueryPlan
        {
            get { return queryPlan_; }
            set
            {
                queryPlan_ = value;
            }
        }

        /// <summary>Field number for the "full_query_cache_hit" field.</summary>
        public const int FullQueryCacheHitFieldNumber = 20;
        private bool fullQueryCacheHit_;
        /// <summary>
        /// Was this response served from a full query response cache?  (In that case
        /// the node tree will have no resolvers.)
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool FullQueryCacheHit
        {
            get { return fullQueryCacheHit_; }
            set
            {
                fullQueryCacheHit_ = value;
            }
        }

        /// <summary>Field number for the "persisted_query_hit" field.</summary>
        public const int PersistedQueryHitFieldNumber = 21;
        private bool persistedQueryHit_;
        /// <summary>
        /// Was this query specified successfully as a persisted query hash?
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool PersistedQueryHit
        {
            get { return persistedQueryHit_; }
            set
            {
                persistedQueryHit_ = value;
            }
        }

        /// <summary>Field number for the "persisted_query_register" field.</summary>
        public const int PersistedQueryRegisterFieldNumber = 22;
        private bool persistedQueryRegister_;
        /// <summary>
        /// Did this query contain both a full query string and a persisted query hash?
        /// (This typically means that a previous request was rejected as an unknown
        /// persisted query.)
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool PersistedQueryRegister
        {
            get { return persistedQueryRegister_; }
            set
            {
                persistedQueryRegister_ = value;
            }
        }

        /// <summary>Field number for the "registered_operation" field.</summary>
        public const int RegisteredOperationFieldNumber = 24;
        private bool registeredOperation_;
        /// <summary>
        /// Was this operation registered and a part of the safelist?
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool RegisteredOperation
        {
            get { return registeredOperation_; }
            set
            {
                registeredOperation_ = value;
            }
        }

        /// <summary>Field number for the "forbidden_operation" field.</summary>
        public const int ForbiddenOperationFieldNumber = 25;
        private bool forbiddenOperation_;
        /// <summary>
        /// Was this operation forbidden due to lack of safelisting?
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool ForbiddenOperation
        {
            get { return forbiddenOperation_; }
            set
            {
                forbiddenOperation_ = value;
            }
        }

        /// <summary>Field number for the "legacy_signature_needs_resigning" field.</summary>
        public const int LegacySignatureNeedsResigningFieldNumber = 5;
        private string legacySignatureNeedsResigning_ = "";
        /// <summary>
        /// Older agents (eg the Go engineproxy) relied to some degree on the Engine
        /// backend to run their own semi-compatible implementation of a specific
        /// variant of query signatures. The backend does not do this for new agents (which
        /// set the above 'signature' field). It used to still "re-sign" signatures
        /// from engineproxy, but we've now simplified the backend to no longer do this.
        /// Deprecated and ignored in FullTracesReports.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string LegacySignatureNeedsResigning
        {
            get { return legacySignatureNeedsResigning_; }
            set
            {
                legacySignatureNeedsResigning_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other)
        {
            return Equals(other as Trace);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Trace other)
        {
            if (ReferenceEquals(other, null))
            {
                return false;
            }
            if (ReferenceEquals(other, this))
            {
                return true;
            }
            if (!object.Equals(StartTime, other.StartTime)) return false;
            if (!object.Equals(EndTime, other.EndTime)) return false;
            if (DurationNs != other.DurationNs) return false;
            if (!object.Equals(Root, other.Root)) return false;
            if (Signature != other.Signature) return false;
            if (UnexecutedOperationBody != other.UnexecutedOperationBody) return false;
            if (UnexecutedOperationName != other.UnexecutedOperationName) return false;
            if (!object.Equals(Details, other.Details)) return false;
            if (ClientName != other.ClientName) return false;
            if (ClientVersion != other.ClientVersion) return false;
            if (ClientAddress != other.ClientAddress) return false;
            if (ClientReferenceId != other.ClientReferenceId) return false;
            if (!object.Equals(Http, other.Http)) return false;
            if (!object.Equals(CachePolicy, other.CachePolicy)) return false;
            if (!object.Equals(QueryPlan, other.QueryPlan)) return false;
            if (FullQueryCacheHit != other.FullQueryCacheHit) return false;
            if (PersistedQueryHit != other.PersistedQueryHit) return false;
            if (PersistedQueryRegister != other.PersistedQueryRegister) return false;
            if (RegisteredOperation != other.RegisteredOperation) return false;
            if (ForbiddenOperation != other.ForbiddenOperation) return false;
            if (LegacySignatureNeedsResigning != other.LegacySignatureNeedsResigning) return false;
            return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode()
        {
            int hash = 1;
            if (startTime_ != null) hash ^= StartTime.GetHashCode();
            if (endTime_ != null) hash ^= EndTime.GetHashCode();
            if (DurationNs != 0UL) hash ^= DurationNs.GetHashCode();
            if (root_ != null) hash ^= Root.GetHashCode();
            if (Signature.Length != 0) hash ^= Signature.GetHashCode();
            if (UnexecutedOperationBody.Length != 0) hash ^= UnexecutedOperationBody.GetHashCode();
            if (UnexecutedOperationName.Length != 0) hash ^= UnexecutedOperationName.GetHashCode();
            if (details_ != null) hash ^= Details.GetHashCode();
            if (ClientName.Length != 0) hash ^= ClientName.GetHashCode();
            if (ClientVersion.Length != 0) hash ^= ClientVersion.GetHashCode();
            if (ClientAddress.Length != 0) hash ^= ClientAddress.GetHashCode();
            if (ClientReferenceId.Length != 0) hash ^= ClientReferenceId.GetHashCode();
            if (http_ != null) hash ^= Http.GetHashCode();
            if (cachePolicy_ != null) hash ^= CachePolicy.GetHashCode();
            if (queryPlan_ != null) hash ^= QueryPlan.GetHashCode();
            if (FullQueryCacheHit != false) hash ^= FullQueryCacheHit.GetHashCode();
            if (PersistedQueryHit != false) hash ^= PersistedQueryHit.GetHashCode();
            if (PersistedQueryRegister != false) hash ^= PersistedQueryRegister.GetHashCode();
            if (RegisteredOperation != false) hash ^= RegisteredOperation.GetHashCode();
            if (ForbiddenOperation != false) hash ^= ForbiddenOperation.GetHashCode();
            if (LegacySignatureNeedsResigning.Length != 0) hash ^= LegacySignatureNeedsResigning.GetHashCode();
            if (_unknownFields != null)
            {
                hash ^= _unknownFields.GetHashCode();
            }
            return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString()
        {
            return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output)
        {
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            output.WriteRawMessage(this);
#else
      if (endTime_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(EndTime);
      }
      if (startTime_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(StartTime);
      }
      if (LegacySignatureNeedsResigning.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(LegacySignatureNeedsResigning);
      }
      if (details_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(Details);
      }
      if (ClientName.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(ClientName);
      }
      if (ClientVersion.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(ClientVersion);
      }
      if (ClientAddress.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(ClientAddress);
      }
      if (http_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(Http);
      }
      if (DurationNs != 0UL) {
        output.WriteRawTag(88);
        output.WriteUInt64(DurationNs);
      }
      if (root_ != null) {
        output.WriteRawTag(114);
        output.WriteMessage(Root);
      }
      if (cachePolicy_ != null) {
        output.WriteRawTag(146, 1);
        output.WriteMessage(CachePolicy);
      }
      if (Signature.Length != 0) {
        output.WriteRawTag(154, 1);
        output.WriteString(Signature);
      }
      if (FullQueryCacheHit != false) {
        output.WriteRawTag(160, 1);
        output.WriteBool(FullQueryCacheHit);
      }
      if (PersistedQueryHit != false) {
        output.WriteRawTag(168, 1);
        output.WriteBool(PersistedQueryHit);
      }
      if (PersistedQueryRegister != false) {
        output.WriteRawTag(176, 1);
        output.WriteBool(PersistedQueryRegister);
      }
      if (ClientReferenceId.Length != 0) {
        output.WriteRawTag(186, 1);
        output.WriteString(ClientReferenceId);
      }
      if (RegisteredOperation != false) {
        output.WriteRawTag(192, 1);
        output.WriteBool(RegisteredOperation);
      }
      if (ForbiddenOperation != false) {
        output.WriteRawTag(200, 1);
        output.WriteBool(ForbiddenOperation);
      }
      if (queryPlan_ != null) {
        output.WriteRawTag(210, 1);
        output.WriteMessage(QueryPlan);
      }
      if (UnexecutedOperationBody.Length != 0) {
        output.WriteRawTag(218, 1);
        output.WriteString(UnexecutedOperationBody);
      }
      if (UnexecutedOperationName.Length != 0) {
        output.WriteRawTag(226, 1);
        output.WriteString(UnexecutedOperationName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
#endif
        }

#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output)
        {
            if (endTime_ != null)
            {
                output.WriteRawTag(26);
                output.WriteMessage(EndTime);
            }
            if (startTime_ != null)
            {
                output.WriteRawTag(34);
                output.WriteMessage(StartTime);
            }
            if (LegacySignatureNeedsResigning.Length != 0)
            {
                output.WriteRawTag(42);
                output.WriteString(LegacySignatureNeedsResigning);
            }
            if (details_ != null)
            {
                output.WriteRawTag(50);
                output.WriteMessage(Details);
            }
            if (ClientName.Length != 0)
            {
                output.WriteRawTag(58);
                output.WriteString(ClientName);
            }
            if (ClientVersion.Length != 0)
            {
                output.WriteRawTag(66);
                output.WriteString(ClientVersion);
            }
            if (ClientAddress.Length != 0)
            {
                output.WriteRawTag(74);
                output.WriteString(ClientAddress);
            }
            if (http_ != null)
            {
                output.WriteRawTag(82);
                output.WriteMessage(Http);
            }
            if (DurationNs != 0UL)
            {
                output.WriteRawTag(88);
                output.WriteUInt64(DurationNs);
            }
            if (root_ != null)
            {
                output.WriteRawTag(114);
                output.WriteMessage(Root);
            }
            if (cachePolicy_ != null)
            {
                output.WriteRawTag(146, 1);
                output.WriteMessage(CachePolicy);
            }
            if (Signature.Length != 0)
            {
                output.WriteRawTag(154, 1);
                output.WriteString(Signature);
            }
            if (FullQueryCacheHit != false)
            {
                output.WriteRawTag(160, 1);
                output.WriteBool(FullQueryCacheHit);
            }
            if (PersistedQueryHit != false)
            {
                output.WriteRawTag(168, 1);
                output.WriteBool(PersistedQueryHit);
            }
            if (PersistedQueryRegister != false)
            {
                output.WriteRawTag(176, 1);
                output.WriteBool(PersistedQueryRegister);
            }
            if (ClientReferenceId.Length != 0)
            {
                output.WriteRawTag(186, 1);
                output.WriteString(ClientReferenceId);
            }
            if (RegisteredOperation != false)
            {
                output.WriteRawTag(192, 1);
                output.WriteBool(RegisteredOperation);
            }
            if (ForbiddenOperation != false)
            {
                output.WriteRawTag(200, 1);
                output.WriteBool(ForbiddenOperation);
            }
            if (queryPlan_ != null)
            {
                output.WriteRawTag(210, 1);
                output.WriteMessage(QueryPlan);
            }
            if (UnexecutedOperationBody.Length != 0)
            {
                output.WriteRawTag(218, 1);
                output.WriteString(UnexecutedOperationBody);
            }
            if (UnexecutedOperationName.Length != 0)
            {
                output.WriteRawTag(226, 1);
                output.WriteString(UnexecutedOperationName);
            }
            if (_unknownFields != null)
            {
                _unknownFields.WriteTo(ref output);
            }
        }
#endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize()
        {
            int size = 0;
            if (startTime_ != null)
            {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(StartTime);
            }
            if (endTime_ != null)
            {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(EndTime);
            }
            if (DurationNs != 0UL)
            {
                size += 1 + pb::CodedOutputStream.ComputeUInt64Size(DurationNs);
            }
            if (root_ != null)
            {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(Root);
            }
            if (Signature.Length != 0)
            {
                size += 2 + pb::CodedOutputStream.ComputeStringSize(Signature);
            }
            if (UnexecutedOperationBody.Length != 0)
            {
                size += 2 + pb::CodedOutputStream.ComputeStringSize(UnexecutedOperationBody);
            }
            if (UnexecutedOperationName.Length != 0)
            {
                size += 2 + pb::CodedOutputStream.ComputeStringSize(UnexecutedOperationName);
            }
            if (details_ != null)
            {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(Details);
            }
            if (ClientName.Length != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(ClientName);
            }
            if (ClientVersion.Length != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(ClientVersion);
            }
            if (ClientAddress.Length != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(ClientAddress);
            }
            if (ClientReferenceId.Length != 0)
            {
                size += 2 + pb::CodedOutputStream.ComputeStringSize(ClientReferenceId);
            }
            if (http_ != null)
            {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(Http);
            }
            if (cachePolicy_ != null)
            {
                size += 2 + pb::CodedOutputStream.ComputeMessageSize(CachePolicy);
            }
            if (queryPlan_ != null)
            {
                size += 2 + pb::CodedOutputStream.ComputeMessageSize(QueryPlan);
            }
            if (FullQueryCacheHit != false)
            {
                size += 2 + 1;
            }
            if (PersistedQueryHit != false)
            {
                size += 2 + 1;
            }
            if (PersistedQueryRegister != false)
            {
                size += 2 + 1;
            }
            if (RegisteredOperation != false)
            {
                size += 2 + 1;
            }
            if (ForbiddenOperation != false)
            {
                size += 2 + 1;
            }
            if (LegacySignatureNeedsResigning.Length != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(LegacySignatureNeedsResigning);
            }
            if (_unknownFields != null)
            {
                size += _unknownFields.CalculateSize();
            }
            return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Trace other)
        {
            if (other == null)
            {
                return;
            }
            if (other.startTime_ != null)
            {
                if (startTime_ == null)
                {
                    StartTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
                }
                StartTime.MergeFrom(other.StartTime);
            }
            if (other.endTime_ != null)
            {
                if (endTime_ == null)
                {
                    EndTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
                }
                EndTime.MergeFrom(other.EndTime);
            }
            if (other.DurationNs != 0UL)
            {
                DurationNs = other.DurationNs;
            }
            if (other.root_ != null)
            {
                if (root_ == null)
                {
                    Root = new global::Mdg.Engine.Proto.Trace.Types.Node();
                }
                Root.MergeFrom(other.Root);
            }
            if (other.Signature.Length != 0)
            {
                Signature = other.Signature;
            }
            if (other.UnexecutedOperationBody.Length != 0)
            {
                UnexecutedOperationBody = other.UnexecutedOperationBody;
            }
            if (other.UnexecutedOperationName.Length != 0)
            {
                UnexecutedOperationName = other.UnexecutedOperationName;
            }
            if (other.details_ != null)
            {
                if (details_ == null)
                {
                    Details = new global::Mdg.Engine.Proto.Trace.Types.Details();
                }
                Details.MergeFrom(other.Details);
            }
            if (other.ClientName.Length != 0)
            {
                ClientName = other.ClientName;
            }
            if (other.ClientVersion.Length != 0)
            {
                ClientVersion = other.ClientVersion;
            }
            if (other.ClientAddress.Length != 0)
            {
                ClientAddress = other.ClientAddress;
            }
            if (other.ClientReferenceId.Length != 0)
            {
                ClientReferenceId = other.ClientReferenceId;
            }
            if (other.http_ != null)
            {
                if (http_ == null)
                {
                    Http = new global::Mdg.Engine.Proto.Trace.Types.HTTP();
                }
                Http.MergeFrom(other.Http);
            }
            if (other.cachePolicy_ != null)
            {
                if (cachePolicy_ == null)
                {
                    CachePolicy = new global::Mdg.Engine.Proto.Trace.Types.CachePolicy();
                }
                CachePolicy.MergeFrom(other.CachePolicy);
            }
            if (other.queryPlan_ != null)
            {
                if (queryPlan_ == null)
                {
                    QueryPlan = new global::Mdg.Engine.Proto.Trace.Types.QueryPlanNode();
                }
                QueryPlan.MergeFrom(other.QueryPlan);
            }
            if (other.FullQueryCacheHit != false)
            {
                FullQueryCacheHit = other.FullQueryCacheHit;
            }
            if (other.PersistedQueryHit != false)
            {
                PersistedQueryHit = other.PersistedQueryHit;
            }
            if (other.PersistedQueryRegister != false)
            {
                PersistedQueryRegister = other.PersistedQueryRegister;
            }
            if (other.RegisteredOperation != false)
            {
                RegisteredOperation = other.RegisteredOperation;
            }
            if (other.ForbiddenOperation != false)
            {
                ForbiddenOperation = other.ForbiddenOperation;
            }
            if (other.LegacySignatureNeedsResigning.Length != 0)
            {
                LegacySignatureNeedsResigning = other.LegacySignatureNeedsResigning;
            }
            _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input)
        {
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            input.ReadRawMessage(this);
#else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 26: {
            if (endTime_ == null) {
              EndTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(EndTime);
            break;
          }
          case 34: {
            if (startTime_ == null) {
              StartTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(StartTime);
            break;
          }
          case 42: {
            LegacySignatureNeedsResigning = input.ReadString();
            break;
          }
          case 50: {
            if (details_ == null) {
              Details = new global::Mdg.Engine.Proto.Trace.Types.Details();
            }
            input.ReadMessage(Details);
            break;
          }
          case 58: {
            ClientName = input.ReadString();
            break;
          }
          case 66: {
            ClientVersion = input.ReadString();
            break;
          }
          case 74: {
            ClientAddress = input.ReadString();
            break;
          }
          case 82: {
            if (http_ == null) {
              Http = new global::Mdg.Engine.Proto.Trace.Types.HTTP();
            }
            input.ReadMessage(Http);
            break;
          }
          case 88: {
            DurationNs = input.ReadUInt64();
            break;
          }
          case 114: {
            if (root_ == null) {
              Root = new global::Mdg.Engine.Proto.Trace.Types.Node();
            }
            input.ReadMessage(Root);
            break;
          }
          case 146: {
            if (cachePolicy_ == null) {
              CachePolicy = new global::Mdg.Engine.Proto.Trace.Types.CachePolicy();
            }
            input.ReadMessage(CachePolicy);
            break;
          }
          case 154: {
            Signature = input.ReadString();
            break;
          }
          case 160: {
            FullQueryCacheHit = input.ReadBool();
            break;
          }
          case 168: {
            PersistedQueryHit = input.ReadBool();
            break;
          }
          case 176: {
            PersistedQueryRegister = input.ReadBool();
            break;
          }
          case 186: {
            ClientReferenceId = input.ReadString();
            break;
          }
          case 192: {
            RegisteredOperation = input.ReadBool();
            break;
          }
          case 200: {
            ForbiddenOperation = input.ReadBool();
            break;
          }
          case 210: {
            if (queryPlan_ == null) {
              QueryPlan = new global::Mdg.Engine.Proto.Trace.Types.QueryPlanNode();
            }
            input.ReadMessage(QueryPlan);
            break;
          }
          case 218: {
            UnexecutedOperationBody = input.ReadString();
            break;
          }
          case 226: {
            UnexecutedOperationName = input.ReadString();
            break;
          }
        }
      }
#endif
        }

#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input)
        {
            uint tag;
            while ((tag = input.ReadTag()) != 0)
            {
                switch (tag)
                {
                    default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                        break;
                    case 26:
                        {
                            if (endTime_ == null)
                            {
                                EndTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
                            }
                            input.ReadMessage(EndTime);
                            break;
                        }
                    case 34:
                        {
                            if (startTime_ == null)
                            {
                                StartTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
                            }
                            input.ReadMessage(StartTime);
                            break;
                        }
                    case 42:
                        {
                            LegacySignatureNeedsResigning = input.ReadString();
                            break;
                        }
                    case 50:
                        {
                            if (details_ == null)
                            {
                                Details = new global::Mdg.Engine.Proto.Trace.Types.Details();
                            }
                            input.ReadMessage(Details);
                            break;
                        }
                    case 58:
                        {
                            ClientName = input.ReadString();
                            break;
                        }
                    case 66:
                        {
                            ClientVersion = input.ReadString();
                            break;
                        }
                    case 74:
                        {
                            ClientAddress = input.ReadString();
                            break;
                        }
                    case 82:
                        {
                            if (http_ == null)
                            {
                                Http = new global::Mdg.Engine.Proto.Trace.Types.HTTP();
                            }
                            input.ReadMessage(Http);
                            break;
                        }
                    case 88:
                        {
                            DurationNs = input.ReadUInt64();
                            break;
                        }
                    case 114:
                        {
                            if (root_ == null)
                            {
                                Root = new global::Mdg.Engine.Proto.Trace.Types.Node();
                            }
                            input.ReadMessage(Root);
                            break;
                        }
                    case 146:
                        {
                            if (cachePolicy_ == null)
                            {
                                CachePolicy = new global::Mdg.Engine.Proto.Trace.Types.CachePolicy();
                            }
                            input.ReadMessage(CachePolicy);
                            break;
                        }
                    case 154:
                        {
                            Signature = input.ReadString();
                            break;
                        }
                    case 160:
                        {
                            FullQueryCacheHit = input.ReadBool();
                            break;
                        }
                    case 168:
                        {
                            PersistedQueryHit = input.ReadBool();
                            break;
                        }
                    case 176:
                        {
                            PersistedQueryRegister = input.ReadBool();
                            break;
                        }
                    case 186:
                        {
                            ClientReferenceId = input.ReadString();
                            break;
                        }
                    case 192:
                        {
                            RegisteredOperation = input.ReadBool();
                            break;
                        }
                    case 200:
                        {
                            ForbiddenOperation = input.ReadBool();
                            break;
                        }
                    case 210:
                        {
                            if (queryPlan_ == null)
                            {
                                QueryPlan = new global::Mdg.Engine.Proto.Trace.Types.QueryPlanNode();
                            }
                            input.ReadMessage(QueryPlan);
                            break;
                        }
                    case 218:
                        {
                            UnexecutedOperationBody = input.ReadString();
                            break;
                        }
                    case 226:
                        {
                            UnexecutedOperationName = input.ReadString();
                            break;
                        }
                }
            }
        }
#endif

        #region Nested types
        /// <summary>Container for nested types declared in the Trace message type.</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static partial class Types
        {
            public sealed partial class CachePolicy : pb::IMessage<CachePolicy>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
#endif
            {
                private static readonly pb::MessageParser<CachePolicy> _parser = new pb::MessageParser<CachePolicy>(() => new CachePolicy());
                private pb::UnknownFieldSet _unknownFields;
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public static pb::MessageParser<CachePolicy> Parser { get { return _parser; } }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public static pbr::MessageDescriptor Descriptor
                {
                    get { return global::Mdg.Engine.Proto.Trace.Descriptor.NestedTypes[0]; }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                pbr::MessageDescriptor pb::IMessage.Descriptor
                {
                    get { return Descriptor; }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public CachePolicy()
                {
                    OnConstruction();
                }

                partial void OnConstruction();

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public CachePolicy(CachePolicy other) : this()
                {
                    scope_ = other.scope_;
                    maxAgeNs_ = other.maxAgeNs_;
                    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public CachePolicy Clone()
                {
                    return new CachePolicy(this);
                }

                /// <summary>Field number for the "scope" field.</summary>
                public const int ScopeFieldNumber = 1;
                private global::Mdg.Engine.Proto.Trace.Types.CachePolicy.Types.Scope scope_ = global::Mdg.Engine.Proto.Trace.Types.CachePolicy.Types.Scope.Unknown;
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public global::Mdg.Engine.Proto.Trace.Types.CachePolicy.Types.Scope Scope
                {
                    get { return scope_; }
                    set
                    {
                        scope_ = value;
                    }
                }

                /// <summary>Field number for the "max_age_ns" field.</summary>
                public const int MaxAgeNsFieldNumber = 2;
                private long maxAgeNs_;
                /// <summary>
                /// use 0 for absent, -1 for 0
                /// </summary>
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public long MaxAgeNs
                {
                    get { return maxAgeNs_; }
                    set
                    {
                        maxAgeNs_ = value;
                    }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public override bool Equals(object other)
                {
                    return Equals(other as CachePolicy);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public bool Equals(CachePolicy other)
                {
                    if (ReferenceEquals(other, null))
                    {
                        return false;
                    }
                    if (ReferenceEquals(other, this))
                    {
                        return true;
                    }
                    if (Scope != other.Scope) return false;
                    if (MaxAgeNs != other.MaxAgeNs) return false;
                    return Equals(_unknownFields, other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public override int GetHashCode()
                {
                    int hash = 1;
                    if (Scope != global::Mdg.Engine.Proto.Trace.Types.CachePolicy.Types.Scope.Unknown) hash ^= Scope.GetHashCode();
                    if (MaxAgeNs != 0L) hash ^= MaxAgeNs.GetHashCode();
                    if (_unknownFields != null)
                    {
                        hash ^= _unknownFields.GetHashCode();
                    }
                    return hash;
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public override string ToString()
                {
                    return pb::JsonFormatter.ToDiagnosticString(this);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public void WriteTo(pb::CodedOutputStream output)
                {
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                    output.WriteRawMessage(this);
#else
          if (Scope != global::Mdg.Engine.Proto.Trace.Types.CachePolicy.Types.Scope.Unknown) {
            output.WriteRawTag(8);
            output.WriteEnum((int) Scope);
          }
          if (MaxAgeNs != 0L) {
            output.WriteRawTag(16);
            output.WriteInt64(MaxAgeNs);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
#endif
                }

#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output)
                {
                    if (Scope != global::Mdg.Engine.Proto.Trace.Types.CachePolicy.Types.Scope.Unknown)
                    {
                        output.WriteRawTag(8);
                        output.WriteEnum((int)Scope);
                    }
                    if (MaxAgeNs != 0L)
                    {
                        output.WriteRawTag(16);
                        output.WriteInt64(MaxAgeNs);
                    }
                    if (_unknownFields != null)
                    {
                        _unknownFields.WriteTo(ref output);
                    }
                }
#endif

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public int CalculateSize()
                {
                    int size = 0;
                    if (Scope != global::Mdg.Engine.Proto.Trace.Types.CachePolicy.Types.Scope.Unknown)
                    {
                        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int)Scope);
                    }
                    if (MaxAgeNs != 0L)
                    {
                        size += 1 + pb::CodedOutputStream.ComputeInt64Size(MaxAgeNs);
                    }
                    if (_unknownFields != null)
                    {
                        size += _unknownFields.CalculateSize();
                    }
                    return size;
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public void MergeFrom(CachePolicy other)
                {
                    if (other == null)
                    {
                        return;
                    }
                    if (other.Scope != global::Mdg.Engine.Proto.Trace.Types.CachePolicy.Types.Scope.Unknown)
                    {
                        Scope = other.Scope;
                    }
                    if (other.MaxAgeNs != 0L)
                    {
                        MaxAgeNs = other.MaxAgeNs;
                    }
                    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public void MergeFrom(pb::CodedInputStream input)
                {
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                    input.ReadRawMessage(this);
#else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                Scope = (global::Mdg.Engine.Proto.Trace.Types.CachePolicy.Types.Scope) input.ReadEnum();
                break;
              }
              case 16: {
                MaxAgeNs = input.ReadInt64();
                break;
              }
            }
          }
#endif
                }

#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input)
                {
                    uint tag;
                    while ((tag = input.ReadTag()) != 0)
                    {
                        switch (tag)
                        {
                            default:
                                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                                break;
                            case 8:
                                {
                                    Scope = (global::Mdg.Engine.Proto.Trace.Types.CachePolicy.Types.Scope)input.ReadEnum();
                                    break;
                                }
                            case 16:
                                {
                                    MaxAgeNs = input.ReadInt64();
                                    break;
                                }
                        }
                    }
                }
#endif

                #region Nested types
                /// <summary>Container for nested types declared in the CachePolicy message type.</summary>
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public static partial class Types
                {
                    public enum Scope
                    {
                        [pbr::OriginalName("UNKNOWN")] Unknown = 0,
                        [pbr::OriginalName("PUBLIC")] Public = 1,
                        [pbr::OriginalName("PRIVATE")] Private = 2,
                    }

                }
                #endregion

            }

            public sealed partial class Details : pb::IMessage<Details>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
#endif
            {
                private static readonly pb::MessageParser<Details> _parser = new pb::MessageParser<Details>(() => new Details());
                private pb::UnknownFieldSet _unknownFields;
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public static pb::MessageParser<Details> Parser { get { return _parser; } }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public static pbr::MessageDescriptor Descriptor
                {
                    get { return global::Mdg.Engine.Proto.Trace.Descriptor.NestedTypes[1]; }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                pbr::MessageDescriptor pb::IMessage.Descriptor
                {
                    get { return Descriptor; }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public Details()
                {
                    OnConstruction();
                }

                partial void OnConstruction();

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public Details(Details other) : this()
                {
                    variablesJson_ = other.variablesJson_.Clone();
                    deprecatedVariables_ = other.deprecatedVariables_.Clone();
                    operationName_ = other.operationName_;
                    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public Details Clone()
                {
                    return new Details(this);
                }

                /// <summary>Field number for the "variables_json" field.</summary>
                public const int VariablesJsonFieldNumber = 4;
                private static readonly pbc::MapField<string, string>.Codec _map_variablesJson_codec
                    = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForString(18, ""), 34);
                private readonly pbc::MapField<string, string> variablesJson_ = new pbc::MapField<string, string>();
                /// <summary>
                /// The variables associated with this query (unless the reporting agent is
                /// configured to keep them all private). Values are JSON: ie, strings are
                /// enclosed in double quotes, etc.  The value of a private variable is
                /// the empty string.
                /// </summary>
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public pbc::MapField<string, string> VariablesJson
                {
                    get { return variablesJson_; }
                }

                /// <summary>Field number for the "deprecated_variables" field.</summary>
                public const int DeprecatedVariablesFieldNumber = 1;
                private static readonly pbc::MapField<string, pb::ByteString>.Codec _map_deprecatedVariables_codec
                    = new pbc::MapField<string, pb::ByteString>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForBytes(18, pb::ByteString.Empty), 10);
                private readonly pbc::MapField<string, pb::ByteString> deprecatedVariables_ = new pbc::MapField<string, pb::ByteString>();
                /// <summary>
                /// Deprecated. Engineproxy did not encode variable values as JSON, so you
                /// couldn't tell numbers from numeric strings. Send variables_json instead.
                /// </summary>
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public pbc::MapField<string, pb::ByteString> DeprecatedVariables
                {
                    get { return deprecatedVariables_; }
                }

                /// <summary>Field number for the "operation_name" field.</summary>
                public const int OperationNameFieldNumber = 3;
                private string operationName_ = "";
                /// <summary>
                /// This is deprecated and only used for legacy applications
                /// don't include this in traces inside a FullTracesReport; the operation
                /// name for these traces comes from the key of the traces_per_query map.
                /// </summary>
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public string OperationName
                {
                    get { return operationName_; }
                    set
                    {
                        operationName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
                    }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public override bool Equals(object other)
                {
                    return Equals(other as Details);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public bool Equals(Details other)
                {
                    if (ReferenceEquals(other, null))
                    {
                        return false;
                    }
                    if (ReferenceEquals(other, this))
                    {
                        return true;
                    }
                    if (!VariablesJson.Equals(other.VariablesJson)) return false;
                    if (!DeprecatedVariables.Equals(other.DeprecatedVariables)) return false;
                    if (OperationName != other.OperationName) return false;
                    return Equals(_unknownFields, other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public override int GetHashCode()
                {
                    int hash = 1;
                    hash ^= VariablesJson.GetHashCode();
                    hash ^= DeprecatedVariables.GetHashCode();
                    if (OperationName.Length != 0) hash ^= OperationName.GetHashCode();
                    if (_unknownFields != null)
                    {
                        hash ^= _unknownFields.GetHashCode();
                    }
                    return hash;
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public override string ToString()
                {
                    return pb::JsonFormatter.ToDiagnosticString(this);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public void WriteTo(pb::CodedOutputStream output)
                {
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                    output.WriteRawMessage(this);
#else
          deprecatedVariables_.WriteTo(output, _map_deprecatedVariables_codec);
          if (OperationName.Length != 0) {
            output.WriteRawTag(26);
            output.WriteString(OperationName);
          }
          variablesJson_.WriteTo(output, _map_variablesJson_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
#endif
                }

#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output)
                {
                    deprecatedVariables_.WriteTo(ref output, _map_deprecatedVariables_codec);
                    if (OperationName.Length != 0)
                    {
                        output.WriteRawTag(26);
                        output.WriteString(OperationName);
                    }
                    variablesJson_.WriteTo(ref output, _map_variablesJson_codec);
                    if (_unknownFields != null)
                    {
                        _unknownFields.WriteTo(ref output);
                    }
                }
#endif

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public int CalculateSize()
                {
                    int size = 0;
                    size += variablesJson_.CalculateSize(_map_variablesJson_codec);
                    size += deprecatedVariables_.CalculateSize(_map_deprecatedVariables_codec);
                    if (OperationName.Length != 0)
                    {
                        size += 1 + pb::CodedOutputStream.ComputeStringSize(OperationName);
                    }
                    if (_unknownFields != null)
                    {
                        size += _unknownFields.CalculateSize();
                    }
                    return size;
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public void MergeFrom(Details other)
                {
                    if (other == null)
                    {
                        return;
                    }
                    variablesJson_.Add(other.variablesJson_);
                    deprecatedVariables_.Add(other.deprecatedVariables_);
                    if (other.OperationName.Length != 0)
                    {
                        OperationName = other.OperationName;
                    }
                    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public void MergeFrom(pb::CodedInputStream input)
                {
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                    input.ReadRawMessage(this);
#else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                deprecatedVariables_.AddEntriesFrom(input, _map_deprecatedVariables_codec);
                break;
              }
              case 26: {
                OperationName = input.ReadString();
                break;
              }
              case 34: {
                variablesJson_.AddEntriesFrom(input, _map_variablesJson_codec);
                break;
              }
            }
          }
#endif
                }

#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input)
                {
                    uint tag;
                    while ((tag = input.ReadTag()) != 0)
                    {
                        switch (tag)
                        {
                            default:
                                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                                break;
                            case 10:
                                {
                                    deprecatedVariables_.AddEntriesFrom(ref input, _map_deprecatedVariables_codec);
                                    break;
                                }
                            case 26:
                                {
                                    OperationName = input.ReadString();
                                    break;
                                }
                            case 34:
                                {
                                    variablesJson_.AddEntriesFrom(ref input, _map_variablesJson_codec);
                                    break;
                                }
                        }
                    }
                }
#endif

            }

            public sealed partial class Error : pb::IMessage<Error>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
#endif
            {
                private static readonly pb::MessageParser<Error> _parser = new pb::MessageParser<Error>(() => new Error());
                private pb::UnknownFieldSet _unknownFields;
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public static pb::MessageParser<Error> Parser { get { return _parser; } }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public static pbr::MessageDescriptor Descriptor
                {
                    get { return global::Mdg.Engine.Proto.Trace.Descriptor.NestedTypes[2]; }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                pbr::MessageDescriptor pb::IMessage.Descriptor
                {
                    get { return Descriptor; }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public Error()
                {
                    OnConstruction();
                }

                partial void OnConstruction();

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public Error(Error other) : this()
                {
                    message_ = other.message_;
                    location_ = other.location_.Clone();
                    timeNs_ = other.timeNs_;
                    json_ = other.json_;
                    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public Error Clone()
                {
                    return new Error(this);
                }

                /// <summary>Field number for the "message" field.</summary>
                public const int MessageFieldNumber = 1;
                private string message_ = "";
                /// <summary>
                /// required
                /// </summary>
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public string Message
                {
                    get { return message_; }
                    set
                    {
                        message_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
                    }
                }

                /// <summary>Field number for the "location" field.</summary>
                public const int LocationFieldNumber = 2;
                private static readonly pb::FieldCodec<global::Mdg.Engine.Proto.Trace.Types.Location> _repeated_location_codec
                    = pb::FieldCodec.ForMessage(18, global::Mdg.Engine.Proto.Trace.Types.Location.Parser);
                private readonly pbc::RepeatedField<global::Mdg.Engine.Proto.Trace.Types.Location> location_ = new pbc::RepeatedField<global::Mdg.Engine.Proto.Trace.Types.Location>();
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public pbc::RepeatedField<global::Mdg.Engine.Proto.Trace.Types.Location> Location
                {
                    get { return location_; }
                }

                /// <summary>Field number for the "time_ns" field.</summary>
                public const int TimeNsFieldNumber = 3;
                private ulong timeNs_;
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public ulong TimeNs
                {
                    get { return timeNs_; }
                    set
                    {
                        timeNs_ = value;
                    }
                }

                /// <summary>Field number for the "json" field.</summary>
                public const int JsonFieldNumber = 4;
                private string json_ = "";
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public string Json
                {
                    get { return json_; }
                    set
                    {
                        json_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
                    }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public override bool Equals(object other)
                {
                    return Equals(other as Error);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public bool Equals(Error other)
                {
                    if (ReferenceEquals(other, null))
                    {
                        return false;
                    }
                    if (ReferenceEquals(other, this))
                    {
                        return true;
                    }
                    if (Message != other.Message) return false;
                    if (!location_.Equals(other.location_)) return false;
                    if (TimeNs != other.TimeNs) return false;
                    if (Json != other.Json) return false;
                    return Equals(_unknownFields, other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public override int GetHashCode()
                {
                    int hash = 1;
                    if (Message.Length != 0) hash ^= Message.GetHashCode();
                    hash ^= location_.GetHashCode();
                    if (TimeNs != 0UL) hash ^= TimeNs.GetHashCode();
                    if (Json.Length != 0) hash ^= Json.GetHashCode();
                    if (_unknownFields != null)
                    {
                        hash ^= _unknownFields.GetHashCode();
                    }
                    return hash;
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public override string ToString()
                {
                    return pb::JsonFormatter.ToDiagnosticString(this);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public void WriteTo(pb::CodedOutputStream output)
                {
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                    output.WriteRawMessage(this);
#else
          if (Message.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Message);
          }
          location_.WriteTo(output, _repeated_location_codec);
          if (TimeNs != 0UL) {
            output.WriteRawTag(24);
            output.WriteUInt64(TimeNs);
          }
          if (Json.Length != 0) {
            output.WriteRawTag(34);
            output.WriteString(Json);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
#endif
                }

#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output)
                {
                    if (Message.Length != 0)
                    {
                        output.WriteRawTag(10);
                        output.WriteString(Message);
                    }
                    location_.WriteTo(ref output, _repeated_location_codec);
                    if (TimeNs != 0UL)
                    {
                        output.WriteRawTag(24);
                        output.WriteUInt64(TimeNs);
                    }
                    if (Json.Length != 0)
                    {
                        output.WriteRawTag(34);
                        output.WriteString(Json);
                    }
                    if (_unknownFields != null)
                    {
                        _unknownFields.WriteTo(ref output);
                    }
                }
#endif

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public int CalculateSize()
                {
                    int size = 0;
                    if (Message.Length != 0)
                    {
                        size += 1 + pb::CodedOutputStream.ComputeStringSize(Message);
                    }
                    size += location_.CalculateSize(_repeated_location_codec);
                    if (TimeNs != 0UL)
                    {
                        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(TimeNs);
                    }
                    if (Json.Length != 0)
                    {
                        size += 1 + pb::CodedOutputStream.ComputeStringSize(Json);
                    }
                    if (_unknownFields != null)
                    {
                        size += _unknownFields.CalculateSize();
                    }
                    return size;
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public void MergeFrom(Error other)
                {
                    if (other == null)
                    {
                        return;
                    }
                    if (other.Message.Length != 0)
                    {
                        Message = other.Message;
                    }
                    location_.Add(other.location_);
                    if (other.TimeNs != 0UL)
                    {
                        TimeNs = other.TimeNs;
                    }
                    if (other.Json.Length != 0)
                    {
                        Json = other.Json;
                    }
                    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public void MergeFrom(pb::CodedInputStream input)
                {
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                    input.ReadRawMessage(this);
#else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Message = input.ReadString();
                break;
              }
              case 18: {
                location_.AddEntriesFrom(input, _repeated_location_codec);
                break;
              }
              case 24: {
                TimeNs = input.ReadUInt64();
                break;
              }
              case 34: {
                Json = input.ReadString();
                break;
              }
            }
          }
#endif
                }

#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input)
                {
                    uint tag;
                    while ((tag = input.ReadTag()) != 0)
                    {
                        switch (tag)
                        {
                            default:
                                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                                break;
                            case 10:
                                {
                                    Message = input.ReadString();
                                    break;
                                }
                            case 18:
                                {
                                    location_.AddEntriesFrom(ref input, _repeated_location_codec);
                                    break;
                                }
                            case 24:
                                {
                                    TimeNs = input.ReadUInt64();
                                    break;
                                }
                            case 34:
                                {
                                    Json = input.ReadString();
                                    break;
                                }
                        }
                    }
                }
#endif

            }

            public sealed partial class HTTP : pb::IMessage<HTTP>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
#endif
            {
                private static readonly pb::MessageParser<HTTP> _parser = new pb::MessageParser<HTTP>(() => new HTTP());
                private pb::UnknownFieldSet _unknownFields;
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public static pb::MessageParser<HTTP> Parser { get { return _parser; } }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public static pbr::MessageDescriptor Descriptor
                {
                    get { return global::Mdg.Engine.Proto.Trace.Descriptor.NestedTypes[3]; }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                pbr::MessageDescriptor pb::IMessage.Descriptor
                {
                    get { return Descriptor; }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public HTTP()
                {
                    OnConstruction();
                }

                partial void OnConstruction();

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public HTTP(HTTP other) : this()
                {
                    method_ = other.method_;
                    host_ = other.host_;
                    path_ = other.path_;
                    requestHeaders_ = other.requestHeaders_.Clone();
                    responseHeaders_ = other.responseHeaders_.Clone();
                    statusCode_ = other.statusCode_;
                    secure_ = other.secure_;
                    protocol_ = other.protocol_;
                    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public HTTP Clone()
                {
                    return new HTTP(this);
                }

                /// <summary>Field number for the "method" field.</summary>
                public const int MethodFieldNumber = 1;
                private global::Mdg.Engine.Proto.Trace.Types.HTTP.Types.Method method_ = global::Mdg.Engine.Proto.Trace.Types.HTTP.Types.Method.Unknown;
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public global::Mdg.Engine.Proto.Trace.Types.HTTP.Types.Method Method
                {
                    get { return method_; }
                    set
                    {
                        method_ = value;
                    }
                }

                /// <summary>Field number for the "host" field.</summary>
                public const int HostFieldNumber = 2;
                private string host_ = "";
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public string Host
                {
                    get { return host_; }
                    set
                    {
                        host_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
                    }
                }

                /// <summary>Field number for the "path" field.</summary>
                public const int PathFieldNumber = 3;
                private string path_ = "";
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public string Path
                {
                    get { return path_; }
                    set
                    {
                        path_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
                    }
                }

                /// <summary>Field number for the "request_headers" field.</summary>
                public const int RequestHeadersFieldNumber = 4;
                private static readonly pbc::MapField<string, global::Mdg.Engine.Proto.Trace.Types.HTTP.Types.Values>.Codec _map_requestHeaders_codec
                    = new pbc::MapField<string, global::Mdg.Engine.Proto.Trace.Types.HTTP.Types.Values>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::Mdg.Engine.Proto.Trace.Types.HTTP.Types.Values.Parser), 34);
                private readonly pbc::MapField<string, global::Mdg.Engine.Proto.Trace.Types.HTTP.Types.Values> requestHeaders_ = new pbc::MapField<string, global::Mdg.Engine.Proto.Trace.Types.HTTP.Types.Values>();
                /// <summary>
                /// Should exclude manual blacklist ("Auth" by default)
                /// </summary>
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public pbc::MapField<string, global::Mdg.Engine.Proto.Trace.Types.HTTP.Types.Values> RequestHeaders
                {
                    get { return requestHeaders_; }
                }

                /// <summary>Field number for the "response_headers" field.</summary>
                public const int ResponseHeadersFieldNumber = 5;
                private static readonly pbc::MapField<string, global::Mdg.Engine.Proto.Trace.Types.HTTP.Types.Values>.Codec _map_responseHeaders_codec
                    = new pbc::MapField<string, global::Mdg.Engine.Proto.Trace.Types.HTTP.Types.Values>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::Mdg.Engine.Proto.Trace.Types.HTTP.Types.Values.Parser), 42);
                private readonly pbc::MapField<string, global::Mdg.Engine.Proto.Trace.Types.HTTP.Types.Values> responseHeaders_ = new pbc::MapField<string, global::Mdg.Engine.Proto.Trace.Types.HTTP.Types.Values>();
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public pbc::MapField<string, global::Mdg.Engine.Proto.Trace.Types.HTTP.Types.Values> ResponseHeaders
                {
                    get { return responseHeaders_; }
                }

                /// <summary>Field number for the "status_code" field.</summary>
                public const int StatusCodeFieldNumber = 6;
                private uint statusCode_;
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public uint StatusCode
                {
                    get { return statusCode_; }
                    set
                    {
                        statusCode_ = value;
                    }
                }

                /// <summary>Field number for the "secure" field.</summary>
                public const int SecureFieldNumber = 8;
                private bool secure_;
                /// <summary>
                /// TLS was used
                /// </summary>
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public bool Secure
                {
                    get { return secure_; }
                    set
                    {
                        secure_ = value;
                    }
                }

                /// <summary>Field number for the "protocol" field.</summary>
                public const int ProtocolFieldNumber = 9;
                private string protocol_ = "";
                /// <summary>
                /// by convention "HTTP/1.0", "HTTP/1.1", "HTTP/2" or "h2"
                /// </summary>
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public string Protocol
                {
                    get { return protocol_; }
                    set
                    {
                        protocol_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
                    }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public override bool Equals(object other)
                {
                    return Equals(other as HTTP);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public bool Equals(HTTP other)
                {
                    if (ReferenceEquals(other, null))
                    {
                        return false;
                    }
                    if (ReferenceEquals(other, this))
                    {
                        return true;
                    }
                    if (Method != other.Method) return false;
                    if (Host != other.Host) return false;
                    if (Path != other.Path) return false;
                    if (!RequestHeaders.Equals(other.RequestHeaders)) return false;
                    if (!ResponseHeaders.Equals(other.ResponseHeaders)) return false;
                    if (StatusCode != other.StatusCode) return false;
                    if (Secure != other.Secure) return false;
                    if (Protocol != other.Protocol) return false;
                    return Equals(_unknownFields, other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public override int GetHashCode()
                {
                    int hash = 1;
                    if (Method != global::Mdg.Engine.Proto.Trace.Types.HTTP.Types.Method.Unknown) hash ^= Method.GetHashCode();
                    if (Host.Length != 0) hash ^= Host.GetHashCode();
                    if (Path.Length != 0) hash ^= Path.GetHashCode();
                    hash ^= RequestHeaders.GetHashCode();
                    hash ^= ResponseHeaders.GetHashCode();
                    if (StatusCode != 0) hash ^= StatusCode.GetHashCode();
                    if (Secure != false) hash ^= Secure.GetHashCode();
                    if (Protocol.Length != 0) hash ^= Protocol.GetHashCode();
                    if (_unknownFields != null)
                    {
                        hash ^= _unknownFields.GetHashCode();
                    }
                    return hash;
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public override string ToString()
                {
                    return pb::JsonFormatter.ToDiagnosticString(this);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public void WriteTo(pb::CodedOutputStream output)
                {
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                    output.WriteRawMessage(this);
#else
          if (Method != global::Mdg.Engine.Proto.Trace.Types.HTTP.Types.Method.Unknown) {
            output.WriteRawTag(8);
            output.WriteEnum((int) Method);
          }
          if (Host.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(Host);
          }
          if (Path.Length != 0) {
            output.WriteRawTag(26);
            output.WriteString(Path);
          }
          requestHeaders_.WriteTo(output, _map_requestHeaders_codec);
          responseHeaders_.WriteTo(output, _map_responseHeaders_codec);
          if (StatusCode != 0) {
            output.WriteRawTag(48);
            output.WriteUInt32(StatusCode);
          }
          if (Secure != false) {
            output.WriteRawTag(64);
            output.WriteBool(Secure);
          }
          if (Protocol.Length != 0) {
            output.WriteRawTag(74);
            output.WriteString(Protocol);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
#endif
                }

#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output)
                {
                    if (Method != global::Mdg.Engine.Proto.Trace.Types.HTTP.Types.Method.Unknown)
                    {
                        output.WriteRawTag(8);
                        output.WriteEnum((int)Method);
                    }
                    if (Host.Length != 0)
                    {
                        output.WriteRawTag(18);
                        output.WriteString(Host);
                    }
                    if (Path.Length != 0)
                    {
                        output.WriteRawTag(26);
                        output.WriteString(Path);
                    }
                    requestHeaders_.WriteTo(ref output, _map_requestHeaders_codec);
                    responseHeaders_.WriteTo(ref output, _map_responseHeaders_codec);
                    if (StatusCode != 0)
                    {
                        output.WriteRawTag(48);
                        output.WriteUInt32(StatusCode);
                    }
                    if (Secure != false)
                    {
                        output.WriteRawTag(64);
                        output.WriteBool(Secure);
                    }
                    if (Protocol.Length != 0)
                    {
                        output.WriteRawTag(74);
                        output.WriteString(Protocol);
                    }
                    if (_unknownFields != null)
                    {
                        _unknownFields.WriteTo(ref output);
                    }
                }
#endif

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public int CalculateSize()
                {
                    int size = 0;
                    if (Method != global::Mdg.Engine.Proto.Trace.Types.HTTP.Types.Method.Unknown)
                    {
                        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int)Method);
                    }
                    if (Host.Length != 0)
                    {
                        size += 1 + pb::CodedOutputStream.ComputeStringSize(Host);
                    }
                    if (Path.Length != 0)
                    {
                        size += 1 + pb::CodedOutputStream.ComputeStringSize(Path);
                    }
                    size += requestHeaders_.CalculateSize(_map_requestHeaders_codec);
                    size += responseHeaders_.CalculateSize(_map_responseHeaders_codec);
                    if (StatusCode != 0)
                    {
                        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(StatusCode);
                    }
                    if (Secure != false)
                    {
                        size += 1 + 1;
                    }
                    if (Protocol.Length != 0)
                    {
                        size += 1 + pb::CodedOutputStream.ComputeStringSize(Protocol);
                    }
                    if (_unknownFields != null)
                    {
                        size += _unknownFields.CalculateSize();
                    }
                    return size;
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public void MergeFrom(HTTP other)
                {
                    if (other == null)
                    {
                        return;
                    }
                    if (other.Method != global::Mdg.Engine.Proto.Trace.Types.HTTP.Types.Method.Unknown)
                    {
                        Method = other.Method;
                    }
                    if (other.Host.Length != 0)
                    {
                        Host = other.Host;
                    }
                    if (other.Path.Length != 0)
                    {
                        Path = other.Path;
                    }
                    requestHeaders_.Add(other.requestHeaders_);
                    responseHeaders_.Add(other.responseHeaders_);
                    if (other.StatusCode != 0)
                    {
                        StatusCode = other.StatusCode;
                    }
                    if (other.Secure != false)
                    {
                        Secure = other.Secure;
                    }
                    if (other.Protocol.Length != 0)
                    {
                        Protocol = other.Protocol;
                    }
                    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public void MergeFrom(pb::CodedInputStream input)
                {
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                    input.ReadRawMessage(this);
#else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                Method = (global::Mdg.Engine.Proto.Trace.Types.HTTP.Types.Method) input.ReadEnum();
                break;
              }
              case 18: {
                Host = input.ReadString();
                break;
              }
              case 26: {
                Path = input.ReadString();
                break;
              }
              case 34: {
                requestHeaders_.AddEntriesFrom(input, _map_requestHeaders_codec);
                break;
              }
              case 42: {
                responseHeaders_.AddEntriesFrom(input, _map_responseHeaders_codec);
                break;
              }
              case 48: {
                StatusCode = input.ReadUInt32();
                break;
              }
              case 64: {
                Secure = input.ReadBool();
                break;
              }
              case 74: {
                Protocol = input.ReadString();
                break;
              }
            }
          }
#endif
                }

#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input)
                {
                    uint tag;
                    while ((tag = input.ReadTag()) != 0)
                    {
                        switch (tag)
                        {
                            default:
                                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                                break;
                            case 8:
                                {
                                    Method = (global::Mdg.Engine.Proto.Trace.Types.HTTP.Types.Method)input.ReadEnum();
                                    break;
                                }
                            case 18:
                                {
                                    Host = input.ReadString();
                                    break;
                                }
                            case 26:
                                {
                                    Path = input.ReadString();
                                    break;
                                }
                            case 34:
                                {
                                    requestHeaders_.AddEntriesFrom(ref input, _map_requestHeaders_codec);
                                    break;
                                }
                            case 42:
                                {
                                    responseHeaders_.AddEntriesFrom(ref input, _map_responseHeaders_codec);
                                    break;
                                }
                            case 48:
                                {
                                    StatusCode = input.ReadUInt32();
                                    break;
                                }
                            case 64:
                                {
                                    Secure = input.ReadBool();
                                    break;
                                }
                            case 74:
                                {
                                    Protocol = input.ReadString();
                                    break;
                                }
                        }
                    }
                }
#endif

                #region Nested types
                /// <summary>Container for nested types declared in the HTTP message type.</summary>
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public static partial class Types
                {
                    public enum Method
                    {
                        [pbr::OriginalName("UNKNOWN")] Unknown = 0,
                        [pbr::OriginalName("OPTIONS")] Options = 1,
                        [pbr::OriginalName("GET")] Get = 2,
                        [pbr::OriginalName("HEAD")] Head = 3,
                        [pbr::OriginalName("POST")] Post = 4,
                        [pbr::OriginalName("PUT")] Put = 5,
                        [pbr::OriginalName("DELETE")] Delete = 6,
                        [pbr::OriginalName("TRACE")] Trace = 7,
                        [pbr::OriginalName("CONNECT")] Connect = 8,
                        [pbr::OriginalName("PATCH")] Patch = 9,
                    }

                    public sealed partial class Values : pb::IMessage<Values>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              , pb::IBufferMessage
#endif
                    {
                        private static readonly pb::MessageParser<Values> _parser = new pb::MessageParser<Values>(() => new Values());
                        private pb::UnknownFieldSet _unknownFields;
                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                        public static pb::MessageParser<Values> Parser { get { return _parser; } }

                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                        public static pbr::MessageDescriptor Descriptor
                        {
                            get { return global::Mdg.Engine.Proto.Trace.Types.HTTP.Descriptor.NestedTypes[0]; }
                        }

                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                        pbr::MessageDescriptor pb::IMessage.Descriptor
                        {
                            get { return Descriptor; }
                        }

                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                        public Values()
                        {
                            OnConstruction();
                        }

                        partial void OnConstruction();

                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                        public Values(Values other) : this()
                        {
                            value_ = other.value_.Clone();
                            _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
                        }

                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                        public Values Clone()
                        {
                            return new Values(this);
                        }

                        /// <summary>Field number for the "value" field.</summary>
                        public const int ValueFieldNumber = 1;
                        private static readonly pb::FieldCodec<string> _repeated_value_codec
                            = pb::FieldCodec.ForString(10);
                        private readonly pbc::RepeatedField<string> value_ = new pbc::RepeatedField<string>();
                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                        public pbc::RepeatedField<string> Value
                        {
                            get { return value_; }
                        }

                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                        public override bool Equals(object other)
                        {
                            return Equals(other as Values);
                        }

                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                        public bool Equals(Values other)
                        {
                            if (ReferenceEquals(other, null))
                            {
                                return false;
                            }
                            if (ReferenceEquals(other, this))
                            {
                                return true;
                            }
                            if (!value_.Equals(other.value_)) return false;
                            return Equals(_unknownFields, other._unknownFields);
                        }

                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                        public override int GetHashCode()
                        {
                            int hash = 1;
                            hash ^= value_.GetHashCode();
                            if (_unknownFields != null)
                            {
                                hash ^= _unknownFields.GetHashCode();
                            }
                            return hash;
                        }

                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                        public override string ToString()
                        {
                            return pb::JsonFormatter.ToDiagnosticString(this);
                        }

                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                        public void WriteTo(pb::CodedOutputStream output)
                        {
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                            output.WriteRawMessage(this);
#else
              value_.WriteTo(output, _repeated_value_codec);
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
#endif
                        }

#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output)
                        {
                            value_.WriteTo(ref output, _repeated_value_codec);
                            if (_unknownFields != null)
                            {
                                _unknownFields.WriteTo(ref output);
                            }
                        }
#endif

                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                        public int CalculateSize()
                        {
                            int size = 0;
                            size += value_.CalculateSize(_repeated_value_codec);
                            if (_unknownFields != null)
                            {
                                size += _unknownFields.CalculateSize();
                            }
                            return size;
                        }

                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                        public void MergeFrom(Values other)
                        {
                            if (other == null)
                            {
                                return;
                            }
                            value_.Add(other.value_);
                            _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
                        }

                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                        public void MergeFrom(pb::CodedInputStream input)
                        {
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                            input.ReadRawMessage(this);
#else
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 10: {
                    value_.AddEntriesFrom(input, _repeated_value_codec);
                    break;
                  }
                }
              }
#endif
                        }

#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input)
                        {
                            uint tag;
                            while ((tag = input.ReadTag()) != 0)
                            {
                                switch (tag)
                                {
                                    default:
                                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                                        break;
                                    case 10:
                                        {
                                            value_.AddEntriesFrom(ref input, _repeated_value_codec);
                                            break;
                                        }
                                }
                            }
                        }
#endif

                    }

                }
                #endregion

            }

            public sealed partial class Location : pb::IMessage<Location>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
#endif
            {
                private static readonly pb::MessageParser<Location> _parser = new pb::MessageParser<Location>(() => new Location());
                private pb::UnknownFieldSet _unknownFields;
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public static pb::MessageParser<Location> Parser { get { return _parser; } }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public static pbr::MessageDescriptor Descriptor
                {
                    get { return global::Mdg.Engine.Proto.Trace.Descriptor.NestedTypes[4]; }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                pbr::MessageDescriptor pb::IMessage.Descriptor
                {
                    get { return Descriptor; }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public Location()
                {
                    OnConstruction();
                }

                partial void OnConstruction();

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public Location(Location other) : this()
                {
                    line_ = other.line_;
                    column_ = other.column_;
                    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public Location Clone()
                {
                    return new Location(this);
                }

                /// <summary>Field number for the "line" field.</summary>
                public const int LineFieldNumber = 1;
                private uint line_;
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public uint Line
                {
                    get { return line_; }
                    set
                    {
                        line_ = value;
                    }
                }

                /// <summary>Field number for the "column" field.</summary>
                public const int ColumnFieldNumber = 2;
                private uint column_;
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public uint Column
                {
                    get { return column_; }
                    set
                    {
                        column_ = value;
                    }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public override bool Equals(object other)
                {
                    return Equals(other as Location);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public bool Equals(Location other)
                {
                    if (ReferenceEquals(other, null))
                    {
                        return false;
                    }
                    if (ReferenceEquals(other, this))
                    {
                        return true;
                    }
                    if (Line != other.Line) return false;
                    if (Column != other.Column) return false;
                    return Equals(_unknownFields, other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public override int GetHashCode()
                {
                    int hash = 1;
                    if (Line != 0) hash ^= Line.GetHashCode();
                    if (Column != 0) hash ^= Column.GetHashCode();
                    if (_unknownFields != null)
                    {
                        hash ^= _unknownFields.GetHashCode();
                    }
                    return hash;
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public override string ToString()
                {
                    return pb::JsonFormatter.ToDiagnosticString(this);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public void WriteTo(pb::CodedOutputStream output)
                {
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                    output.WriteRawMessage(this);
#else
          if (Line != 0) {
            output.WriteRawTag(8);
            output.WriteUInt32(Line);
          }
          if (Column != 0) {
            output.WriteRawTag(16);
            output.WriteUInt32(Column);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
#endif
                }

#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output)
                {
                    if (Line != 0)
                    {
                        output.WriteRawTag(8);
                        output.WriteUInt32(Line);
                    }
                    if (Column != 0)
                    {
                        output.WriteRawTag(16);
                        output.WriteUInt32(Column);
                    }
                    if (_unknownFields != null)
                    {
                        _unknownFields.WriteTo(ref output);
                    }
                }
#endif

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public int CalculateSize()
                {
                    int size = 0;
                    if (Line != 0)
                    {
                        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Line);
                    }
                    if (Column != 0)
                    {
                        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Column);
                    }
                    if (_unknownFields != null)
                    {
                        size += _unknownFields.CalculateSize();
                    }
                    return size;
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public void MergeFrom(Location other)
                {
                    if (other == null)
                    {
                        return;
                    }
                    if (other.Line != 0)
                    {
                        Line = other.Line;
                    }
                    if (other.Column != 0)
                    {
                        Column = other.Column;
                    }
                    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public void MergeFrom(pb::CodedInputStream input)
                {
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                    input.ReadRawMessage(this);
#else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                Line = input.ReadUInt32();
                break;
              }
              case 16: {
                Column = input.ReadUInt32();
                break;
              }
            }
          }
#endif
                }

#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input)
                {
                    uint tag;
                    while ((tag = input.ReadTag()) != 0)
                    {
                        switch (tag)
                        {
                            default:
                                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                                break;
                            case 8:
                                {
                                    Line = input.ReadUInt32();
                                    break;
                                }
                            case 16:
                                {
                                    Column = input.ReadUInt32();
                                    break;
                                }
                        }
                    }
                }
#endif

            }

            /// <summary>
            /// We store information on each resolver execution as a Node on a tree.
            /// The structure of the tree corresponds to the structure of the GraphQL
            /// response; it does not indicate the order in which resolvers were
            /// invoked.  Note that nodes representing indexes (and the root node)
            /// don't contain all Node fields (eg types and times).
            /// </summary>
            public sealed partial class Node : pb::IMessage<Node>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
#endif
            {
                private static readonly pb::MessageParser<Node> _parser = new pb::MessageParser<Node>(() => new Node());
                private pb::UnknownFieldSet _unknownFields;
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public static pb::MessageParser<Node> Parser { get { return _parser; } }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public static pbr::MessageDescriptor Descriptor
                {
                    get { return global::Mdg.Engine.Proto.Trace.Descriptor.NestedTypes[5]; }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                pbr::MessageDescriptor pb::IMessage.Descriptor
                {
                    get { return Descriptor; }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public Node()
                {
                    OnConstruction();
                }

                partial void OnConstruction();

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public Node(Node other) : this()
                {
                    originalFieldName_ = other.originalFieldName_;
                    type_ = other.type_;
                    parentType_ = other.parentType_;
                    cachePolicy_ = other.cachePolicy_ != null ? other.cachePolicy_.Clone() : null;
                    startTime_ = other.startTime_;
                    endTime_ = other.endTime_;
                    error_ = other.error_.Clone();
                    child_ = other.child_.Clone();
                    switch (other.IdCase)
                    {
                        case IdOneofCase.ResponseName:
                            ResponseName = other.ResponseName;
                            break;
                        case IdOneofCase.Index:
                            Index = other.Index;
                            break;
                    }

                    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public Node Clone()
                {
                    return new Node(this);
                }

                /// <summary>Field number for the "response_name" field.</summary>
                public const int ResponseNameFieldNumber = 1;
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public string ResponseName
                {
                    get { return idCase_ == IdOneofCase.ResponseName ? (string)id_ : ""; }
                    set
                    {
                        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
                        idCase_ = IdOneofCase.ResponseName;
                    }
                }

                /// <summary>Field number for the "index" field.</summary>
                public const int IndexFieldNumber = 2;
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public uint Index
                {
                    get { return idCase_ == IdOneofCase.Index ? (uint)id_ : 0; }
                    set
                    {
                        id_ = value;
                        idCase_ = IdOneofCase.Index;
                    }
                }

                /// <summary>Field number for the "original_field_name" field.</summary>
                public const int OriginalFieldNameFieldNumber = 14;
                private string originalFieldName_ = "";
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public string OriginalFieldName
                {
                    get { return originalFieldName_; }
                    set
                    {
                        originalFieldName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
                    }
                }

                /// <summary>Field number for the "type" field.</summary>
                public const int TypeFieldNumber = 3;
                private string type_ = "";
                /// <summary>
                /// The field's return type; e.g. "String!" for User.email:String!
                /// </summary>
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public string Type
                {
                    get { return type_; }
                    set
                    {
                        type_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
                    }
                }

                /// <summary>Field number for the "parent_type" field.</summary>
                public const int ParentTypeFieldNumber = 13;
                private string parentType_ = "";
                /// <summary>
                /// The field's parent type; e.g. "User" for User.email:String!
                /// </summary>
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public string ParentType
                {
                    get { return parentType_; }
                    set
                    {
                        parentType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
                    }
                }

                /// <summary>Field number for the "cache_policy" field.</summary>
                public const int CachePolicyFieldNumber = 5;
                private global::Mdg.Engine.Proto.Trace.Types.CachePolicy cachePolicy_;
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public global::Mdg.Engine.Proto.Trace.Types.CachePolicy CachePolicy
                {
                    get { return cachePolicy_; }
                    set
                    {
                        cachePolicy_ = value;
                    }
                }

                /// <summary>Field number for the "start_time" field.</summary>
                public const int StartTimeFieldNumber = 8;
                private ulong startTime_;
                /// <summary>
                /// relative to the trace's start_time, in ns
                /// </summary>
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public ulong StartTime
                {
                    get { return startTime_; }
                    set
                    {
                        startTime_ = value;
                    }
                }

                /// <summary>Field number for the "end_time" field.</summary>
                public const int EndTimeFieldNumber = 9;
                private ulong endTime_;
                /// <summary>
                /// relative to the trace's start_time, in ns
                /// </summary>
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public ulong EndTime
                {
                    get { return endTime_; }
                    set
                    {
                        endTime_ = value;
                    }
                }

                /// <summary>Field number for the "error" field.</summary>
                public const int ErrorFieldNumber = 11;
                private static readonly pb::FieldCodec<global::Mdg.Engine.Proto.Trace.Types.Error> _repeated_error_codec
                    = pb::FieldCodec.ForMessage(90, global::Mdg.Engine.Proto.Trace.Types.Error.Parser);
                private readonly pbc::RepeatedField<global::Mdg.Engine.Proto.Trace.Types.Error> error_ = new pbc::RepeatedField<global::Mdg.Engine.Proto.Trace.Types.Error>();
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public pbc::RepeatedField<global::Mdg.Engine.Proto.Trace.Types.Error> Error
                {
                    get { return error_; }
                }

                /// <summary>Field number for the "child" field.</summary>
                public const int ChildFieldNumber = 12;
                private static readonly pb::FieldCodec<global::Mdg.Engine.Proto.Trace.Types.Node> _repeated_child_codec
                    = pb::FieldCodec.ForMessage(98, global::Mdg.Engine.Proto.Trace.Types.Node.Parser);
                private readonly pbc::RepeatedField<global::Mdg.Engine.Proto.Trace.Types.Node> child_ = new pbc::RepeatedField<global::Mdg.Engine.Proto.Trace.Types.Node>();
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public pbc::RepeatedField<global::Mdg.Engine.Proto.Trace.Types.Node> Child
                {
                    get { return child_; }
                }

                private object id_;
                /// <summary>Enum of possible cases for the "id" oneof.</summary>
                public enum IdOneofCase
                {
                    None = 0,
                    ResponseName = 1,
                    Index = 2,
                }
                private IdOneofCase idCase_ = IdOneofCase.None;
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public IdOneofCase IdCase
                {
                    get { return idCase_; }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public void ClearId()
                {
                    idCase_ = IdOneofCase.None;
                    id_ = null;
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public override bool Equals(object other)
                {
                    return Equals(other as Node);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public bool Equals(Node other)
                {
                    if (ReferenceEquals(other, null))
                    {
                        return false;
                    }
                    if (ReferenceEquals(other, this))
                    {
                        return true;
                    }
                    if (ResponseName != other.ResponseName) return false;
                    if (Index != other.Index) return false;
                    if (OriginalFieldName != other.OriginalFieldName) return false;
                    if (Type != other.Type) return false;
                    if (ParentType != other.ParentType) return false;
                    if (!object.Equals(CachePolicy, other.CachePolicy)) return false;
                    if (StartTime != other.StartTime) return false;
                    if (EndTime != other.EndTime) return false;
                    if (!error_.Equals(other.error_)) return false;
                    if (!child_.Equals(other.child_)) return false;
                    if (IdCase != other.IdCase) return false;
                    return Equals(_unknownFields, other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public override int GetHashCode()
                {
                    int hash = 1;
                    if (idCase_ == IdOneofCase.ResponseName) hash ^= ResponseName.GetHashCode();
                    if (idCase_ == IdOneofCase.Index) hash ^= Index.GetHashCode();
                    if (OriginalFieldName.Length != 0) hash ^= OriginalFieldName.GetHashCode();
                    if (Type.Length != 0) hash ^= Type.GetHashCode();
                    if (ParentType.Length != 0) hash ^= ParentType.GetHashCode();
                    if (cachePolicy_ != null) hash ^= CachePolicy.GetHashCode();
                    if (StartTime != 0UL) hash ^= StartTime.GetHashCode();
                    if (EndTime != 0UL) hash ^= EndTime.GetHashCode();
                    hash ^= error_.GetHashCode();
                    hash ^= child_.GetHashCode();
                    hash ^= (int)idCase_;
                    if (_unknownFields != null)
                    {
                        hash ^= _unknownFields.GetHashCode();
                    }
                    return hash;
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public override string ToString()
                {
                    return pb::JsonFormatter.ToDiagnosticString(this);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public void WriteTo(pb::CodedOutputStream output)
                {
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                    output.WriteRawMessage(this);
#else
          if (idCase_ == IdOneofCase.ResponseName) {
            output.WriteRawTag(10);
            output.WriteString(ResponseName);
          }
          if (idCase_ == IdOneofCase.Index) {
            output.WriteRawTag(16);
            output.WriteUInt32(Index);
          }
          if (Type.Length != 0) {
            output.WriteRawTag(26);
            output.WriteString(Type);
          }
          if (cachePolicy_ != null) {
            output.WriteRawTag(42);
            output.WriteMessage(CachePolicy);
          }
          if (StartTime != 0UL) {
            output.WriteRawTag(64);
            output.WriteUInt64(StartTime);
          }
          if (EndTime != 0UL) {
            output.WriteRawTag(72);
            output.WriteUInt64(EndTime);
          }
          error_.WriteTo(output, _repeated_error_codec);
          child_.WriteTo(output, _repeated_child_codec);
          if (ParentType.Length != 0) {
            output.WriteRawTag(106);
            output.WriteString(ParentType);
          }
          if (OriginalFieldName.Length != 0) {
            output.WriteRawTag(114);
            output.WriteString(OriginalFieldName);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
#endif
                }

#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output)
                {
                    if (idCase_ == IdOneofCase.ResponseName)
                    {
                        output.WriteRawTag(10);
                        output.WriteString(ResponseName);
                    }
                    if (idCase_ == IdOneofCase.Index)
                    {
                        output.WriteRawTag(16);
                        output.WriteUInt32(Index);
                    }
                    if (Type.Length != 0)
                    {
                        output.WriteRawTag(26);
                        output.WriteString(Type);
                    }
                    if (cachePolicy_ != null)
                    {
                        output.WriteRawTag(42);
                        output.WriteMessage(CachePolicy);
                    }
                    if (StartTime != 0UL)
                    {
                        output.WriteRawTag(64);
                        output.WriteUInt64(StartTime);
                    }
                    if (EndTime != 0UL)
                    {
                        output.WriteRawTag(72);
                        output.WriteUInt64(EndTime);
                    }
                    error_.WriteTo(ref output, _repeated_error_codec);
                    child_.WriteTo(ref output, _repeated_child_codec);
                    if (ParentType.Length != 0)
                    {
                        output.WriteRawTag(106);
                        output.WriteString(ParentType);
                    }
                    if (OriginalFieldName.Length != 0)
                    {
                        output.WriteRawTag(114);
                        output.WriteString(OriginalFieldName);
                    }
                    if (_unknownFields != null)
                    {
                        _unknownFields.WriteTo(ref output);
                    }
                }
#endif

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public int CalculateSize()
                {
                    int size = 0;
                    if (idCase_ == IdOneofCase.ResponseName)
                    {
                        size += 1 + pb::CodedOutputStream.ComputeStringSize(ResponseName);
                    }
                    if (idCase_ == IdOneofCase.Index)
                    {
                        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Index);
                    }
                    if (OriginalFieldName.Length != 0)
                    {
                        size += 1 + pb::CodedOutputStream.ComputeStringSize(OriginalFieldName);
                    }
                    if (Type.Length != 0)
                    {
                        size += 1 + pb::CodedOutputStream.ComputeStringSize(Type);
                    }
                    if (ParentType.Length != 0)
                    {
                        size += 1 + pb::CodedOutputStream.ComputeStringSize(ParentType);
                    }
                    if (cachePolicy_ != null)
                    {
                        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CachePolicy);
                    }
                    if (StartTime != 0UL)
                    {
                        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(StartTime);
                    }
                    if (EndTime != 0UL)
                    {
                        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(EndTime);
                    }
                    size += error_.CalculateSize(_repeated_error_codec);
                    size += child_.CalculateSize(_repeated_child_codec);
                    if (_unknownFields != null)
                    {
                        size += _unknownFields.CalculateSize();
                    }
                    return size;
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public void MergeFrom(Node other)
                {
                    if (other == null)
                    {
                        return;
                    }
                    if (other.OriginalFieldName.Length != 0)
                    {
                        OriginalFieldName = other.OriginalFieldName;
                    }
                    if (other.Type.Length != 0)
                    {
                        Type = other.Type;
                    }
                    if (other.ParentType.Length != 0)
                    {
                        ParentType = other.ParentType;
                    }
                    if (other.cachePolicy_ != null)
                    {
                        if (cachePolicy_ == null)
                        {
                            CachePolicy = new global::Mdg.Engine.Proto.Trace.Types.CachePolicy();
                        }
                        CachePolicy.MergeFrom(other.CachePolicy);
                    }
                    if (other.StartTime != 0UL)
                    {
                        StartTime = other.StartTime;
                    }
                    if (other.EndTime != 0UL)
                    {
                        EndTime = other.EndTime;
                    }
                    error_.Add(other.error_);
                    child_.Add(other.child_);
                    switch (other.IdCase)
                    {
                        case IdOneofCase.ResponseName:
                            ResponseName = other.ResponseName;
                            break;
                        case IdOneofCase.Index:
                            Index = other.Index;
                            break;
                    }

                    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public void MergeFrom(pb::CodedInputStream input)
                {
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                    input.ReadRawMessage(this);
#else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                ResponseName = input.ReadString();
                break;
              }
              case 16: {
                Index = input.ReadUInt32();
                break;
              }
              case 26: {
                Type = input.ReadString();
                break;
              }
              case 42: {
                if (cachePolicy_ == null) {
                  CachePolicy = new global::Mdg.Engine.Proto.Trace.Types.CachePolicy();
                }
                input.ReadMessage(CachePolicy);
                break;
              }
              case 64: {
                StartTime = input.ReadUInt64();
                break;
              }
              case 72: {
                EndTime = input.ReadUInt64();
                break;
              }
              case 90: {
                error_.AddEntriesFrom(input, _repeated_error_codec);
                break;
              }
              case 98: {
                child_.AddEntriesFrom(input, _repeated_child_codec);
                break;
              }
              case 106: {
                ParentType = input.ReadString();
                break;
              }
              case 114: {
                OriginalFieldName = input.ReadString();
                break;
              }
            }
          }
#endif
                }

#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input)
                {
                    uint tag;
                    while ((tag = input.ReadTag()) != 0)
                    {
                        switch (tag)
                        {
                            default:
                                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                                break;
                            case 10:
                                {
                                    ResponseName = input.ReadString();
                                    break;
                                }
                            case 16:
                                {
                                    Index = input.ReadUInt32();
                                    break;
                                }
                            case 26:
                                {
                                    Type = input.ReadString();
                                    break;
                                }
                            case 42:
                                {
                                    if (cachePolicy_ == null)
                                    {
                                        CachePolicy = new global::Mdg.Engine.Proto.Trace.Types.CachePolicy();
                                    }
                                    input.ReadMessage(CachePolicy);
                                    break;
                                }
                            case 64:
                                {
                                    StartTime = input.ReadUInt64();
                                    break;
                                }
                            case 72:
                                {
                                    EndTime = input.ReadUInt64();
                                    break;
                                }
                            case 90:
                                {
                                    error_.AddEntriesFrom(ref input, _repeated_error_codec);
                                    break;
                                }
                            case 98:
                                {
                                    child_.AddEntriesFrom(ref input, _repeated_child_codec);
                                    break;
                                }
                            case 106:
                                {
                                    ParentType = input.ReadString();
                                    break;
                                }
                            case 114:
                                {
                                    OriginalFieldName = input.ReadString();
                                    break;
                                }
                        }
                    }
                }
#endif

            }

            /// <summary>
            /// represents a node in the query plan, under which there is a trace tree for that service fetch.
            /// In particular, each fetch node represents a call to an implementing service, and calls to implementing
            /// services may not be unique. See https://github.com/apollographql/apollo-server/blob/main/packages/apollo-gateway/src/QueryPlan.ts
            /// for more information and details.
            /// </summary>
            public sealed partial class QueryPlanNode : pb::IMessage<QueryPlanNode>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
#endif
            {
                private static readonly pb::MessageParser<QueryPlanNode> _parser = new pb::MessageParser<QueryPlanNode>(() => new QueryPlanNode());
                private pb::UnknownFieldSet _unknownFields;
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public static pb::MessageParser<QueryPlanNode> Parser { get { return _parser; } }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public static pbr::MessageDescriptor Descriptor
                {
                    get { return global::Mdg.Engine.Proto.Trace.Descriptor.NestedTypes[6]; }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                pbr::MessageDescriptor pb::IMessage.Descriptor
                {
                    get { return Descriptor; }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public QueryPlanNode()
                {
                    OnConstruction();
                }

                partial void OnConstruction();

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public QueryPlanNode(QueryPlanNode other) : this()
                {
                    switch (other.NodeCase)
                    {
                        case NodeOneofCase.Sequence:
                            Sequence = other.Sequence.Clone();
                            break;
                        case NodeOneofCase.Parallel:
                            Parallel = other.Parallel.Clone();
                            break;
                        case NodeOneofCase.Fetch:
                            Fetch = other.Fetch.Clone();
                            break;
                        case NodeOneofCase.Flatten:
                            Flatten = other.Flatten.Clone();
                            break;
                    }

                    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public QueryPlanNode Clone()
                {
                    return new QueryPlanNode(this);
                }

                /// <summary>Field number for the "sequence" field.</summary>
                public const int SequenceFieldNumber = 1;
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public global::Mdg.Engine.Proto.Trace.Types.QueryPlanNode.Types.SequenceNode Sequence
                {
                    get { return nodeCase_ == NodeOneofCase.Sequence ? (global::Mdg.Engine.Proto.Trace.Types.QueryPlanNode.Types.SequenceNode)node_ : null; }
                    set
                    {
                        node_ = value;
                        nodeCase_ = value == null ? NodeOneofCase.None : NodeOneofCase.Sequence;
                    }
                }

                /// <summary>Field number for the "parallel" field.</summary>
                public const int ParallelFieldNumber = 2;
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public global::Mdg.Engine.Proto.Trace.Types.QueryPlanNode.Types.ParallelNode Parallel
                {
                    get { return nodeCase_ == NodeOneofCase.Parallel ? (global::Mdg.Engine.Proto.Trace.Types.QueryPlanNode.Types.ParallelNode)node_ : null; }
                    set
                    {
                        node_ = value;
                        nodeCase_ = value == null ? NodeOneofCase.None : NodeOneofCase.Parallel;
                    }
                }

                /// <summary>Field number for the "fetch" field.</summary>
                public const int FetchFieldNumber = 3;
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public global::Mdg.Engine.Proto.Trace.Types.QueryPlanNode.Types.FetchNode Fetch
                {
                    get { return nodeCase_ == NodeOneofCase.Fetch ? (global::Mdg.Engine.Proto.Trace.Types.QueryPlanNode.Types.FetchNode)node_ : null; }
                    set
                    {
                        node_ = value;
                        nodeCase_ = value == null ? NodeOneofCase.None : NodeOneofCase.Fetch;
                    }
                }

                /// <summary>Field number for the "flatten" field.</summary>
                public const int FlattenFieldNumber = 4;
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public global::Mdg.Engine.Proto.Trace.Types.QueryPlanNode.Types.FlattenNode Flatten
                {
                    get { return nodeCase_ == NodeOneofCase.Flatten ? (global::Mdg.Engine.Proto.Trace.Types.QueryPlanNode.Types.FlattenNode)node_ : null; }
                    set
                    {
                        node_ = value;
                        nodeCase_ = value == null ? NodeOneofCase.None : NodeOneofCase.Flatten;
                    }
                }

                private object node_;
                /// <summary>Enum of possible cases for the "node" oneof.</summary>
                public enum NodeOneofCase
                {
                    None = 0,
                    Sequence = 1,
                    Parallel = 2,
                    Fetch = 3,
                    Flatten = 4,
                }
                private NodeOneofCase nodeCase_ = NodeOneofCase.None;
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public NodeOneofCase NodeCase
                {
                    get { return nodeCase_; }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public void ClearNode()
                {
                    nodeCase_ = NodeOneofCase.None;
                    node_ = null;
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public override bool Equals(object other)
                {
                    return Equals(other as QueryPlanNode);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public bool Equals(QueryPlanNode other)
                {
                    if (ReferenceEquals(other, null))
                    {
                        return false;
                    }
                    if (ReferenceEquals(other, this))
                    {
                        return true;
                    }
                    if (!object.Equals(Sequence, other.Sequence)) return false;
                    if (!object.Equals(Parallel, other.Parallel)) return false;
                    if (!object.Equals(Fetch, other.Fetch)) return false;
                    if (!object.Equals(Flatten, other.Flatten)) return false;
                    if (NodeCase != other.NodeCase) return false;
                    return Equals(_unknownFields, other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public override int GetHashCode()
                {
                    int hash = 1;
                    if (nodeCase_ == NodeOneofCase.Sequence) hash ^= Sequence.GetHashCode();
                    if (nodeCase_ == NodeOneofCase.Parallel) hash ^= Parallel.GetHashCode();
                    if (nodeCase_ == NodeOneofCase.Fetch) hash ^= Fetch.GetHashCode();
                    if (nodeCase_ == NodeOneofCase.Flatten) hash ^= Flatten.GetHashCode();
                    hash ^= (int)nodeCase_;
                    if (_unknownFields != null)
                    {
                        hash ^= _unknownFields.GetHashCode();
                    }
                    return hash;
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public override string ToString()
                {
                    return pb::JsonFormatter.ToDiagnosticString(this);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public void WriteTo(pb::CodedOutputStream output)
                {
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                    output.WriteRawMessage(this);
#else
          if (nodeCase_ == NodeOneofCase.Sequence) {
            output.WriteRawTag(10);
            output.WriteMessage(Sequence);
          }
          if (nodeCase_ == NodeOneofCase.Parallel) {
            output.WriteRawTag(18);
            output.WriteMessage(Parallel);
          }
          if (nodeCase_ == NodeOneofCase.Fetch) {
            output.WriteRawTag(26);
            output.WriteMessage(Fetch);
          }
          if (nodeCase_ == NodeOneofCase.Flatten) {
            output.WriteRawTag(34);
            output.WriteMessage(Flatten);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
#endif
                }

#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output)
                {
                    if (nodeCase_ == NodeOneofCase.Sequence)
                    {
                        output.WriteRawTag(10);
                        output.WriteMessage(Sequence);
                    }
                    if (nodeCase_ == NodeOneofCase.Parallel)
                    {
                        output.WriteRawTag(18);
                        output.WriteMessage(Parallel);
                    }
                    if (nodeCase_ == NodeOneofCase.Fetch)
                    {
                        output.WriteRawTag(26);
                        output.WriteMessage(Fetch);
                    }
                    if (nodeCase_ == NodeOneofCase.Flatten)
                    {
                        output.WriteRawTag(34);
                        output.WriteMessage(Flatten);
                    }
                    if (_unknownFields != null)
                    {
                        _unknownFields.WriteTo(ref output);
                    }
                }
#endif

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public int CalculateSize()
                {
                    int size = 0;
                    if (nodeCase_ == NodeOneofCase.Sequence)
                    {
                        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Sequence);
                    }
                    if (nodeCase_ == NodeOneofCase.Parallel)
                    {
                        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Parallel);
                    }
                    if (nodeCase_ == NodeOneofCase.Fetch)
                    {
                        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Fetch);
                    }
                    if (nodeCase_ == NodeOneofCase.Flatten)
                    {
                        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Flatten);
                    }
                    if (_unknownFields != null)
                    {
                        size += _unknownFields.CalculateSize();
                    }
                    return size;
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public void MergeFrom(QueryPlanNode other)
                {
                    if (other == null)
                    {
                        return;
                    }
                    switch (other.NodeCase)
                    {
                        case NodeOneofCase.Sequence:
                            if (Sequence == null)
                            {
                                Sequence = new global::Mdg.Engine.Proto.Trace.Types.QueryPlanNode.Types.SequenceNode();
                            }
                            Sequence.MergeFrom(other.Sequence);
                            break;
                        case NodeOneofCase.Parallel:
                            if (Parallel == null)
                            {
                                Parallel = new global::Mdg.Engine.Proto.Trace.Types.QueryPlanNode.Types.ParallelNode();
                            }
                            Parallel.MergeFrom(other.Parallel);
                            break;
                        case NodeOneofCase.Fetch:
                            if (Fetch == null)
                            {
                                Fetch = new global::Mdg.Engine.Proto.Trace.Types.QueryPlanNode.Types.FetchNode();
                            }
                            Fetch.MergeFrom(other.Fetch);
                            break;
                        case NodeOneofCase.Flatten:
                            if (Flatten == null)
                            {
                                Flatten = new global::Mdg.Engine.Proto.Trace.Types.QueryPlanNode.Types.FlattenNode();
                            }
                            Flatten.MergeFrom(other.Flatten);
                            break;
                    }

                    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public void MergeFrom(pb::CodedInputStream input)
                {
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                    input.ReadRawMessage(this);
#else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                global::Mdg.Engine.Proto.Trace.Types.QueryPlanNode.Types.SequenceNode subBuilder = new global::Mdg.Engine.Proto.Trace.Types.QueryPlanNode.Types.SequenceNode();
                if (nodeCase_ == NodeOneofCase.Sequence) {
                  subBuilder.MergeFrom(Sequence);
                }
                input.ReadMessage(subBuilder);
                Sequence = subBuilder;
                break;
              }
              case 18: {
                global::Mdg.Engine.Proto.Trace.Types.QueryPlanNode.Types.ParallelNode subBuilder = new global::Mdg.Engine.Proto.Trace.Types.QueryPlanNode.Types.ParallelNode();
                if (nodeCase_ == NodeOneofCase.Parallel) {
                  subBuilder.MergeFrom(Parallel);
                }
                input.ReadMessage(subBuilder);
                Parallel = subBuilder;
                break;
              }
              case 26: {
                global::Mdg.Engine.Proto.Trace.Types.QueryPlanNode.Types.FetchNode subBuilder = new global::Mdg.Engine.Proto.Trace.Types.QueryPlanNode.Types.FetchNode();
                if (nodeCase_ == NodeOneofCase.Fetch) {
                  subBuilder.MergeFrom(Fetch);
                }
                input.ReadMessage(subBuilder);
                Fetch = subBuilder;
                break;
              }
              case 34: {
                global::Mdg.Engine.Proto.Trace.Types.QueryPlanNode.Types.FlattenNode subBuilder = new global::Mdg.Engine.Proto.Trace.Types.QueryPlanNode.Types.FlattenNode();
                if (nodeCase_ == NodeOneofCase.Flatten) {
                  subBuilder.MergeFrom(Flatten);
                }
                input.ReadMessage(subBuilder);
                Flatten = subBuilder;
                break;
              }
            }
          }
#endif
                }

#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input)
                {
                    uint tag;
                    while ((tag = input.ReadTag()) != 0)
                    {
                        switch (tag)
                        {
                            default:
                                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                                break;
                            case 10:
                                {
                                    global::Mdg.Engine.Proto.Trace.Types.QueryPlanNode.Types.SequenceNode subBuilder = new global::Mdg.Engine.Proto.Trace.Types.QueryPlanNode.Types.SequenceNode();
                                    if (nodeCase_ == NodeOneofCase.Sequence)
                                    {
                                        subBuilder.MergeFrom(Sequence);
                                    }
                                    input.ReadMessage(subBuilder);
                                    Sequence = subBuilder;
                                    break;
                                }
                            case 18:
                                {
                                    global::Mdg.Engine.Proto.Trace.Types.QueryPlanNode.Types.ParallelNode subBuilder = new global::Mdg.Engine.Proto.Trace.Types.QueryPlanNode.Types.ParallelNode();
                                    if (nodeCase_ == NodeOneofCase.Parallel)
                                    {
                                        subBuilder.MergeFrom(Parallel);
                                    }
                                    input.ReadMessage(subBuilder);
                                    Parallel = subBuilder;
                                    break;
                                }
                            case 26:
                                {
                                    global::Mdg.Engine.Proto.Trace.Types.QueryPlanNode.Types.FetchNode subBuilder = new global::Mdg.Engine.Proto.Trace.Types.QueryPlanNode.Types.FetchNode();
                                    if (nodeCase_ == NodeOneofCase.Fetch)
                                    {
                                        subBuilder.MergeFrom(Fetch);
                                    }
                                    input.ReadMessage(subBuilder);
                                    Fetch = subBuilder;
                                    break;
                                }
                            case 34:
                                {
                                    global::Mdg.Engine.Proto.Trace.Types.QueryPlanNode.Types.FlattenNode subBuilder = new global::Mdg.Engine.Proto.Trace.Types.QueryPlanNode.Types.FlattenNode();
                                    if (nodeCase_ == NodeOneofCase.Flatten)
                                    {
                                        subBuilder.MergeFrom(Flatten);
                                    }
                                    input.ReadMessage(subBuilder);
                                    Flatten = subBuilder;
                                    break;
                                }
                        }
                    }
                }
#endif

                #region Nested types
                /// <summary>Container for nested types declared in the QueryPlanNode message type.</summary>
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public static partial class Types
                {
                    /// <summary>
                    /// This represents a set of nodes to be executed sequentially by the Gateway executor
                    /// </summary>
                    public sealed partial class SequenceNode : pb::IMessage<SequenceNode>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              , pb::IBufferMessage
#endif
                    {
                        private static readonly pb::MessageParser<SequenceNode> _parser = new pb::MessageParser<SequenceNode>(() => new SequenceNode());
                        private pb::UnknownFieldSet _unknownFields;
                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                        public static pb::MessageParser<SequenceNode> Parser { get { return _parser; } }

                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                        public static pbr::MessageDescriptor Descriptor
                        {
                            get { return global::Mdg.Engine.Proto.Trace.Types.QueryPlanNode.Descriptor.NestedTypes[0]; }
                        }

                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                        pbr::MessageDescriptor pb::IMessage.Descriptor
                        {
                            get { return Descriptor; }
                        }

                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                        public SequenceNode()
                        {
                            OnConstruction();
                        }

                        partial void OnConstruction();

                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                        public SequenceNode(SequenceNode other) : this()
                        {
                            nodes_ = other.nodes_.Clone();
                            _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
                        }

                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                        public SequenceNode Clone()
                        {
                            return new SequenceNode(this);
                        }

                        /// <summary>Field number for the "nodes" field.</summary>
                        public const int NodesFieldNumber = 1;
                        private static readonly pb::FieldCodec<global::Mdg.Engine.Proto.Trace.Types.QueryPlanNode> _repeated_nodes_codec
                            = pb::FieldCodec.ForMessage(10, global::Mdg.Engine.Proto.Trace.Types.QueryPlanNode.Parser);
                        private readonly pbc::RepeatedField<global::Mdg.Engine.Proto.Trace.Types.QueryPlanNode> nodes_ = new pbc::RepeatedField<global::Mdg.Engine.Proto.Trace.Types.QueryPlanNode>();
                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                        public pbc::RepeatedField<global::Mdg.Engine.Proto.Trace.Types.QueryPlanNode> Nodes
                        {
                            get { return nodes_; }
                        }

                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                        public override bool Equals(object other)
                        {
                            return Equals(other as SequenceNode);
                        }

                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                        public bool Equals(SequenceNode other)
                        {
                            if (ReferenceEquals(other, null))
                            {
                                return false;
                            }
                            if (ReferenceEquals(other, this))
                            {
                                return true;
                            }
                            if (!nodes_.Equals(other.nodes_)) return false;
                            return Equals(_unknownFields, other._unknownFields);
                        }

                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                        public override int GetHashCode()
                        {
                            int hash = 1;
                            hash ^= nodes_.GetHashCode();
                            if (_unknownFields != null)
                            {
                                hash ^= _unknownFields.GetHashCode();
                            }
                            return hash;
                        }

                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                        public override string ToString()
                        {
                            return pb::JsonFormatter.ToDiagnosticString(this);
                        }

                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                        public void WriteTo(pb::CodedOutputStream output)
                        {
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                            output.WriteRawMessage(this);
#else
              nodes_.WriteTo(output, _repeated_nodes_codec);
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
#endif
                        }

#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output)
                        {
                            nodes_.WriteTo(ref output, _repeated_nodes_codec);
                            if (_unknownFields != null)
                            {
                                _unknownFields.WriteTo(ref output);
                            }
                        }
#endif

                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                        public int CalculateSize()
                        {
                            int size = 0;
                            size += nodes_.CalculateSize(_repeated_nodes_codec);
                            if (_unknownFields != null)
                            {
                                size += _unknownFields.CalculateSize();
                            }
                            return size;
                        }

                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                        public void MergeFrom(SequenceNode other)
                        {
                            if (other == null)
                            {
                                return;
                            }
                            nodes_.Add(other.nodes_);
                            _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
                        }

                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                        public void MergeFrom(pb::CodedInputStream input)
                        {
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                            input.ReadRawMessage(this);
#else
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 10: {
                    nodes_.AddEntriesFrom(input, _repeated_nodes_codec);
                    break;
                  }
                }
              }
#endif
                        }

#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input)
                        {
                            uint tag;
                            while ((tag = input.ReadTag()) != 0)
                            {
                                switch (tag)
                                {
                                    default:
                                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                                        break;
                                    case 10:
                                        {
                                            nodes_.AddEntriesFrom(ref input, _repeated_nodes_codec);
                                            break;
                                        }
                                }
                            }
                        }
#endif

                    }

                    /// <summary>
                    /// This represents a set of nodes to be executed in parallel by the Gateway executor
                    /// </summary>
                    public sealed partial class ParallelNode : pb::IMessage<ParallelNode>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              , pb::IBufferMessage
#endif
                    {
                        private static readonly pb::MessageParser<ParallelNode> _parser = new pb::MessageParser<ParallelNode>(() => new ParallelNode());
                        private pb::UnknownFieldSet _unknownFields;
                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                        public static pb::MessageParser<ParallelNode> Parser { get { return _parser; } }

                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                        public static pbr::MessageDescriptor Descriptor
                        {
                            get { return global::Mdg.Engine.Proto.Trace.Types.QueryPlanNode.Descriptor.NestedTypes[1]; }
                        }

                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                        pbr::MessageDescriptor pb::IMessage.Descriptor
                        {
                            get { return Descriptor; }
                        }

                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                        public ParallelNode()
                        {
                            OnConstruction();
                        }

                        partial void OnConstruction();

                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                        public ParallelNode(ParallelNode other) : this()
                        {
                            nodes_ = other.nodes_.Clone();
                            _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
                        }

                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                        public ParallelNode Clone()
                        {
                            return new ParallelNode(this);
                        }

                        /// <summary>Field number for the "nodes" field.</summary>
                        public const int NodesFieldNumber = 1;
                        private static readonly pb::FieldCodec<global::Mdg.Engine.Proto.Trace.Types.QueryPlanNode> _repeated_nodes_codec
                            = pb::FieldCodec.ForMessage(10, global::Mdg.Engine.Proto.Trace.Types.QueryPlanNode.Parser);
                        private readonly pbc::RepeatedField<global::Mdg.Engine.Proto.Trace.Types.QueryPlanNode> nodes_ = new pbc::RepeatedField<global::Mdg.Engine.Proto.Trace.Types.QueryPlanNode>();
                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                        public pbc::RepeatedField<global::Mdg.Engine.Proto.Trace.Types.QueryPlanNode> Nodes
                        {
                            get { return nodes_; }
                        }

                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                        public override bool Equals(object other)
                        {
                            return Equals(other as ParallelNode);
                        }

                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                        public bool Equals(ParallelNode other)
                        {
                            if (ReferenceEquals(other, null))
                            {
                                return false;
                            }
                            if (ReferenceEquals(other, this))
                            {
                                return true;
                            }
                            if (!nodes_.Equals(other.nodes_)) return false;
                            return Equals(_unknownFields, other._unknownFields);
                        }

                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                        public override int GetHashCode()
                        {
                            int hash = 1;
                            hash ^= nodes_.GetHashCode();
                            if (_unknownFields != null)
                            {
                                hash ^= _unknownFields.GetHashCode();
                            }
                            return hash;
                        }

                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                        public override string ToString()
                        {
                            return pb::JsonFormatter.ToDiagnosticString(this);
                        }

                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                        public void WriteTo(pb::CodedOutputStream output)
                        {
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                            output.WriteRawMessage(this);
#else
              nodes_.WriteTo(output, _repeated_nodes_codec);
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
#endif
                        }

#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output)
                        {
                            nodes_.WriteTo(ref output, _repeated_nodes_codec);
                            if (_unknownFields != null)
                            {
                                _unknownFields.WriteTo(ref output);
                            }
                        }
#endif

                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                        public int CalculateSize()
                        {
                            int size = 0;
                            size += nodes_.CalculateSize(_repeated_nodes_codec);
                            if (_unknownFields != null)
                            {
                                size += _unknownFields.CalculateSize();
                            }
                            return size;
                        }

                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                        public void MergeFrom(ParallelNode other)
                        {
                            if (other == null)
                            {
                                return;
                            }
                            nodes_.Add(other.nodes_);
                            _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
                        }

                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                        public void MergeFrom(pb::CodedInputStream input)
                        {
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                            input.ReadRawMessage(this);
#else
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 10: {
                    nodes_.AddEntriesFrom(input, _repeated_nodes_codec);
                    break;
                  }
                }
              }
#endif
                        }

#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input)
                        {
                            uint tag;
                            while ((tag = input.ReadTag()) != 0)
                            {
                                switch (tag)
                                {
                                    default:
                                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                                        break;
                                    case 10:
                                        {
                                            nodes_.AddEntriesFrom(ref input, _repeated_nodes_codec);
                                            break;
                                        }
                                }
                            }
                        }
#endif

                    }

                    /// <summary>
                    /// This represents a node to send an operation to an implementing service
                    /// </summary>
                    public sealed partial class FetchNode : pb::IMessage<FetchNode>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              , pb::IBufferMessage
#endif
                    {
                        private static readonly pb::MessageParser<FetchNode> _parser = new pb::MessageParser<FetchNode>(() => new FetchNode());
                        private pb::UnknownFieldSet _unknownFields;
                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                        public static pb::MessageParser<FetchNode> Parser { get { return _parser; } }

                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                        public static pbr::MessageDescriptor Descriptor
                        {
                            get { return global::Mdg.Engine.Proto.Trace.Types.QueryPlanNode.Descriptor.NestedTypes[2]; }
                        }

                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                        pbr::MessageDescriptor pb::IMessage.Descriptor
                        {
                            get { return Descriptor; }
                        }

                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                        public FetchNode()
                        {
                            OnConstruction();
                        }

                        partial void OnConstruction();

                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                        public FetchNode(FetchNode other) : this()
                        {
                            serviceName_ = other.serviceName_;
                            traceParsingFailed_ = other.traceParsingFailed_;
                            trace_ = other.trace_ != null ? other.trace_.Clone() : null;
                            sentTimeOffset_ = other.sentTimeOffset_;
                            sentTime_ = other.sentTime_ != null ? other.sentTime_.Clone() : null;
                            receivedTime_ = other.receivedTime_ != null ? other.receivedTime_.Clone() : null;
                            _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
                        }

                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                        public FetchNode Clone()
                        {
                            return new FetchNode(this);
                        }

                        /// <summary>Field number for the "service_name" field.</summary>
                        public const int ServiceNameFieldNumber = 1;
                        private string serviceName_ = "";
                        /// <summary>
                        /// XXX When we want to include more details about the sub-operation that was
                        /// executed against this service, we should include that here in each fetch node.
                        /// This might include an operation signature, requires directive, reference resolutions, etc.
                        /// </summary>
                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                        public string ServiceName
                        {
                            get { return serviceName_; }
                            set
                            {
                                serviceName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
                            }
                        }

                        /// <summary>Field number for the "trace_parsing_failed" field.</summary>
                        public const int TraceParsingFailedFieldNumber = 2;
                        private bool traceParsingFailed_;
                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                        public bool TraceParsingFailed
                        {
                            get { return traceParsingFailed_; }
                            set
                            {
                                traceParsingFailed_ = value;
                            }
                        }

                        /// <summary>Field number for the "trace" field.</summary>
                        public const int TraceFieldNumber = 3;
                        private global::Mdg.Engine.Proto.Trace trace_;
                        /// <summary>
                        /// This Trace only contains start_time, end_time, duration_ns, and root;
                        /// all timings were calculated **on the federated service**, and clock skew
                        /// will be handled by the ingress server.
                        /// </summary>
                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                        public global::Mdg.Engine.Proto.Trace Trace
                        {
                            get { return trace_; }
                            set
                            {
                                trace_ = value;
                            }
                        }

                        /// <summary>Field number for the "sent_time_offset" field.</summary>
                        public const int SentTimeOffsetFieldNumber = 4;
                        private ulong sentTimeOffset_;
                        /// <summary>
                        /// relative to the outer trace's start_time, in ns, measured in the gateway.
                        /// </summary>
                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                        public ulong SentTimeOffset
                        {
                            get { return sentTimeOffset_; }
                            set
                            {
                                sentTimeOffset_ = value;
                            }
                        }

                        /// <summary>Field number for the "sent_time" field.</summary>
                        public const int SentTimeFieldNumber = 5;
                        private global::Google.Protobuf.WellKnownTypes.Timestamp sentTime_;
                        /// <summary>
                        /// Wallclock times measured in the gateway for when this operation was
                        /// sent and received.
                        /// </summary>
                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                        public global::Google.Protobuf.WellKnownTypes.Timestamp SentTime
                        {
                            get { return sentTime_; }
                            set
                            {
                                sentTime_ = value;
                            }
                        }

                        /// <summary>Field number for the "received_time" field.</summary>
                        public const int ReceivedTimeFieldNumber = 6;
                        private global::Google.Protobuf.WellKnownTypes.Timestamp receivedTime_;
                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                        public global::Google.Protobuf.WellKnownTypes.Timestamp ReceivedTime
                        {
                            get { return receivedTime_; }
                            set
                            {
                                receivedTime_ = value;
                            }
                        }

                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                        public override bool Equals(object other)
                        {
                            return Equals(other as FetchNode);
                        }

                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                        public bool Equals(FetchNode other)
                        {
                            if (ReferenceEquals(other, null))
                            {
                                return false;
                            }
                            if (ReferenceEquals(other, this))
                            {
                                return true;
                            }
                            if (ServiceName != other.ServiceName) return false;
                            if (TraceParsingFailed != other.TraceParsingFailed) return false;
                            if (!object.Equals(Trace, other.Trace)) return false;
                            if (SentTimeOffset != other.SentTimeOffset) return false;
                            if (!object.Equals(SentTime, other.SentTime)) return false;
                            if (!object.Equals(ReceivedTime, other.ReceivedTime)) return false;
                            return Equals(_unknownFields, other._unknownFields);
                        }

                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                        public override int GetHashCode()
                        {
                            int hash = 1;
                            if (ServiceName.Length != 0) hash ^= ServiceName.GetHashCode();
                            if (TraceParsingFailed != false) hash ^= TraceParsingFailed.GetHashCode();
                            if (trace_ != null) hash ^= Trace.GetHashCode();
                            if (SentTimeOffset != 0UL) hash ^= SentTimeOffset.GetHashCode();
                            if (sentTime_ != null) hash ^= SentTime.GetHashCode();
                            if (receivedTime_ != null) hash ^= ReceivedTime.GetHashCode();
                            if (_unknownFields != null)
                            {
                                hash ^= _unknownFields.GetHashCode();
                            }
                            return hash;
                        }

                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                        public override string ToString()
                        {
                            return pb::JsonFormatter.ToDiagnosticString(this);
                        }

                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                        public void WriteTo(pb::CodedOutputStream output)
                        {
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                            output.WriteRawMessage(this);
#else
              if (ServiceName.Length != 0) {
                output.WriteRawTag(10);
                output.WriteString(ServiceName);
              }
              if (TraceParsingFailed != false) {
                output.WriteRawTag(16);
                output.WriteBool(TraceParsingFailed);
              }
              if (trace_ != null) {
                output.WriteRawTag(26);
                output.WriteMessage(Trace);
              }
              if (SentTimeOffset != 0UL) {
                output.WriteRawTag(32);
                output.WriteUInt64(SentTimeOffset);
              }
              if (sentTime_ != null) {
                output.WriteRawTag(42);
                output.WriteMessage(SentTime);
              }
              if (receivedTime_ != null) {
                output.WriteRawTag(50);
                output.WriteMessage(ReceivedTime);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
#endif
                        }

#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output)
                        {
                            if (ServiceName.Length != 0)
                            {
                                output.WriteRawTag(10);
                                output.WriteString(ServiceName);
                            }
                            if (TraceParsingFailed != false)
                            {
                                output.WriteRawTag(16);
                                output.WriteBool(TraceParsingFailed);
                            }
                            if (trace_ != null)
                            {
                                output.WriteRawTag(26);
                                output.WriteMessage(Trace);
                            }
                            if (SentTimeOffset != 0UL)
                            {
                                output.WriteRawTag(32);
                                output.WriteUInt64(SentTimeOffset);
                            }
                            if (sentTime_ != null)
                            {
                                output.WriteRawTag(42);
                                output.WriteMessage(SentTime);
                            }
                            if (receivedTime_ != null)
                            {
                                output.WriteRawTag(50);
                                output.WriteMessage(ReceivedTime);
                            }
                            if (_unknownFields != null)
                            {
                                _unknownFields.WriteTo(ref output);
                            }
                        }
#endif

                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                        public int CalculateSize()
                        {
                            int size = 0;
                            if (ServiceName.Length != 0)
                            {
                                size += 1 + pb::CodedOutputStream.ComputeStringSize(ServiceName);
                            }
                            if (TraceParsingFailed != false)
                            {
                                size += 1 + 1;
                            }
                            if (trace_ != null)
                            {
                                size += 1 + pb::CodedOutputStream.ComputeMessageSize(Trace);
                            }
                            if (SentTimeOffset != 0UL)
                            {
                                size += 1 + pb::CodedOutputStream.ComputeUInt64Size(SentTimeOffset);
                            }
                            if (sentTime_ != null)
                            {
                                size += 1 + pb::CodedOutputStream.ComputeMessageSize(SentTime);
                            }
                            if (receivedTime_ != null)
                            {
                                size += 1 + pb::CodedOutputStream.ComputeMessageSize(ReceivedTime);
                            }
                            if (_unknownFields != null)
                            {
                                size += _unknownFields.CalculateSize();
                            }
                            return size;
                        }

                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                        public void MergeFrom(FetchNode other)
                        {
                            if (other == null)
                            {
                                return;
                            }
                            if (other.ServiceName.Length != 0)
                            {
                                ServiceName = other.ServiceName;
                            }
                            if (other.TraceParsingFailed != false)
                            {
                                TraceParsingFailed = other.TraceParsingFailed;
                            }
                            if (other.trace_ != null)
                            {
                                if (trace_ == null)
                                {
                                    Trace = new global::Mdg.Engine.Proto.Trace();
                                }
                                Trace.MergeFrom(other.Trace);
                            }
                            if (other.SentTimeOffset != 0UL)
                            {
                                SentTimeOffset = other.SentTimeOffset;
                            }
                            if (other.sentTime_ != null)
                            {
                                if (sentTime_ == null)
                                {
                                    SentTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
                                }
                                SentTime.MergeFrom(other.SentTime);
                            }
                            if (other.receivedTime_ != null)
                            {
                                if (receivedTime_ == null)
                                {
                                    ReceivedTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
                                }
                                ReceivedTime.MergeFrom(other.ReceivedTime);
                            }
                            _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
                        }

                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                        public void MergeFrom(pb::CodedInputStream input)
                        {
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                            input.ReadRawMessage(this);
#else
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 10: {
                    ServiceName = input.ReadString();
                    break;
                  }
                  case 16: {
                    TraceParsingFailed = input.ReadBool();
                    break;
                  }
                  case 26: {
                    if (trace_ == null) {
                      Trace = new global::Mdg.Engine.Proto.Trace();
                    }
                    input.ReadMessage(Trace);
                    break;
                  }
                  case 32: {
                    SentTimeOffset = input.ReadUInt64();
                    break;
                  }
                  case 42: {
                    if (sentTime_ == null) {
                      SentTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
                    }
                    input.ReadMessage(SentTime);
                    break;
                  }
                  case 50: {
                    if (receivedTime_ == null) {
                      ReceivedTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
                    }
                    input.ReadMessage(ReceivedTime);
                    break;
                  }
                }
              }
#endif
                        }

#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input)
                        {
                            uint tag;
                            while ((tag = input.ReadTag()) != 0)
                            {
                                switch (tag)
                                {
                                    default:
                                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                                        break;
                                    case 10:
                                        {
                                            ServiceName = input.ReadString();
                                            break;
                                        }
                                    case 16:
                                        {
                                            TraceParsingFailed = input.ReadBool();
                                            break;
                                        }
                                    case 26:
                                        {
                                            if (trace_ == null)
                                            {
                                                Trace = new global::Mdg.Engine.Proto.Trace();
                                            }
                                            input.ReadMessage(Trace);
                                            break;
                                        }
                                    case 32:
                                        {
                                            SentTimeOffset = input.ReadUInt64();
                                            break;
                                        }
                                    case 42:
                                        {
                                            if (sentTime_ == null)
                                            {
                                                SentTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
                                            }
                                            input.ReadMessage(SentTime);
                                            break;
                                        }
                                    case 50:
                                        {
                                            if (receivedTime_ == null)
                                            {
                                                ReceivedTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
                                            }
                                            input.ReadMessage(ReceivedTime);
                                            break;
                                        }
                                }
                            }
                        }
#endif

                    }

                    /// <summary>
                    /// This node represents a way to reach into the response path and attach related entities.
                    /// XXX Flatten is really not the right name and this node may be renamed in the query planner.
                    /// </summary>
                    public sealed partial class FlattenNode : pb::IMessage<FlattenNode>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              , pb::IBufferMessage
#endif
                    {
                        private static readonly pb::MessageParser<FlattenNode> _parser = new pb::MessageParser<FlattenNode>(() => new FlattenNode());
                        private pb::UnknownFieldSet _unknownFields;
                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                        public static pb::MessageParser<FlattenNode> Parser { get { return _parser; } }

                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                        public static pbr::MessageDescriptor Descriptor
                        {
                            get { return global::Mdg.Engine.Proto.Trace.Types.QueryPlanNode.Descriptor.NestedTypes[3]; }
                        }

                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                        pbr::MessageDescriptor pb::IMessage.Descriptor
                        {
                            get { return Descriptor; }
                        }

                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                        public FlattenNode()
                        {
                            OnConstruction();
                        }

                        partial void OnConstruction();

                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                        public FlattenNode(FlattenNode other) : this()
                        {
                            responsePath_ = other.responsePath_.Clone();
                            node_ = other.node_ != null ? other.node_.Clone() : null;
                            _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
                        }

                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                        public FlattenNode Clone()
                        {
                            return new FlattenNode(this);
                        }

                        /// <summary>Field number for the "response_path" field.</summary>
                        public const int ResponsePathFieldNumber = 1;
                        private static readonly pb::FieldCodec<global::Mdg.Engine.Proto.Trace.Types.QueryPlanNode.Types.ResponsePathElement> _repeated_responsePath_codec
                            = pb::FieldCodec.ForMessage(10, global::Mdg.Engine.Proto.Trace.Types.QueryPlanNode.Types.ResponsePathElement.Parser);
                        private readonly pbc::RepeatedField<global::Mdg.Engine.Proto.Trace.Types.QueryPlanNode.Types.ResponsePathElement> responsePath_ = new pbc::RepeatedField<global::Mdg.Engine.Proto.Trace.Types.QueryPlanNode.Types.ResponsePathElement>();
                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                        public pbc::RepeatedField<global::Mdg.Engine.Proto.Trace.Types.QueryPlanNode.Types.ResponsePathElement> ResponsePath
                        {
                            get { return responsePath_; }
                        }

                        /// <summary>Field number for the "node" field.</summary>
                        public const int NodeFieldNumber = 2;
                        private global::Mdg.Engine.Proto.Trace.Types.QueryPlanNode node_;
                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                        public global::Mdg.Engine.Proto.Trace.Types.QueryPlanNode Node
                        {
                            get { return node_; }
                            set
                            {
                                node_ = value;
                            }
                        }

                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                        public override bool Equals(object other)
                        {
                            return Equals(other as FlattenNode);
                        }

                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                        public bool Equals(FlattenNode other)
                        {
                            if (ReferenceEquals(other, null))
                            {
                                return false;
                            }
                            if (ReferenceEquals(other, this))
                            {
                                return true;
                            }
                            if (!responsePath_.Equals(other.responsePath_)) return false;
                            if (!object.Equals(Node, other.Node)) return false;
                            return Equals(_unknownFields, other._unknownFields);
                        }

                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                        public override int GetHashCode()
                        {
                            int hash = 1;
                            hash ^= responsePath_.GetHashCode();
                            if (node_ != null) hash ^= Node.GetHashCode();
                            if (_unknownFields != null)
                            {
                                hash ^= _unknownFields.GetHashCode();
                            }
                            return hash;
                        }

                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                        public override string ToString()
                        {
                            return pb::JsonFormatter.ToDiagnosticString(this);
                        }

                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                        public void WriteTo(pb::CodedOutputStream output)
                        {
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                            output.WriteRawMessage(this);
#else
              responsePath_.WriteTo(output, _repeated_responsePath_codec);
              if (node_ != null) {
                output.WriteRawTag(18);
                output.WriteMessage(Node);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
#endif
                        }

#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output)
                        {
                            responsePath_.WriteTo(ref output, _repeated_responsePath_codec);
                            if (node_ != null)
                            {
                                output.WriteRawTag(18);
                                output.WriteMessage(Node);
                            }
                            if (_unknownFields != null)
                            {
                                _unknownFields.WriteTo(ref output);
                            }
                        }
#endif

                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                        public int CalculateSize()
                        {
                            int size = 0;
                            size += responsePath_.CalculateSize(_repeated_responsePath_codec);
                            if (node_ != null)
                            {
                                size += 1 + pb::CodedOutputStream.ComputeMessageSize(Node);
                            }
                            if (_unknownFields != null)
                            {
                                size += _unknownFields.CalculateSize();
                            }
                            return size;
                        }

                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                        public void MergeFrom(FlattenNode other)
                        {
                            if (other == null)
                            {
                                return;
                            }
                            responsePath_.Add(other.responsePath_);
                            if (other.node_ != null)
                            {
                                if (node_ == null)
                                {
                                    Node = new global::Mdg.Engine.Proto.Trace.Types.QueryPlanNode();
                                }
                                Node.MergeFrom(other.Node);
                            }
                            _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
                        }

                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                        public void MergeFrom(pb::CodedInputStream input)
                        {
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                            input.ReadRawMessage(this);
#else
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 10: {
                    responsePath_.AddEntriesFrom(input, _repeated_responsePath_codec);
                    break;
                  }
                  case 18: {
                    if (node_ == null) {
                      Node = new global::Mdg.Engine.Proto.Trace.Types.QueryPlanNode();
                    }
                    input.ReadMessage(Node);
                    break;
                  }
                }
              }
#endif
                        }

#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input)
                        {
                            uint tag;
                            while ((tag = input.ReadTag()) != 0)
                            {
                                switch (tag)
                                {
                                    default:
                                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                                        break;
                                    case 10:
                                        {
                                            responsePath_.AddEntriesFrom(ref input, _repeated_responsePath_codec);
                                            break;
                                        }
                                    case 18:
                                        {
                                            if (node_ == null)
                                            {
                                                Node = new global::Mdg.Engine.Proto.Trace.Types.QueryPlanNode();
                                            }
                                            input.ReadMessage(Node);
                                            break;
                                        }
                                }
                            }
                        }
#endif

                    }

                    public sealed partial class ResponsePathElement : pb::IMessage<ResponsePathElement>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              , pb::IBufferMessage
#endif
                    {
                        private static readonly pb::MessageParser<ResponsePathElement> _parser = new pb::MessageParser<ResponsePathElement>(() => new ResponsePathElement());
                        private pb::UnknownFieldSet _unknownFields;
                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                        public static pb::MessageParser<ResponsePathElement> Parser { get { return _parser; } }

                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                        public static pbr::MessageDescriptor Descriptor
                        {
                            get { return global::Mdg.Engine.Proto.Trace.Types.QueryPlanNode.Descriptor.NestedTypes[4]; }
                        }

                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                        pbr::MessageDescriptor pb::IMessage.Descriptor
                        {
                            get { return Descriptor; }
                        }

                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                        public ResponsePathElement()
                        {
                            OnConstruction();
                        }

                        partial void OnConstruction();

                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                        public ResponsePathElement(ResponsePathElement other) : this()
                        {
                            switch (other.IdCase)
                            {
                                case IdOneofCase.FieldName:
                                    FieldName = other.FieldName;
                                    break;
                                case IdOneofCase.Index:
                                    Index = other.Index;
                                    break;
                            }

                            _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
                        }

                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                        public ResponsePathElement Clone()
                        {
                            return new ResponsePathElement(this);
                        }

                        /// <summary>Field number for the "field_name" field.</summary>
                        public const int FieldNameFieldNumber = 1;
                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                        public string FieldName
                        {
                            get { return idCase_ == IdOneofCase.FieldName ? (string)id_ : ""; }
                            set
                            {
                                id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
                                idCase_ = IdOneofCase.FieldName;
                            }
                        }

                        /// <summary>Field number for the "index" field.</summary>
                        public const int IndexFieldNumber = 2;
                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                        public uint Index
                        {
                            get { return idCase_ == IdOneofCase.Index ? (uint)id_ : 0; }
                            set
                            {
                                id_ = value;
                                idCase_ = IdOneofCase.Index;
                            }
                        }

                        private object id_;
                        /// <summary>Enum of possible cases for the "id" oneof.</summary>
                        public enum IdOneofCase
                        {
                            None = 0,
                            FieldName = 1,
                            Index = 2,
                        }
                        private IdOneofCase idCase_ = IdOneofCase.None;
                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                        public IdOneofCase IdCase
                        {
                            get { return idCase_; }
                        }

                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                        public void ClearId()
                        {
                            idCase_ = IdOneofCase.None;
                            id_ = null;
                        }

                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                        public override bool Equals(object other)
                        {
                            return Equals(other as ResponsePathElement);
                        }

                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                        public bool Equals(ResponsePathElement other)
                        {
                            if (ReferenceEquals(other, null))
                            {
                                return false;
                            }
                            if (ReferenceEquals(other, this))
                            {
                                return true;
                            }
                            if (FieldName != other.FieldName) return false;
                            if (Index != other.Index) return false;
                            if (IdCase != other.IdCase) return false;
                            return Equals(_unknownFields, other._unknownFields);
                        }

                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                        public override int GetHashCode()
                        {
                            int hash = 1;
                            if (idCase_ == IdOneofCase.FieldName) hash ^= FieldName.GetHashCode();
                            if (idCase_ == IdOneofCase.Index) hash ^= Index.GetHashCode();
                            hash ^= (int)idCase_;
                            if (_unknownFields != null)
                            {
                                hash ^= _unknownFields.GetHashCode();
                            }
                            return hash;
                        }

                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                        public override string ToString()
                        {
                            return pb::JsonFormatter.ToDiagnosticString(this);
                        }

                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                        public void WriteTo(pb::CodedOutputStream output)
                        {
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                            output.WriteRawMessage(this);
#else
              if (idCase_ == IdOneofCase.FieldName) {
                output.WriteRawTag(10);
                output.WriteString(FieldName);
              }
              if (idCase_ == IdOneofCase.Index) {
                output.WriteRawTag(16);
                output.WriteUInt32(Index);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
#endif
                        }

#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output)
                        {
                            if (idCase_ == IdOneofCase.FieldName)
                            {
                                output.WriteRawTag(10);
                                output.WriteString(FieldName);
                            }
                            if (idCase_ == IdOneofCase.Index)
                            {
                                output.WriteRawTag(16);
                                output.WriteUInt32(Index);
                            }
                            if (_unknownFields != null)
                            {
                                _unknownFields.WriteTo(ref output);
                            }
                        }
#endif

                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                        public int CalculateSize()
                        {
                            int size = 0;
                            if (idCase_ == IdOneofCase.FieldName)
                            {
                                size += 1 + pb::CodedOutputStream.ComputeStringSize(FieldName);
                            }
                            if (idCase_ == IdOneofCase.Index)
                            {
                                size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Index);
                            }
                            if (_unknownFields != null)
                            {
                                size += _unknownFields.CalculateSize();
                            }
                            return size;
                        }

                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                        public void MergeFrom(ResponsePathElement other)
                        {
                            if (other == null)
                            {
                                return;
                            }
                            switch (other.IdCase)
                            {
                                case IdOneofCase.FieldName:
                                    FieldName = other.FieldName;
                                    break;
                                case IdOneofCase.Index:
                                    Index = other.Index;
                                    break;
                            }

                            _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
                        }

                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                        public void MergeFrom(pb::CodedInputStream input)
                        {
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                            input.ReadRawMessage(this);
#else
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 10: {
                    FieldName = input.ReadString();
                    break;
                  }
                  case 16: {
                    Index = input.ReadUInt32();
                    break;
                  }
                }
              }
#endif
                        }

#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input)
                        {
                            uint tag;
                            while ((tag = input.ReadTag()) != 0)
                            {
                                switch (tag)
                                {
                                    default:
                                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                                        break;
                                    case 10:
                                        {
                                            FieldName = input.ReadString();
                                            break;
                                        }
                                    case 16:
                                        {
                                            Index = input.ReadUInt32();
                                            break;
                                        }
                                }
                            }
                        }
#endif

                    }

                }
                #endregion

            }

        }
        #endregion

    }

    /// <summary>
    /// The `service` value embedded within the header key is not guaranteed to contain an actual service,
    /// and, in most cases, the service information is trusted to come from upstream processing. If the
    /// service _is_ specified in this header, then it is checked to match the context that is reporting it.
    /// Otherwise, the service information is deduced from the token context of the reporter and then sent
    /// along via other mechanisms (in Kafka, the `ReportKafkaKey). The other information (hostname,
    /// agent_version, etc.) is sent by the Apollo Engine Reporting agent, but we do not currently save that
    /// information to any of our persistent storage.
    /// </summary>
    public sealed partial class ReportHeader : pb::IMessage<ReportHeader>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
#endif
    {
        private static readonly pb::MessageParser<ReportHeader> _parser = new pb::MessageParser<ReportHeader>(() => new ReportHeader());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<ReportHeader> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor
        {
            get { return global::Mdg.Engine.Proto.ReportsReflection.Descriptor.MessageTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor
        {
            get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ReportHeader()
        {
            OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ReportHeader(ReportHeader other) : this()
        {
            hostname_ = other.hostname_;
            agentVersion_ = other.agentVersion_;
            serviceVersion_ = other.serviceVersion_;
            runtimeVersion_ = other.runtimeVersion_;
            uname_ = other.uname_;
            schemaTag_ = other.schemaTag_;
            executableSchemaId_ = other.executableSchemaId_;
            _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ReportHeader Clone()
        {
            return new ReportHeader(this);
        }

        /// <summary>Field number for the "hostname" field.</summary>
        public const int HostnameFieldNumber = 5;
        private string hostname_ = "";
        /// <summary>
        /// eg "host-01.example.com"
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Hostname
        {
            get { return hostname_; }
            set
            {
                hostname_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
            }
        }

        /// <summary>Field number for the "agent_version" field.</summary>
        public const int AgentVersionFieldNumber = 6;
        private string agentVersion_ = "";
        /// <summary>
        /// eg "engineproxy 0.1.0"
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string AgentVersion
        {
            get { return agentVersion_; }
            set
            {
                agentVersion_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
            }
        }

        /// <summary>Field number for the "service_version" field.</summary>
        public const int ServiceVersionFieldNumber = 7;
        private string serviceVersion_ = "";
        /// <summary>
        /// eg "prod-4279-20160804T065423Z-5-g3cf0aa8" (taken from `git describe --tags`)
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string ServiceVersion
        {
            get { return serviceVersion_; }
            set
            {
                serviceVersion_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
            }
        }

        /// <summary>Field number for the "runtime_version" field.</summary>
        public const int RuntimeVersionFieldNumber = 8;
        private string runtimeVersion_ = "";
        /// <summary>
        /// eg "node v4.6.0"
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string RuntimeVersion
        {
            get { return runtimeVersion_; }
            set
            {
                runtimeVersion_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
            }
        }

        /// <summary>Field number for the "uname" field.</summary>
        public const int UnameFieldNumber = 9;
        private string uname_ = "";
        /// <summary>
        /// eg "Linux box 4.6.5-1-ec2 #1 SMP Mon Aug 1 02:31:38 PDT 2016 x86_64 GNU/Linux"
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Uname
        {
            get { return uname_; }
            set
            {
                uname_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
            }
        }

        /// <summary>Field number for the "schema_tag" field.</summary>
        public const int SchemaTagFieldNumber = 10;
        private string schemaTag_ = "";
        /// <summary>
        /// eg "current", "prod"
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string SchemaTag
        {
            get { return schemaTag_; }
            set
            {
                schemaTag_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
            }
        }

        /// <summary>Field number for the "executable_schema_id" field.</summary>
        public const int ExecutableSchemaIdFieldNumber = 11;
        private string executableSchemaId_ = "";
        /// <summary>
        /// An id that is used to represent the schema to Apollo Graph Manager
        /// Using this in place of what used to be schema_hash, since that is no longer
        /// attached to a schema in the backend.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string ExecutableSchemaId
        {
            get { return executableSchemaId_; }
            set
            {
                executableSchemaId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other)
        {
            return Equals(other as ReportHeader);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(ReportHeader other)
        {
            if (ReferenceEquals(other, null))
            {
                return false;
            }
            if (ReferenceEquals(other, this))
            {
                return true;
            }
            if (Hostname != other.Hostname) return false;
            if (AgentVersion != other.AgentVersion) return false;
            if (ServiceVersion != other.ServiceVersion) return false;
            if (RuntimeVersion != other.RuntimeVersion) return false;
            if (Uname != other.Uname) return false;
            if (SchemaTag != other.SchemaTag) return false;
            if (ExecutableSchemaId != other.ExecutableSchemaId) return false;
            return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode()
        {
            int hash = 1;
            if (Hostname.Length != 0) hash ^= Hostname.GetHashCode();
            if (AgentVersion.Length != 0) hash ^= AgentVersion.GetHashCode();
            if (ServiceVersion.Length != 0) hash ^= ServiceVersion.GetHashCode();
            if (RuntimeVersion.Length != 0) hash ^= RuntimeVersion.GetHashCode();
            if (Uname.Length != 0) hash ^= Uname.GetHashCode();
            if (SchemaTag.Length != 0) hash ^= SchemaTag.GetHashCode();
            if (ExecutableSchemaId.Length != 0) hash ^= ExecutableSchemaId.GetHashCode();
            if (_unknownFields != null)
            {
                hash ^= _unknownFields.GetHashCode();
            }
            return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString()
        {
            return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output)
        {
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            output.WriteRawMessage(this);
#else
      if (Hostname.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Hostname);
      }
      if (AgentVersion.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(AgentVersion);
      }
      if (ServiceVersion.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(ServiceVersion);
      }
      if (RuntimeVersion.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(RuntimeVersion);
      }
      if (Uname.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(Uname);
      }
      if (SchemaTag.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(SchemaTag);
      }
      if (ExecutableSchemaId.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(ExecutableSchemaId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
#endif
        }

#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output)
        {
            if (Hostname.Length != 0)
            {
                output.WriteRawTag(42);
                output.WriteString(Hostname);
            }
            if (AgentVersion.Length != 0)
            {
                output.WriteRawTag(50);
                output.WriteString(AgentVersion);
            }
            if (ServiceVersion.Length != 0)
            {
                output.WriteRawTag(58);
                output.WriteString(ServiceVersion);
            }
            if (RuntimeVersion.Length != 0)
            {
                output.WriteRawTag(66);
                output.WriteString(RuntimeVersion);
            }
            if (Uname.Length != 0)
            {
                output.WriteRawTag(74);
                output.WriteString(Uname);
            }
            if (SchemaTag.Length != 0)
            {
                output.WriteRawTag(82);
                output.WriteString(SchemaTag);
            }
            if (ExecutableSchemaId.Length != 0)
            {
                output.WriteRawTag(90);
                output.WriteString(ExecutableSchemaId);
            }
            if (_unknownFields != null)
            {
                _unknownFields.WriteTo(ref output);
            }
        }
#endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize()
        {
            int size = 0;
            if (Hostname.Length != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(Hostname);
            }
            if (AgentVersion.Length != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(AgentVersion);
            }
            if (ServiceVersion.Length != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(ServiceVersion);
            }
            if (RuntimeVersion.Length != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(RuntimeVersion);
            }
            if (Uname.Length != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(Uname);
            }
            if (SchemaTag.Length != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(SchemaTag);
            }
            if (ExecutableSchemaId.Length != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(ExecutableSchemaId);
            }
            if (_unknownFields != null)
            {
                size += _unknownFields.CalculateSize();
            }
            return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(ReportHeader other)
        {
            if (other == null)
            {
                return;
            }
            if (other.Hostname.Length != 0)
            {
                Hostname = other.Hostname;
            }
            if (other.AgentVersion.Length != 0)
            {
                AgentVersion = other.AgentVersion;
            }
            if (other.ServiceVersion.Length != 0)
            {
                ServiceVersion = other.ServiceVersion;
            }
            if (other.RuntimeVersion.Length != 0)
            {
                RuntimeVersion = other.RuntimeVersion;
            }
            if (other.Uname.Length != 0)
            {
                Uname = other.Uname;
            }
            if (other.SchemaTag.Length != 0)
            {
                SchemaTag = other.SchemaTag;
            }
            if (other.ExecutableSchemaId.Length != 0)
            {
                ExecutableSchemaId = other.ExecutableSchemaId;
            }
            _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input)
        {
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            input.ReadRawMessage(this);
#else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 42: {
            Hostname = input.ReadString();
            break;
          }
          case 50: {
            AgentVersion = input.ReadString();
            break;
          }
          case 58: {
            ServiceVersion = input.ReadString();
            break;
          }
          case 66: {
            RuntimeVersion = input.ReadString();
            break;
          }
          case 74: {
            Uname = input.ReadString();
            break;
          }
          case 82: {
            SchemaTag = input.ReadString();
            break;
          }
          case 90: {
            ExecutableSchemaId = input.ReadString();
            break;
          }
        }
      }
#endif
        }

#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input)
        {
            uint tag;
            while ((tag = input.ReadTag()) != 0)
            {
                switch (tag)
                {
                    default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                        break;
                    case 42:
                        {
                            Hostname = input.ReadString();
                            break;
                        }
                    case 50:
                        {
                            AgentVersion = input.ReadString();
                            break;
                        }
                    case 58:
                        {
                            ServiceVersion = input.ReadString();
                            break;
                        }
                    case 66:
                        {
                            RuntimeVersion = input.ReadString();
                            break;
                        }
                    case 74:
                        {
                            Uname = input.ReadString();
                            break;
                        }
                    case 82:
                        {
                            SchemaTag = input.ReadString();
                            break;
                        }
                    case 90:
                        {
                            ExecutableSchemaId = input.ReadString();
                            break;
                        }
                }
            }
        }
#endif

    }

    public sealed partial class PathErrorStats : pb::IMessage<PathErrorStats>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
#endif
    {
        private static readonly pb::MessageParser<PathErrorStats> _parser = new pb::MessageParser<PathErrorStats>(() => new PathErrorStats());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<PathErrorStats> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor
        {
            get { return global::Mdg.Engine.Proto.ReportsReflection.Descriptor.MessageTypes[2]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor
        {
            get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public PathErrorStats()
        {
            OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public PathErrorStats(PathErrorStats other) : this()
        {
            children_ = other.children_.Clone();
            errorsCount_ = other.errorsCount_;
            requestsWithErrorsCount_ = other.requestsWithErrorsCount_;
            _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public PathErrorStats Clone()
        {
            return new PathErrorStats(this);
        }

        /// <summary>Field number for the "children" field.</summary>
        public const int ChildrenFieldNumber = 1;
        private static readonly pbc::MapField<string, global::Mdg.Engine.Proto.PathErrorStats>.Codec _map_children_codec
            = new pbc::MapField<string, global::Mdg.Engine.Proto.PathErrorStats>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::Mdg.Engine.Proto.PathErrorStats.Parser), 10);
        private readonly pbc::MapField<string, global::Mdg.Engine.Proto.PathErrorStats> children_ = new pbc::MapField<string, global::Mdg.Engine.Proto.PathErrorStats>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::MapField<string, global::Mdg.Engine.Proto.PathErrorStats> Children
        {
            get { return children_; }
        }

        /// <summary>Field number for the "errors_count" field.</summary>
        public const int ErrorsCountFieldNumber = 4;
        private ulong errorsCount_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ulong ErrorsCount
        {
            get { return errorsCount_; }
            set
            {
                errorsCount_ = value;
            }
        }

        /// <summary>Field number for the "requests_with_errors_count" field.</summary>
        public const int RequestsWithErrorsCountFieldNumber = 5;
        private ulong requestsWithErrorsCount_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ulong RequestsWithErrorsCount
        {
            get { return requestsWithErrorsCount_; }
            set
            {
                requestsWithErrorsCount_ = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other)
        {
            return Equals(other as PathErrorStats);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(PathErrorStats other)
        {
            if (ReferenceEquals(other, null))
            {
                return false;
            }
            if (ReferenceEquals(other, this))
            {
                return true;
            }
            if (!Children.Equals(other.Children)) return false;
            if (ErrorsCount != other.ErrorsCount) return false;
            if (RequestsWithErrorsCount != other.RequestsWithErrorsCount) return false;
            return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode()
        {
            int hash = 1;
            hash ^= Children.GetHashCode();
            if (ErrorsCount != 0UL) hash ^= ErrorsCount.GetHashCode();
            if (RequestsWithErrorsCount != 0UL) hash ^= RequestsWithErrorsCount.GetHashCode();
            if (_unknownFields != null)
            {
                hash ^= _unknownFields.GetHashCode();
            }
            return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString()
        {
            return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output)
        {
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            output.WriteRawMessage(this);
#else
      children_.WriteTo(output, _map_children_codec);
      if (ErrorsCount != 0UL) {
        output.WriteRawTag(32);
        output.WriteUInt64(ErrorsCount);
      }
      if (RequestsWithErrorsCount != 0UL) {
        output.WriteRawTag(40);
        output.WriteUInt64(RequestsWithErrorsCount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
#endif
        }

#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output)
        {
            children_.WriteTo(ref output, _map_children_codec);
            if (ErrorsCount != 0UL)
            {
                output.WriteRawTag(32);
                output.WriteUInt64(ErrorsCount);
            }
            if (RequestsWithErrorsCount != 0UL)
            {
                output.WriteRawTag(40);
                output.WriteUInt64(RequestsWithErrorsCount);
            }
            if (_unknownFields != null)
            {
                _unknownFields.WriteTo(ref output);
            }
        }
#endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize()
        {
            int size = 0;
            size += children_.CalculateSize(_map_children_codec);
            if (ErrorsCount != 0UL)
            {
                size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ErrorsCount);
            }
            if (RequestsWithErrorsCount != 0UL)
            {
                size += 1 + pb::CodedOutputStream.ComputeUInt64Size(RequestsWithErrorsCount);
            }
            if (_unknownFields != null)
            {
                size += _unknownFields.CalculateSize();
            }
            return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(PathErrorStats other)
        {
            if (other == null)
            {
                return;
            }
            children_.Add(other.children_);
            if (other.ErrorsCount != 0UL)
            {
                ErrorsCount = other.ErrorsCount;
            }
            if (other.RequestsWithErrorsCount != 0UL)
            {
                RequestsWithErrorsCount = other.RequestsWithErrorsCount;
            }
            _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input)
        {
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            input.ReadRawMessage(this);
#else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            children_.AddEntriesFrom(input, _map_children_codec);
            break;
          }
          case 32: {
            ErrorsCount = input.ReadUInt64();
            break;
          }
          case 40: {
            RequestsWithErrorsCount = input.ReadUInt64();
            break;
          }
        }
      }
#endif
        }

#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input)
        {
            uint tag;
            while ((tag = input.ReadTag()) != 0)
            {
                switch (tag)
                {
                    default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                        break;
                    case 10:
                        {
                            children_.AddEntriesFrom(ref input, _map_children_codec);
                            break;
                        }
                    case 32:
                        {
                            ErrorsCount = input.ReadUInt64();
                            break;
                        }
                    case 40:
                        {
                            RequestsWithErrorsCount = input.ReadUInt64();
                            break;
                        }
                }
            }
        }
#endif

    }

    public sealed partial class QueryLatencyStats : pb::IMessage<QueryLatencyStats>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
#endif
    {
        private static readonly pb::MessageParser<QueryLatencyStats> _parser = new pb::MessageParser<QueryLatencyStats>(() => new QueryLatencyStats());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<QueryLatencyStats> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor
        {
            get { return global::Mdg.Engine.Proto.ReportsReflection.Descriptor.MessageTypes[3]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor
        {
            get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public QueryLatencyStats()
        {
            OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public QueryLatencyStats(QueryLatencyStats other) : this()
        {
            latencyCount_ = other.latencyCount_.Clone();
            requestCount_ = other.requestCount_;
            cacheHits_ = other.cacheHits_;
            persistedQueryHits_ = other.persistedQueryHits_;
            persistedQueryMisses_ = other.persistedQueryMisses_;
            cacheLatencyCount_ = other.cacheLatencyCount_.Clone();
            rootErrorStats_ = other.rootErrorStats_ != null ? other.rootErrorStats_.Clone() : null;
            requestsWithErrorsCount_ = other.requestsWithErrorsCount_;
            publicCacheTtlCount_ = other.publicCacheTtlCount_.Clone();
            privateCacheTtlCount_ = other.privateCacheTtlCount_.Clone();
            registeredOperationCount_ = other.registeredOperationCount_;
            forbiddenOperationCount_ = other.forbiddenOperationCount_;
            _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public QueryLatencyStats Clone()
        {
            return new QueryLatencyStats(this);
        }

        /// <summary>Field number for the "latency_count" field.</summary>
        public const int LatencyCountFieldNumber = 1;
        private static readonly pb::FieldCodec<long> _repeated_latencyCount_codec
            = pb::FieldCodec.ForInt64(10);
        private readonly pbc::RepeatedField<long> latencyCount_ = new pbc::RepeatedField<long>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<long> LatencyCount
        {
            get { return latencyCount_; }
        }

        /// <summary>Field number for the "request_count" field.</summary>
        public const int RequestCountFieldNumber = 2;
        private ulong requestCount_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ulong RequestCount
        {
            get { return requestCount_; }
            set
            {
                requestCount_ = value;
            }
        }

        /// <summary>Field number for the "cache_hits" field.</summary>
        public const int CacheHitsFieldNumber = 3;
        private ulong cacheHits_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ulong CacheHits
        {
            get { return cacheHits_; }
            set
            {
                cacheHits_ = value;
            }
        }

        /// <summary>Field number for the "persisted_query_hits" field.</summary>
        public const int PersistedQueryHitsFieldNumber = 4;
        private ulong persistedQueryHits_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ulong PersistedQueryHits
        {
            get { return persistedQueryHits_; }
            set
            {
                persistedQueryHits_ = value;
            }
        }

        /// <summary>Field number for the "persisted_query_misses" field.</summary>
        public const int PersistedQueryMissesFieldNumber = 5;
        private ulong persistedQueryMisses_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ulong PersistedQueryMisses
        {
            get { return persistedQueryMisses_; }
            set
            {
                persistedQueryMisses_ = value;
            }
        }

        /// <summary>Field number for the "cache_latency_count" field.</summary>
        public const int CacheLatencyCountFieldNumber = 6;
        private static readonly pb::FieldCodec<long> _repeated_cacheLatencyCount_codec
            = pb::FieldCodec.ForInt64(50);
        private readonly pbc::RepeatedField<long> cacheLatencyCount_ = new pbc::RepeatedField<long>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<long> CacheLatencyCount
        {
            get { return cacheLatencyCount_; }
        }

        /// <summary>Field number for the "root_error_stats" field.</summary>
        public const int RootErrorStatsFieldNumber = 7;
        private global::Mdg.Engine.Proto.PathErrorStats rootErrorStats_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Mdg.Engine.Proto.PathErrorStats RootErrorStats
        {
            get { return rootErrorStats_; }
            set
            {
                rootErrorStats_ = value;
            }
        }

        /// <summary>Field number for the "requests_with_errors_count" field.</summary>
        public const int RequestsWithErrorsCountFieldNumber = 8;
        private ulong requestsWithErrorsCount_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ulong RequestsWithErrorsCount
        {
            get { return requestsWithErrorsCount_; }
            set
            {
                requestsWithErrorsCount_ = value;
            }
        }

        /// <summary>Field number for the "public_cache_ttl_count" field.</summary>
        public const int PublicCacheTtlCountFieldNumber = 9;
        private static readonly pb::FieldCodec<long> _repeated_publicCacheTtlCount_codec
            = pb::FieldCodec.ForInt64(74);
        private readonly pbc::RepeatedField<long> publicCacheTtlCount_ = new pbc::RepeatedField<long>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<long> PublicCacheTtlCount
        {
            get { return publicCacheTtlCount_; }
        }

        /// <summary>Field number for the "private_cache_ttl_count" field.</summary>
        public const int PrivateCacheTtlCountFieldNumber = 10;
        private static readonly pb::FieldCodec<long> _repeated_privateCacheTtlCount_codec
            = pb::FieldCodec.ForInt64(82);
        private readonly pbc::RepeatedField<long> privateCacheTtlCount_ = new pbc::RepeatedField<long>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<long> PrivateCacheTtlCount
        {
            get { return privateCacheTtlCount_; }
        }

        /// <summary>Field number for the "registered_operation_count" field.</summary>
        public const int RegisteredOperationCountFieldNumber = 11;
        private ulong registeredOperationCount_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ulong RegisteredOperationCount
        {
            get { return registeredOperationCount_; }
            set
            {
                registeredOperationCount_ = value;
            }
        }

        /// <summary>Field number for the "forbidden_operation_count" field.</summary>
        public const int ForbiddenOperationCountFieldNumber = 12;
        private ulong forbiddenOperationCount_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ulong ForbiddenOperationCount
        {
            get { return forbiddenOperationCount_; }
            set
            {
                forbiddenOperationCount_ = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other)
        {
            return Equals(other as QueryLatencyStats);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(QueryLatencyStats other)
        {
            if (ReferenceEquals(other, null))
            {
                return false;
            }
            if (ReferenceEquals(other, this))
            {
                return true;
            }
            if (!latencyCount_.Equals(other.latencyCount_)) return false;
            if (RequestCount != other.RequestCount) return false;
            if (CacheHits != other.CacheHits) return false;
            if (PersistedQueryHits != other.PersistedQueryHits) return false;
            if (PersistedQueryMisses != other.PersistedQueryMisses) return false;
            if (!cacheLatencyCount_.Equals(other.cacheLatencyCount_)) return false;
            if (!object.Equals(RootErrorStats, other.RootErrorStats)) return false;
            if (RequestsWithErrorsCount != other.RequestsWithErrorsCount) return false;
            if (!publicCacheTtlCount_.Equals(other.publicCacheTtlCount_)) return false;
            if (!privateCacheTtlCount_.Equals(other.privateCacheTtlCount_)) return false;
            if (RegisteredOperationCount != other.RegisteredOperationCount) return false;
            if (ForbiddenOperationCount != other.ForbiddenOperationCount) return false;
            return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode()
        {
            int hash = 1;
            hash ^= latencyCount_.GetHashCode();
            if (RequestCount != 0UL) hash ^= RequestCount.GetHashCode();
            if (CacheHits != 0UL) hash ^= CacheHits.GetHashCode();
            if (PersistedQueryHits != 0UL) hash ^= PersistedQueryHits.GetHashCode();
            if (PersistedQueryMisses != 0UL) hash ^= PersistedQueryMisses.GetHashCode();
            hash ^= cacheLatencyCount_.GetHashCode();
            if (rootErrorStats_ != null) hash ^= RootErrorStats.GetHashCode();
            if (RequestsWithErrorsCount != 0UL) hash ^= RequestsWithErrorsCount.GetHashCode();
            hash ^= publicCacheTtlCount_.GetHashCode();
            hash ^= privateCacheTtlCount_.GetHashCode();
            if (RegisteredOperationCount != 0UL) hash ^= RegisteredOperationCount.GetHashCode();
            if (ForbiddenOperationCount != 0UL) hash ^= ForbiddenOperationCount.GetHashCode();
            if (_unknownFields != null)
            {
                hash ^= _unknownFields.GetHashCode();
            }
            return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString()
        {
            return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output)
        {
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            output.WriteRawMessage(this);
#else
      latencyCount_.WriteTo(output, _repeated_latencyCount_codec);
      if (RequestCount != 0UL) {
        output.WriteRawTag(16);
        output.WriteUInt64(RequestCount);
      }
      if (CacheHits != 0UL) {
        output.WriteRawTag(24);
        output.WriteUInt64(CacheHits);
      }
      if (PersistedQueryHits != 0UL) {
        output.WriteRawTag(32);
        output.WriteUInt64(PersistedQueryHits);
      }
      if (PersistedQueryMisses != 0UL) {
        output.WriteRawTag(40);
        output.WriteUInt64(PersistedQueryMisses);
      }
      cacheLatencyCount_.WriteTo(output, _repeated_cacheLatencyCount_codec);
      if (rootErrorStats_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(RootErrorStats);
      }
      if (RequestsWithErrorsCount != 0UL) {
        output.WriteRawTag(64);
        output.WriteUInt64(RequestsWithErrorsCount);
      }
      publicCacheTtlCount_.WriteTo(output, _repeated_publicCacheTtlCount_codec);
      privateCacheTtlCount_.WriteTo(output, _repeated_privateCacheTtlCount_codec);
      if (RegisteredOperationCount != 0UL) {
        output.WriteRawTag(88);
        output.WriteUInt64(RegisteredOperationCount);
      }
      if (ForbiddenOperationCount != 0UL) {
        output.WriteRawTag(96);
        output.WriteUInt64(ForbiddenOperationCount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
#endif
        }

#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output)
        {
            latencyCount_.WriteTo(ref output, _repeated_latencyCount_codec);
            if (RequestCount != 0UL)
            {
                output.WriteRawTag(16);
                output.WriteUInt64(RequestCount);
            }
            if (CacheHits != 0UL)
            {
                output.WriteRawTag(24);
                output.WriteUInt64(CacheHits);
            }
            if (PersistedQueryHits != 0UL)
            {
                output.WriteRawTag(32);
                output.WriteUInt64(PersistedQueryHits);
            }
            if (PersistedQueryMisses != 0UL)
            {
                output.WriteRawTag(40);
                output.WriteUInt64(PersistedQueryMisses);
            }
            cacheLatencyCount_.WriteTo(ref output, _repeated_cacheLatencyCount_codec);
            if (rootErrorStats_ != null)
            {
                output.WriteRawTag(58);
                output.WriteMessage(RootErrorStats);
            }
            if (RequestsWithErrorsCount != 0UL)
            {
                output.WriteRawTag(64);
                output.WriteUInt64(RequestsWithErrorsCount);
            }
            publicCacheTtlCount_.WriteTo(ref output, _repeated_publicCacheTtlCount_codec);
            privateCacheTtlCount_.WriteTo(ref output, _repeated_privateCacheTtlCount_codec);
            if (RegisteredOperationCount != 0UL)
            {
                output.WriteRawTag(88);
                output.WriteUInt64(RegisteredOperationCount);
            }
            if (ForbiddenOperationCount != 0UL)
            {
                output.WriteRawTag(96);
                output.WriteUInt64(ForbiddenOperationCount);
            }
            if (_unknownFields != null)
            {
                _unknownFields.WriteTo(ref output);
            }
        }
#endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize()
        {
            int size = 0;
            size += latencyCount_.CalculateSize(_repeated_latencyCount_codec);
            if (RequestCount != 0UL)
            {
                size += 1 + pb::CodedOutputStream.ComputeUInt64Size(RequestCount);
            }
            if (CacheHits != 0UL)
            {
                size += 1 + pb::CodedOutputStream.ComputeUInt64Size(CacheHits);
            }
            if (PersistedQueryHits != 0UL)
            {
                size += 1 + pb::CodedOutputStream.ComputeUInt64Size(PersistedQueryHits);
            }
            if (PersistedQueryMisses != 0UL)
            {
                size += 1 + pb::CodedOutputStream.ComputeUInt64Size(PersistedQueryMisses);
            }
            size += cacheLatencyCount_.CalculateSize(_repeated_cacheLatencyCount_codec);
            if (rootErrorStats_ != null)
            {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(RootErrorStats);
            }
            if (RequestsWithErrorsCount != 0UL)
            {
                size += 1 + pb::CodedOutputStream.ComputeUInt64Size(RequestsWithErrorsCount);
            }
            size += publicCacheTtlCount_.CalculateSize(_repeated_publicCacheTtlCount_codec);
            size += privateCacheTtlCount_.CalculateSize(_repeated_privateCacheTtlCount_codec);
            if (RegisteredOperationCount != 0UL)
            {
                size += 1 + pb::CodedOutputStream.ComputeUInt64Size(RegisteredOperationCount);
            }
            if (ForbiddenOperationCount != 0UL)
            {
                size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ForbiddenOperationCount);
            }
            if (_unknownFields != null)
            {
                size += _unknownFields.CalculateSize();
            }
            return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(QueryLatencyStats other)
        {
            if (other == null)
            {
                return;
            }
            latencyCount_.Add(other.latencyCount_);
            if (other.RequestCount != 0UL)
            {
                RequestCount = other.RequestCount;
            }
            if (other.CacheHits != 0UL)
            {
                CacheHits = other.CacheHits;
            }
            if (other.PersistedQueryHits != 0UL)
            {
                PersistedQueryHits = other.PersistedQueryHits;
            }
            if (other.PersistedQueryMisses != 0UL)
            {
                PersistedQueryMisses = other.PersistedQueryMisses;
            }
            cacheLatencyCount_.Add(other.cacheLatencyCount_);
            if (other.rootErrorStats_ != null)
            {
                if (rootErrorStats_ == null)
                {
                    RootErrorStats = new global::Mdg.Engine.Proto.PathErrorStats();
                }
                RootErrorStats.MergeFrom(other.RootErrorStats);
            }
            if (other.RequestsWithErrorsCount != 0UL)
            {
                RequestsWithErrorsCount = other.RequestsWithErrorsCount;
            }
            publicCacheTtlCount_.Add(other.publicCacheTtlCount_);
            privateCacheTtlCount_.Add(other.privateCacheTtlCount_);
            if (other.RegisteredOperationCount != 0UL)
            {
                RegisteredOperationCount = other.RegisteredOperationCount;
            }
            if (other.ForbiddenOperationCount != 0UL)
            {
                ForbiddenOperationCount = other.ForbiddenOperationCount;
            }
            _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input)
        {
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            input.ReadRawMessage(this);
#else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10:
          case 8: {
            latencyCount_.AddEntriesFrom(input, _repeated_latencyCount_codec);
            break;
          }
          case 16: {
            RequestCount = input.ReadUInt64();
            break;
          }
          case 24: {
            CacheHits = input.ReadUInt64();
            break;
          }
          case 32: {
            PersistedQueryHits = input.ReadUInt64();
            break;
          }
          case 40: {
            PersistedQueryMisses = input.ReadUInt64();
            break;
          }
          case 50:
          case 48: {
            cacheLatencyCount_.AddEntriesFrom(input, _repeated_cacheLatencyCount_codec);
            break;
          }
          case 58: {
            if (rootErrorStats_ == null) {
              RootErrorStats = new global::Mdg.Engine.Proto.PathErrorStats();
            }
            input.ReadMessage(RootErrorStats);
            break;
          }
          case 64: {
            RequestsWithErrorsCount = input.ReadUInt64();
            break;
          }
          case 74:
          case 72: {
            publicCacheTtlCount_.AddEntriesFrom(input, _repeated_publicCacheTtlCount_codec);
            break;
          }
          case 82:
          case 80: {
            privateCacheTtlCount_.AddEntriesFrom(input, _repeated_privateCacheTtlCount_codec);
            break;
          }
          case 88: {
            RegisteredOperationCount = input.ReadUInt64();
            break;
          }
          case 96: {
            ForbiddenOperationCount = input.ReadUInt64();
            break;
          }
        }
      }
#endif
        }

#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input)
        {
            uint tag;
            while ((tag = input.ReadTag()) != 0)
            {
                switch (tag)
                {
                    default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                        break;
                    case 10:
                    case 8:
                        {
                            latencyCount_.AddEntriesFrom(ref input, _repeated_latencyCount_codec);
                            break;
                        }
                    case 16:
                        {
                            RequestCount = input.ReadUInt64();
                            break;
                        }
                    case 24:
                        {
                            CacheHits = input.ReadUInt64();
                            break;
                        }
                    case 32:
                        {
                            PersistedQueryHits = input.ReadUInt64();
                            break;
                        }
                    case 40:
                        {
                            PersistedQueryMisses = input.ReadUInt64();
                            break;
                        }
                    case 50:
                    case 48:
                        {
                            cacheLatencyCount_.AddEntriesFrom(ref input, _repeated_cacheLatencyCount_codec);
                            break;
                        }
                    case 58:
                        {
                            if (rootErrorStats_ == null)
                            {
                                RootErrorStats = new global::Mdg.Engine.Proto.PathErrorStats();
                            }
                            input.ReadMessage(RootErrorStats);
                            break;
                        }
                    case 64:
                        {
                            RequestsWithErrorsCount = input.ReadUInt64();
                            break;
                        }
                    case 74:
                    case 72:
                        {
                            publicCacheTtlCount_.AddEntriesFrom(ref input, _repeated_publicCacheTtlCount_codec);
                            break;
                        }
                    case 82:
                    case 80:
                        {
                            privateCacheTtlCount_.AddEntriesFrom(ref input, _repeated_privateCacheTtlCount_codec);
                            break;
                        }
                    case 88:
                        {
                            RegisteredOperationCount = input.ReadUInt64();
                            break;
                        }
                    case 96:
                        {
                            ForbiddenOperationCount = input.ReadUInt64();
                            break;
                        }
                }
            }
        }
#endif

    }

    public sealed partial class StatsContext : pb::IMessage<StatsContext>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
#endif
    {
        private static readonly pb::MessageParser<StatsContext> _parser = new pb::MessageParser<StatsContext>(() => new StatsContext());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<StatsContext> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor
        {
            get { return global::Mdg.Engine.Proto.ReportsReflection.Descriptor.MessageTypes[4]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor
        {
            get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public StatsContext()
        {
            OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public StatsContext(StatsContext other) : this()
        {
            clientReferenceId_ = other.clientReferenceId_;
            clientName_ = other.clientName_;
            clientVersion_ = other.clientVersion_;
            _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public StatsContext Clone()
        {
            return new StatsContext(this);
        }

        /// <summary>Field number for the "client_reference_id" field.</summary>
        public const int ClientReferenceIdFieldNumber = 1;
        private string clientReferenceId_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string ClientReferenceId
        {
            get { return clientReferenceId_; }
            set
            {
                clientReferenceId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
            }
        }

        /// <summary>Field number for the "client_name" field.</summary>
        public const int ClientNameFieldNumber = 2;
        private string clientName_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string ClientName
        {
            get { return clientName_; }
            set
            {
                clientName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
            }
        }

        /// <summary>Field number for the "client_version" field.</summary>
        public const int ClientVersionFieldNumber = 3;
        private string clientVersion_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string ClientVersion
        {
            get { return clientVersion_; }
            set
            {
                clientVersion_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other)
        {
            return Equals(other as StatsContext);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(StatsContext other)
        {
            if (ReferenceEquals(other, null))
            {
                return false;
            }
            if (ReferenceEquals(other, this))
            {
                return true;
            }
            if (ClientReferenceId != other.ClientReferenceId) return false;
            if (ClientName != other.ClientName) return false;
            if (ClientVersion != other.ClientVersion) return false;
            return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode()
        {
            int hash = 1;
            if (ClientReferenceId.Length != 0) hash ^= ClientReferenceId.GetHashCode();
            if (ClientName.Length != 0) hash ^= ClientName.GetHashCode();
            if (ClientVersion.Length != 0) hash ^= ClientVersion.GetHashCode();
            if (_unknownFields != null)
            {
                hash ^= _unknownFields.GetHashCode();
            }
            return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString()
        {
            return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output)
        {
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            output.WriteRawMessage(this);
#else
      if (ClientReferenceId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ClientReferenceId);
      }
      if (ClientName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ClientName);
      }
      if (ClientVersion.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ClientVersion);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
#endif
        }

#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output)
        {
            if (ClientReferenceId.Length != 0)
            {
                output.WriteRawTag(10);
                output.WriteString(ClientReferenceId);
            }
            if (ClientName.Length != 0)
            {
                output.WriteRawTag(18);
                output.WriteString(ClientName);
            }
            if (ClientVersion.Length != 0)
            {
                output.WriteRawTag(26);
                output.WriteString(ClientVersion);
            }
            if (_unknownFields != null)
            {
                _unknownFields.WriteTo(ref output);
            }
        }
#endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize()
        {
            int size = 0;
            if (ClientReferenceId.Length != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(ClientReferenceId);
            }
            if (ClientName.Length != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(ClientName);
            }
            if (ClientVersion.Length != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(ClientVersion);
            }
            if (_unknownFields != null)
            {
                size += _unknownFields.CalculateSize();
            }
            return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(StatsContext other)
        {
            if (other == null)
            {
                return;
            }
            if (other.ClientReferenceId.Length != 0)
            {
                ClientReferenceId = other.ClientReferenceId;
            }
            if (other.ClientName.Length != 0)
            {
                ClientName = other.ClientName;
            }
            if (other.ClientVersion.Length != 0)
            {
                ClientVersion = other.ClientVersion;
            }
            _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input)
        {
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            input.ReadRawMessage(this);
#else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ClientReferenceId = input.ReadString();
            break;
          }
          case 18: {
            ClientName = input.ReadString();
            break;
          }
          case 26: {
            ClientVersion = input.ReadString();
            break;
          }
        }
      }
#endif
        }

#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input)
        {
            uint tag;
            while ((tag = input.ReadTag()) != 0)
            {
                switch (tag)
                {
                    default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                        break;
                    case 10:
                        {
                            ClientReferenceId = input.ReadString();
                            break;
                        }
                    case 18:
                        {
                            ClientName = input.ReadString();
                            break;
                        }
                    case 26:
                        {
                            ClientVersion = input.ReadString();
                            break;
                        }
                }
            }
        }
#endif

    }

    public sealed partial class ContextualizedQueryLatencyStats : pb::IMessage<ContextualizedQueryLatencyStats>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
#endif
    {
        private static readonly pb::MessageParser<ContextualizedQueryLatencyStats> _parser = new pb::MessageParser<ContextualizedQueryLatencyStats>(() => new ContextualizedQueryLatencyStats());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<ContextualizedQueryLatencyStats> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor
        {
            get { return global::Mdg.Engine.Proto.ReportsReflection.Descriptor.MessageTypes[5]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor
        {
            get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ContextualizedQueryLatencyStats()
        {
            OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ContextualizedQueryLatencyStats(ContextualizedQueryLatencyStats other) : this()
        {
            queryLatencyStats_ = other.queryLatencyStats_ != null ? other.queryLatencyStats_.Clone() : null;
            context_ = other.context_ != null ? other.context_.Clone() : null;
            _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ContextualizedQueryLatencyStats Clone()
        {
            return new ContextualizedQueryLatencyStats(this);
        }

        /// <summary>Field number for the "query_latency_stats" field.</summary>
        public const int QueryLatencyStatsFieldNumber = 1;
        private global::Mdg.Engine.Proto.QueryLatencyStats queryLatencyStats_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Mdg.Engine.Proto.QueryLatencyStats QueryLatencyStats
        {
            get { return queryLatencyStats_; }
            set
            {
                queryLatencyStats_ = value;
            }
        }

        /// <summary>Field number for the "context" field.</summary>
        public const int ContextFieldNumber = 2;
        private global::Mdg.Engine.Proto.StatsContext context_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Mdg.Engine.Proto.StatsContext Context
        {
            get { return context_; }
            set
            {
                context_ = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other)
        {
            return Equals(other as ContextualizedQueryLatencyStats);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(ContextualizedQueryLatencyStats other)
        {
            if (ReferenceEquals(other, null))
            {
                return false;
            }
            if (ReferenceEquals(other, this))
            {
                return true;
            }
            if (!object.Equals(QueryLatencyStats, other.QueryLatencyStats)) return false;
            if (!object.Equals(Context, other.Context)) return false;
            return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode()
        {
            int hash = 1;
            if (queryLatencyStats_ != null) hash ^= QueryLatencyStats.GetHashCode();
            if (context_ != null) hash ^= Context.GetHashCode();
            if (_unknownFields != null)
            {
                hash ^= _unknownFields.GetHashCode();
            }
            return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString()
        {
            return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output)
        {
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            output.WriteRawMessage(this);
#else
      if (queryLatencyStats_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(QueryLatencyStats);
      }
      if (context_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Context);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
#endif
        }

#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output)
        {
            if (queryLatencyStats_ != null)
            {
                output.WriteRawTag(10);
                output.WriteMessage(QueryLatencyStats);
            }
            if (context_ != null)
            {
                output.WriteRawTag(18);
                output.WriteMessage(Context);
            }
            if (_unknownFields != null)
            {
                _unknownFields.WriteTo(ref output);
            }
        }
#endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize()
        {
            int size = 0;
            if (queryLatencyStats_ != null)
            {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(QueryLatencyStats);
            }
            if (context_ != null)
            {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(Context);
            }
            if (_unknownFields != null)
            {
                size += _unknownFields.CalculateSize();
            }
            return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(ContextualizedQueryLatencyStats other)
        {
            if (other == null)
            {
                return;
            }
            if (other.queryLatencyStats_ != null)
            {
                if (queryLatencyStats_ == null)
                {
                    QueryLatencyStats = new global::Mdg.Engine.Proto.QueryLatencyStats();
                }
                QueryLatencyStats.MergeFrom(other.QueryLatencyStats);
            }
            if (other.context_ != null)
            {
                if (context_ == null)
                {
                    Context = new global::Mdg.Engine.Proto.StatsContext();
                }
                Context.MergeFrom(other.Context);
            }
            _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input)
        {
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            input.ReadRawMessage(this);
#else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (queryLatencyStats_ == null) {
              QueryLatencyStats = new global::Mdg.Engine.Proto.QueryLatencyStats();
            }
            input.ReadMessage(QueryLatencyStats);
            break;
          }
          case 18: {
            if (context_ == null) {
              Context = new global::Mdg.Engine.Proto.StatsContext();
            }
            input.ReadMessage(Context);
            break;
          }
        }
      }
#endif
        }

#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input)
        {
            uint tag;
            while ((tag = input.ReadTag()) != 0)
            {
                switch (tag)
                {
                    default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                        break;
                    case 10:
                        {
                            if (queryLatencyStats_ == null)
                            {
                                QueryLatencyStats = new global::Mdg.Engine.Proto.QueryLatencyStats();
                            }
                            input.ReadMessage(QueryLatencyStats);
                            break;
                        }
                    case 18:
                        {
                            if (context_ == null)
                            {
                                Context = new global::Mdg.Engine.Proto.StatsContext();
                            }
                            input.ReadMessage(Context);
                            break;
                        }
                }
            }
        }
#endif

    }

    public sealed partial class ContextualizedTypeStats : pb::IMessage<ContextualizedTypeStats>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
#endif
    {
        private static readonly pb::MessageParser<ContextualizedTypeStats> _parser = new pb::MessageParser<ContextualizedTypeStats>(() => new ContextualizedTypeStats());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<ContextualizedTypeStats> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor
        {
            get { return global::Mdg.Engine.Proto.ReportsReflection.Descriptor.MessageTypes[6]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor
        {
            get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ContextualizedTypeStats()
        {
            OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ContextualizedTypeStats(ContextualizedTypeStats other) : this()
        {
            context_ = other.context_ != null ? other.context_.Clone() : null;
            perTypeStat_ = other.perTypeStat_.Clone();
            _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ContextualizedTypeStats Clone()
        {
            return new ContextualizedTypeStats(this);
        }

        /// <summary>Field number for the "context" field.</summary>
        public const int ContextFieldNumber = 1;
        private global::Mdg.Engine.Proto.StatsContext context_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Mdg.Engine.Proto.StatsContext Context
        {
            get { return context_; }
            set
            {
                context_ = value;
            }
        }

        /// <summary>Field number for the "per_type_stat" field.</summary>
        public const int PerTypeStatFieldNumber = 2;
        private static readonly pbc::MapField<string, global::Mdg.Engine.Proto.TypeStat>.Codec _map_perTypeStat_codec
            = new pbc::MapField<string, global::Mdg.Engine.Proto.TypeStat>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::Mdg.Engine.Proto.TypeStat.Parser), 18);
        private readonly pbc::MapField<string, global::Mdg.Engine.Proto.TypeStat> perTypeStat_ = new pbc::MapField<string, global::Mdg.Engine.Proto.TypeStat>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::MapField<string, global::Mdg.Engine.Proto.TypeStat> PerTypeStat
        {
            get { return perTypeStat_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other)
        {
            return Equals(other as ContextualizedTypeStats);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(ContextualizedTypeStats other)
        {
            if (ReferenceEquals(other, null))
            {
                return false;
            }
            if (ReferenceEquals(other, this))
            {
                return true;
            }
            if (!object.Equals(Context, other.Context)) return false;
            if (!PerTypeStat.Equals(other.PerTypeStat)) return false;
            return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode()
        {
            int hash = 1;
            if (context_ != null) hash ^= Context.GetHashCode();
            hash ^= PerTypeStat.GetHashCode();
            if (_unknownFields != null)
            {
                hash ^= _unknownFields.GetHashCode();
            }
            return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString()
        {
            return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output)
        {
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            output.WriteRawMessage(this);
#else
      if (context_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Context);
      }
      perTypeStat_.WriteTo(output, _map_perTypeStat_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
#endif
        }

#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output)
        {
            if (context_ != null)
            {
                output.WriteRawTag(10);
                output.WriteMessage(Context);
            }
            perTypeStat_.WriteTo(ref output, _map_perTypeStat_codec);
            if (_unknownFields != null)
            {
                _unknownFields.WriteTo(ref output);
            }
        }
#endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize()
        {
            int size = 0;
            if (context_ != null)
            {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(Context);
            }
            size += perTypeStat_.CalculateSize(_map_perTypeStat_codec);
            if (_unknownFields != null)
            {
                size += _unknownFields.CalculateSize();
            }
            return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(ContextualizedTypeStats other)
        {
            if (other == null)
            {
                return;
            }
            if (other.context_ != null)
            {
                if (context_ == null)
                {
                    Context = new global::Mdg.Engine.Proto.StatsContext();
                }
                Context.MergeFrom(other.Context);
            }
            perTypeStat_.Add(other.perTypeStat_);
            _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input)
        {
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            input.ReadRawMessage(this);
#else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (context_ == null) {
              Context = new global::Mdg.Engine.Proto.StatsContext();
            }
            input.ReadMessage(Context);
            break;
          }
          case 18: {
            perTypeStat_.AddEntriesFrom(input, _map_perTypeStat_codec);
            break;
          }
        }
      }
#endif
        }

#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input)
        {
            uint tag;
            while ((tag = input.ReadTag()) != 0)
            {
                switch (tag)
                {
                    default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                        break;
                    case 10:
                        {
                            if (context_ == null)
                            {
                                Context = new global::Mdg.Engine.Proto.StatsContext();
                            }
                            input.ReadMessage(Context);
                            break;
                        }
                    case 18:
                        {
                            perTypeStat_.AddEntriesFrom(ref input, _map_perTypeStat_codec);
                            break;
                        }
                }
            }
        }
#endif

    }

    public sealed partial class FieldStat : pb::IMessage<FieldStat>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
#endif
    {
        private static readonly pb::MessageParser<FieldStat> _parser = new pb::MessageParser<FieldStat>(() => new FieldStat());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<FieldStat> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor
        {
            get { return global::Mdg.Engine.Proto.ReportsReflection.Descriptor.MessageTypes[7]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor
        {
            get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public FieldStat()
        {
            OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public FieldStat(FieldStat other) : this()
        {
            returnType_ = other.returnType_;
            errorsCount_ = other.errorsCount_;
            count_ = other.count_;
            requestsWithErrorsCount_ = other.requestsWithErrorsCount_;
            latencyCount_ = other.latencyCount_.Clone();
            _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public FieldStat Clone()
        {
            return new FieldStat(this);
        }

        /// <summary>Field number for the "return_type" field.</summary>
        public const int ReturnTypeFieldNumber = 3;
        private string returnType_ = "";
        /// <summary>
        /// required; eg "String!" for User.email:String!
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string ReturnType
        {
            get { return returnType_; }
            set
            {
                returnType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
            }
        }

        /// <summary>Field number for the "errors_count" field.</summary>
        public const int ErrorsCountFieldNumber = 4;
        private ulong errorsCount_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ulong ErrorsCount
        {
            get { return errorsCount_; }
            set
            {
                errorsCount_ = value;
            }
        }

        /// <summary>Field number for the "count" field.</summary>
        public const int CountFieldNumber = 5;
        private ulong count_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ulong Count
        {
            get { return count_; }
            set
            {
                count_ = value;
            }
        }

        /// <summary>Field number for the "requests_with_errors_count" field.</summary>
        public const int RequestsWithErrorsCountFieldNumber = 6;
        private ulong requestsWithErrorsCount_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ulong RequestsWithErrorsCount
        {
            get { return requestsWithErrorsCount_; }
            set
            {
                requestsWithErrorsCount_ = value;
            }
        }

        /// <summary>Field number for the "latency_count" field.</summary>
        public const int LatencyCountFieldNumber = 8;
        private static readonly pb::FieldCodec<long> _repeated_latencyCount_codec
            = pb::FieldCodec.ForInt64(66);
        private readonly pbc::RepeatedField<long> latencyCount_ = new pbc::RepeatedField<long>();
        /// <summary>
        /// Duration histogram; see docs/histograms.md
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<long> LatencyCount
        {
            get { return latencyCount_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other)
        {
            return Equals(other as FieldStat);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(FieldStat other)
        {
            if (ReferenceEquals(other, null))
            {
                return false;
            }
            if (ReferenceEquals(other, this))
            {
                return true;
            }
            if (ReturnType != other.ReturnType) return false;
            if (ErrorsCount != other.ErrorsCount) return false;
            if (Count != other.Count) return false;
            if (RequestsWithErrorsCount != other.RequestsWithErrorsCount) return false;
            if (!latencyCount_.Equals(other.latencyCount_)) return false;
            return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode()
        {
            int hash = 1;
            if (ReturnType.Length != 0) hash ^= ReturnType.GetHashCode();
            if (ErrorsCount != 0UL) hash ^= ErrorsCount.GetHashCode();
            if (Count != 0UL) hash ^= Count.GetHashCode();
            if (RequestsWithErrorsCount != 0UL) hash ^= RequestsWithErrorsCount.GetHashCode();
            hash ^= latencyCount_.GetHashCode();
            if (_unknownFields != null)
            {
                hash ^= _unknownFields.GetHashCode();
            }
            return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString()
        {
            return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output)
        {
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            output.WriteRawMessage(this);
#else
      if (ReturnType.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ReturnType);
      }
      if (ErrorsCount != 0UL) {
        output.WriteRawTag(32);
        output.WriteUInt64(ErrorsCount);
      }
      if (Count != 0UL) {
        output.WriteRawTag(40);
        output.WriteUInt64(Count);
      }
      if (RequestsWithErrorsCount != 0UL) {
        output.WriteRawTag(48);
        output.WriteUInt64(RequestsWithErrorsCount);
      }
      latencyCount_.WriteTo(output, _repeated_latencyCount_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
#endif
        }

#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output)
        {
            if (ReturnType.Length != 0)
            {
                output.WriteRawTag(26);
                output.WriteString(ReturnType);
            }
            if (ErrorsCount != 0UL)
            {
                output.WriteRawTag(32);
                output.WriteUInt64(ErrorsCount);
            }
            if (Count != 0UL)
            {
                output.WriteRawTag(40);
                output.WriteUInt64(Count);
            }
            if (RequestsWithErrorsCount != 0UL)
            {
                output.WriteRawTag(48);
                output.WriteUInt64(RequestsWithErrorsCount);
            }
            latencyCount_.WriteTo(ref output, _repeated_latencyCount_codec);
            if (_unknownFields != null)
            {
                _unknownFields.WriteTo(ref output);
            }
        }
#endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize()
        {
            int size = 0;
            if (ReturnType.Length != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(ReturnType);
            }
            if (ErrorsCount != 0UL)
            {
                size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ErrorsCount);
            }
            if (Count != 0UL)
            {
                size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Count);
            }
            if (RequestsWithErrorsCount != 0UL)
            {
                size += 1 + pb::CodedOutputStream.ComputeUInt64Size(RequestsWithErrorsCount);
            }
            size += latencyCount_.CalculateSize(_repeated_latencyCount_codec);
            if (_unknownFields != null)
            {
                size += _unknownFields.CalculateSize();
            }
            return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(FieldStat other)
        {
            if (other == null)
            {
                return;
            }
            if (other.ReturnType.Length != 0)
            {
                ReturnType = other.ReturnType;
            }
            if (other.ErrorsCount != 0UL)
            {
                ErrorsCount = other.ErrorsCount;
            }
            if (other.Count != 0UL)
            {
                Count = other.Count;
            }
            if (other.RequestsWithErrorsCount != 0UL)
            {
                RequestsWithErrorsCount = other.RequestsWithErrorsCount;
            }
            latencyCount_.Add(other.latencyCount_);
            _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input)
        {
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            input.ReadRawMessage(this);
#else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 26: {
            ReturnType = input.ReadString();
            break;
          }
          case 32: {
            ErrorsCount = input.ReadUInt64();
            break;
          }
          case 40: {
            Count = input.ReadUInt64();
            break;
          }
          case 48: {
            RequestsWithErrorsCount = input.ReadUInt64();
            break;
          }
          case 66:
          case 64: {
            latencyCount_.AddEntriesFrom(input, _repeated_latencyCount_codec);
            break;
          }
        }
      }
#endif
        }

#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input)
        {
            uint tag;
            while ((tag = input.ReadTag()) != 0)
            {
                switch (tag)
                {
                    default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                        break;
                    case 26:
                        {
                            ReturnType = input.ReadString();
                            break;
                        }
                    case 32:
                        {
                            ErrorsCount = input.ReadUInt64();
                            break;
                        }
                    case 40:
                        {
                            Count = input.ReadUInt64();
                            break;
                        }
                    case 48:
                        {
                            RequestsWithErrorsCount = input.ReadUInt64();
                            break;
                        }
                    case 66:
                    case 64:
                        {
                            latencyCount_.AddEntriesFrom(ref input, _repeated_latencyCount_codec);
                            break;
                        }
                }
            }
        }
#endif

    }

    public sealed partial class TypeStat : pb::IMessage<TypeStat>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
#endif
    {
        private static readonly pb::MessageParser<TypeStat> _parser = new pb::MessageParser<TypeStat>(() => new TypeStat());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<TypeStat> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor
        {
            get { return global::Mdg.Engine.Proto.ReportsReflection.Descriptor.MessageTypes[8]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor
        {
            get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public TypeStat()
        {
            OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public TypeStat(TypeStat other) : this()
        {
            perFieldStat_ = other.perFieldStat_.Clone();
            _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public TypeStat Clone()
        {
            return new TypeStat(this);
        }

        /// <summary>Field number for the "per_field_stat" field.</summary>
        public const int PerFieldStatFieldNumber = 3;
        private static readonly pbc::MapField<string, global::Mdg.Engine.Proto.FieldStat>.Codec _map_perFieldStat_codec
            = new pbc::MapField<string, global::Mdg.Engine.Proto.FieldStat>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::Mdg.Engine.Proto.FieldStat.Parser), 26);
        private readonly pbc::MapField<string, global::Mdg.Engine.Proto.FieldStat> perFieldStat_ = new pbc::MapField<string, global::Mdg.Engine.Proto.FieldStat>();
        /// <summary>
        /// Key is (eg) "email" for User.email:String!
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::MapField<string, global::Mdg.Engine.Proto.FieldStat> PerFieldStat
        {
            get { return perFieldStat_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other)
        {
            return Equals(other as TypeStat);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(TypeStat other)
        {
            if (ReferenceEquals(other, null))
            {
                return false;
            }
            if (ReferenceEquals(other, this))
            {
                return true;
            }
            if (!PerFieldStat.Equals(other.PerFieldStat)) return false;
            return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode()
        {
            int hash = 1;
            hash ^= PerFieldStat.GetHashCode();
            if (_unknownFields != null)
            {
                hash ^= _unknownFields.GetHashCode();
            }
            return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString()
        {
            return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output)
        {
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            output.WriteRawMessage(this);
#else
      perFieldStat_.WriteTo(output, _map_perFieldStat_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
#endif
        }

#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output)
        {
            perFieldStat_.WriteTo(ref output, _map_perFieldStat_codec);
            if (_unknownFields != null)
            {
                _unknownFields.WriteTo(ref output);
            }
        }
#endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize()
        {
            int size = 0;
            size += perFieldStat_.CalculateSize(_map_perFieldStat_codec);
            if (_unknownFields != null)
            {
                size += _unknownFields.CalculateSize();
            }
            return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(TypeStat other)
        {
            if (other == null)
            {
                return;
            }
            perFieldStat_.Add(other.perFieldStat_);
            _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input)
        {
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            input.ReadRawMessage(this);
#else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 26: {
            perFieldStat_.AddEntriesFrom(input, _map_perFieldStat_codec);
            break;
          }
        }
      }
#endif
        }

#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input)
        {
            uint tag;
            while ((tag = input.ReadTag()) != 0)
            {
                switch (tag)
                {
                    default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                        break;
                    case 26:
                        {
                            perFieldStat_.AddEntriesFrom(ref input, _map_perFieldStat_codec);
                            break;
                        }
                }
            }
        }
#endif

    }

    public sealed partial class Field : pb::IMessage<Field>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
#endif
    {
        private static readonly pb::MessageParser<Field> _parser = new pb::MessageParser<Field>(() => new Field());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Field> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor
        {
            get { return global::Mdg.Engine.Proto.ReportsReflection.Descriptor.MessageTypes[9]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor
        {
            get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Field()
        {
            OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Field(Field other) : this()
        {
            name_ = other.name_;
            returnType_ = other.returnType_;
            _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Field Clone()
        {
            return new Field(this);
        }

        /// <summary>Field number for the "name" field.</summary>
        public const int NameFieldNumber = 2;
        private string name_ = "";
        /// <summary>
        /// required; eg "email" for User.email:String!
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Name
        {
            get { return name_; }
            set
            {
                name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
            }
        }

        /// <summary>Field number for the "return_type" field.</summary>
        public const int ReturnTypeFieldNumber = 3;
        private string returnType_ = "";
        /// <summary>
        /// required; eg "String!" for User.email:String!
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string ReturnType
        {
            get { return returnType_; }
            set
            {
                returnType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other)
        {
            return Equals(other as Field);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Field other)
        {
            if (ReferenceEquals(other, null))
            {
                return false;
            }
            if (ReferenceEquals(other, this))
            {
                return true;
            }
            if (Name != other.Name) return false;
            if (ReturnType != other.ReturnType) return false;
            return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode()
        {
            int hash = 1;
            if (Name.Length != 0) hash ^= Name.GetHashCode();
            if (ReturnType.Length != 0) hash ^= ReturnType.GetHashCode();
            if (_unknownFields != null)
            {
                hash ^= _unknownFields.GetHashCode();
            }
            return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString()
        {
            return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output)
        {
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            output.WriteRawMessage(this);
#else
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (ReturnType.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ReturnType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
#endif
        }

#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output)
        {
            if (Name.Length != 0)
            {
                output.WriteRawTag(18);
                output.WriteString(Name);
            }
            if (ReturnType.Length != 0)
            {
                output.WriteRawTag(26);
                output.WriteString(ReturnType);
            }
            if (_unknownFields != null)
            {
                _unknownFields.WriteTo(ref output);
            }
        }
#endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize()
        {
            int size = 0;
            if (Name.Length != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
            }
            if (ReturnType.Length != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(ReturnType);
            }
            if (_unknownFields != null)
            {
                size += _unknownFields.CalculateSize();
            }
            return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Field other)
        {
            if (other == null)
            {
                return;
            }
            if (other.Name.Length != 0)
            {
                Name = other.Name;
            }
            if (other.ReturnType.Length != 0)
            {
                ReturnType = other.ReturnType;
            }
            _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input)
        {
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            input.ReadRawMessage(this);
#else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 26: {
            ReturnType = input.ReadString();
            break;
          }
        }
      }
#endif
        }

#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input)
        {
            uint tag;
            while ((tag = input.ReadTag()) != 0)
            {
                switch (tag)
                {
                    default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                        break;
                    case 18:
                        {
                            Name = input.ReadString();
                            break;
                        }
                    case 26:
                        {
                            ReturnType = input.ReadString();
                            break;
                        }
                }
            }
        }
#endif

    }

    public sealed partial class Type : pb::IMessage<Type>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
#endif
    {
        private static readonly pb::MessageParser<Type> _parser = new pb::MessageParser<Type>(() => new Type());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Type> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor
        {
            get { return global::Mdg.Engine.Proto.ReportsReflection.Descriptor.MessageTypes[10]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor
        {
            get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Type()
        {
            OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Type(Type other) : this()
        {
            name_ = other.name_;
            field_ = other.field_.Clone();
            _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Type Clone()
        {
            return new Type(this);
        }

        /// <summary>Field number for the "name" field.</summary>
        public const int NameFieldNumber = 1;
        private string name_ = "";
        /// <summary>
        /// required; eg "User" for User.email:String!
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Name
        {
            get { return name_; }
            set
            {
                name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
            }
        }

        /// <summary>Field number for the "field" field.</summary>
        public const int FieldFieldNumber = 2;
        private static readonly pb::FieldCodec<global::Mdg.Engine.Proto.Field> _repeated_field_codec
            = pb::FieldCodec.ForMessage(18, global::Mdg.Engine.Proto.Field.Parser);
        private readonly pbc::RepeatedField<global::Mdg.Engine.Proto.Field> field_ = new pbc::RepeatedField<global::Mdg.Engine.Proto.Field>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::Mdg.Engine.Proto.Field> Field
        {
            get { return field_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other)
        {
            return Equals(other as Type);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Type other)
        {
            if (ReferenceEquals(other, null))
            {
                return false;
            }
            if (ReferenceEquals(other, this))
            {
                return true;
            }
            if (Name != other.Name) return false;
            if (!field_.Equals(other.field_)) return false;
            return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode()
        {
            int hash = 1;
            if (Name.Length != 0) hash ^= Name.GetHashCode();
            hash ^= field_.GetHashCode();
            if (_unknownFields != null)
            {
                hash ^= _unknownFields.GetHashCode();
            }
            return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString()
        {
            return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output)
        {
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            output.WriteRawMessage(this);
#else
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      field_.WriteTo(output, _repeated_field_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
#endif
        }

#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output)
        {
            if (Name.Length != 0)
            {
                output.WriteRawTag(10);
                output.WriteString(Name);
            }
            field_.WriteTo(ref output, _repeated_field_codec);
            if (_unknownFields != null)
            {
                _unknownFields.WriteTo(ref output);
            }
        }
#endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize()
        {
            int size = 0;
            if (Name.Length != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
            }
            size += field_.CalculateSize(_repeated_field_codec);
            if (_unknownFields != null)
            {
                size += _unknownFields.CalculateSize();
            }
            return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Type other)
        {
            if (other == null)
            {
                return;
            }
            if (other.Name.Length != 0)
            {
                Name = other.Name;
            }
            field_.Add(other.field_);
            _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input)
        {
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            input.ReadRawMessage(this);
#else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            field_.AddEntriesFrom(input, _repeated_field_codec);
            break;
          }
        }
      }
#endif
        }

#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input)
        {
            uint tag;
            while ((tag = input.ReadTag()) != 0)
            {
                switch (tag)
                {
                    default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                        break;
                    case 10:
                        {
                            Name = input.ReadString();
                            break;
                        }
                    case 18:
                        {
                            field_.AddEntriesFrom(ref input, _repeated_field_codec);
                            break;
                        }
                }
            }
        }
#endif

    }

    /// <summary>
    /// This is the top-level message used by the new traces ingress. This
    /// is designed for the apollo-engine-reporting TypeScript agent and will
    /// eventually be documented as a public ingress API. This message consists
    /// solely of traces; the equivalent of the StatsReport is automatically
    /// generated server-side from this message. Agent should either send a trace or include it in the stats
    /// for every request in this report. Generally, buffering up until a large
    /// size has been reached (say, 4MB) or 5-10 seconds has passed is appropriate.
    /// This message used to be know as FullTracesReport, but got renamed since it isn't just for traces anymore
    /// </summary>
    public sealed partial class Report : pb::IMessage<Report>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
#endif
    {
        private static readonly pb::MessageParser<Report> _parser = new pb::MessageParser<Report>(() => new Report());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Report> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor
        {
            get { return global::Mdg.Engine.Proto.ReportsReflection.Descriptor.MessageTypes[11]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor
        {
            get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Report()
        {
            OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Report(Report other) : this()
        {
            header_ = other.header_ != null ? other.header_.Clone() : null;
            tracesPerQuery_ = other.tracesPerQuery_.Clone();
            endTime_ = other.endTime_ != null ? other.endTime_.Clone() : null;
            _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Report Clone()
        {
            return new Report(this);
        }

        /// <summary>Field number for the "header" field.</summary>
        public const int HeaderFieldNumber = 1;
        private global::Mdg.Engine.Proto.ReportHeader header_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Mdg.Engine.Proto.ReportHeader Header
        {
            get { return header_; }
            set
            {
                header_ = value;
            }
        }

        /// <summary>Field number for the "traces_per_query" field.</summary>
        public const int TracesPerQueryFieldNumber = 5;
        private static readonly pbc::MapField<string, global::Mdg.Engine.Proto.TracesAndStats>.Codec _map_tracesPerQuery_codec
            = new pbc::MapField<string, global::Mdg.Engine.Proto.TracesAndStats>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::Mdg.Engine.Proto.TracesAndStats.Parser), 42);
        private readonly pbc::MapField<string, global::Mdg.Engine.Proto.TracesAndStats> tracesPerQuery_ = new pbc::MapField<string, global::Mdg.Engine.Proto.TracesAndStats>();
        /// <summary>
        /// key is statsReportKey (# operationName\nsignature) Note that the nested
        /// traces will *not* have a signature or details.operationName (because the
        /// key is adequate).
        ///
        /// We also assume that traces don't have
        /// legacy_per_query_implicit_operation_name, and we don't require them to have
        /// details.raw_query (which would consume a lot of space and has privacy/data
        /// access issues, and isn't currently exposed by our app anyway).
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::MapField<string, global::Mdg.Engine.Proto.TracesAndStats> TracesPerQuery
        {
            get { return tracesPerQuery_; }
        }

        /// <summary>Field number for the "end_time" field.</summary>
        public const int EndTimeFieldNumber = 2;
        private global::Google.Protobuf.WellKnownTypes.Timestamp endTime_;
        /// <summary>
        /// This is the time that the requests in this trace are considered to have taken place
        /// If this field is not present the max of the end_time of each trace will be used instead.
        /// If there are no traces and no end_time present the report will not be able to be processed.
        /// Note: This will override the end_time from traces.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Google.Protobuf.WellKnownTypes.Timestamp EndTime
        {
            get { return endTime_; }
            set
            {
                endTime_ = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other)
        {
            return Equals(other as Report);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Report other)
        {
            if (ReferenceEquals(other, null))
            {
                return false;
            }
            if (ReferenceEquals(other, this))
            {
                return true;
            }
            if (!object.Equals(Header, other.Header)) return false;
            if (!TracesPerQuery.Equals(other.TracesPerQuery)) return false;
            if (!object.Equals(EndTime, other.EndTime)) return false;
            return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode()
        {
            int hash = 1;
            if (header_ != null) hash ^= Header.GetHashCode();
            hash ^= TracesPerQuery.GetHashCode();
            if (endTime_ != null) hash ^= EndTime.GetHashCode();
            if (_unknownFields != null)
            {
                hash ^= _unknownFields.GetHashCode();
            }
            return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString()
        {
            return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output)
        {
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            output.WriteRawMessage(this);
#else
      if (header_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Header);
      }
      if (endTime_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(EndTime);
      }
      tracesPerQuery_.WriteTo(output, _map_tracesPerQuery_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
#endif
        }

#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output)
        {
            if (header_ != null)
            {
                output.WriteRawTag(10);
                output.WriteMessage(Header);
            }
            if (endTime_ != null)
            {
                output.WriteRawTag(18);
                output.WriteMessage(EndTime);
            }
            tracesPerQuery_.WriteTo(ref output, _map_tracesPerQuery_codec);
            if (_unknownFields != null)
            {
                _unknownFields.WriteTo(ref output);
            }
        }
#endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize()
        {
            int size = 0;
            if (header_ != null)
            {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(Header);
            }
            size += tracesPerQuery_.CalculateSize(_map_tracesPerQuery_codec);
            if (endTime_ != null)
            {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(EndTime);
            }
            if (_unknownFields != null)
            {
                size += _unknownFields.CalculateSize();
            }
            return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Report other)
        {
            if (other == null)
            {
                return;
            }
            if (other.header_ != null)
            {
                if (header_ == null)
                {
                    Header = new global::Mdg.Engine.Proto.ReportHeader();
                }
                Header.MergeFrom(other.Header);
            }
            tracesPerQuery_.Add(other.tracesPerQuery_);
            if (other.endTime_ != null)
            {
                if (endTime_ == null)
                {
                    EndTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
                }
                EndTime.MergeFrom(other.EndTime);
            }
            _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input)
        {
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            input.ReadRawMessage(this);
#else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (header_ == null) {
              Header = new global::Mdg.Engine.Proto.ReportHeader();
            }
            input.ReadMessage(Header);
            break;
          }
          case 18: {
            if (endTime_ == null) {
              EndTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(EndTime);
            break;
          }
          case 42: {
            tracesPerQuery_.AddEntriesFrom(input, _map_tracesPerQuery_codec);
            break;
          }
        }
      }
#endif
        }

#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input)
        {
            uint tag;
            while ((tag = input.ReadTag()) != 0)
            {
                switch (tag)
                {
                    default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                        break;
                    case 10:
                        {
                            if (header_ == null)
                            {
                                Header = new global::Mdg.Engine.Proto.ReportHeader();
                            }
                            input.ReadMessage(Header);
                            break;
                        }
                    case 18:
                        {
                            if (endTime_ == null)
                            {
                                EndTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
                            }
                            input.ReadMessage(EndTime);
                            break;
                        }
                    case 42:
                        {
                            tracesPerQuery_.AddEntriesFrom(ref input, _map_tracesPerQuery_codec);
                            break;
                        }
                }
            }
        }
#endif

    }

    public sealed partial class ContextualizedStats : pb::IMessage<ContextualizedStats>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
#endif
    {
        private static readonly pb::MessageParser<ContextualizedStats> _parser = new pb::MessageParser<ContextualizedStats>(() => new ContextualizedStats());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<ContextualizedStats> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor
        {
            get { return global::Mdg.Engine.Proto.ReportsReflection.Descriptor.MessageTypes[12]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor
        {
            get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ContextualizedStats()
        {
            OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ContextualizedStats(ContextualizedStats other) : this()
        {
            context_ = other.context_ != null ? other.context_.Clone() : null;
            queryLatencyStats_ = other.queryLatencyStats_ != null ? other.queryLatencyStats_.Clone() : null;
            perTypeStat_ = other.perTypeStat_.Clone();
            _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ContextualizedStats Clone()
        {
            return new ContextualizedStats(this);
        }

        /// <summary>Field number for the "context" field.</summary>
        public const int ContextFieldNumber = 1;
        private global::Mdg.Engine.Proto.StatsContext context_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Mdg.Engine.Proto.StatsContext Context
        {
            get { return context_; }
            set
            {
                context_ = value;
            }
        }

        /// <summary>Field number for the "query_latency_stats" field.</summary>
        public const int QueryLatencyStatsFieldNumber = 2;
        private global::Mdg.Engine.Proto.QueryLatencyStats queryLatencyStats_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Mdg.Engine.Proto.QueryLatencyStats QueryLatencyStats
        {
            get { return queryLatencyStats_; }
            set
            {
                queryLatencyStats_ = value;
            }
        }

        /// <summary>Field number for the "per_type_stat" field.</summary>
        public const int PerTypeStatFieldNumber = 3;
        private static readonly pbc::MapField<string, global::Mdg.Engine.Proto.TypeStat>.Codec _map_perTypeStat_codec
            = new pbc::MapField<string, global::Mdg.Engine.Proto.TypeStat>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::Mdg.Engine.Proto.TypeStat.Parser), 26);
        private readonly pbc::MapField<string, global::Mdg.Engine.Proto.TypeStat> perTypeStat_ = new pbc::MapField<string, global::Mdg.Engine.Proto.TypeStat>();
        /// <summary>
        /// Key is type name.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::MapField<string, global::Mdg.Engine.Proto.TypeStat> PerTypeStat
        {
            get { return perTypeStat_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other)
        {
            return Equals(other as ContextualizedStats);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(ContextualizedStats other)
        {
            if (ReferenceEquals(other, null))
            {
                return false;
            }
            if (ReferenceEquals(other, this))
            {
                return true;
            }
            if (!object.Equals(Context, other.Context)) return false;
            if (!object.Equals(QueryLatencyStats, other.QueryLatencyStats)) return false;
            if (!PerTypeStat.Equals(other.PerTypeStat)) return false;
            return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode()
        {
            int hash = 1;
            if (context_ != null) hash ^= Context.GetHashCode();
            if (queryLatencyStats_ != null) hash ^= QueryLatencyStats.GetHashCode();
            hash ^= PerTypeStat.GetHashCode();
            if (_unknownFields != null)
            {
                hash ^= _unknownFields.GetHashCode();
            }
            return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString()
        {
            return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output)
        {
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            output.WriteRawMessage(this);
#else
      if (context_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Context);
      }
      if (queryLatencyStats_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(QueryLatencyStats);
      }
      perTypeStat_.WriteTo(output, _map_perTypeStat_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
#endif
        }

#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output)
        {
            if (context_ != null)
            {
                output.WriteRawTag(10);
                output.WriteMessage(Context);
            }
            if (queryLatencyStats_ != null)
            {
                output.WriteRawTag(18);
                output.WriteMessage(QueryLatencyStats);
            }
            perTypeStat_.WriteTo(ref output, _map_perTypeStat_codec);
            if (_unknownFields != null)
            {
                _unknownFields.WriteTo(ref output);
            }
        }
#endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize()
        {
            int size = 0;
            if (context_ != null)
            {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(Context);
            }
            if (queryLatencyStats_ != null)
            {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(QueryLatencyStats);
            }
            size += perTypeStat_.CalculateSize(_map_perTypeStat_codec);
            if (_unknownFields != null)
            {
                size += _unknownFields.CalculateSize();
            }
            return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(ContextualizedStats other)
        {
            if (other == null)
            {
                return;
            }
            if (other.context_ != null)
            {
                if (context_ == null)
                {
                    Context = new global::Mdg.Engine.Proto.StatsContext();
                }
                Context.MergeFrom(other.Context);
            }
            if (other.queryLatencyStats_ != null)
            {
                if (queryLatencyStats_ == null)
                {
                    QueryLatencyStats = new global::Mdg.Engine.Proto.QueryLatencyStats();
                }
                QueryLatencyStats.MergeFrom(other.QueryLatencyStats);
            }
            perTypeStat_.Add(other.perTypeStat_);
            _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input)
        {
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            input.ReadRawMessage(this);
#else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (context_ == null) {
              Context = new global::Mdg.Engine.Proto.StatsContext();
            }
            input.ReadMessage(Context);
            break;
          }
          case 18: {
            if (queryLatencyStats_ == null) {
              QueryLatencyStats = new global::Mdg.Engine.Proto.QueryLatencyStats();
            }
            input.ReadMessage(QueryLatencyStats);
            break;
          }
          case 26: {
            perTypeStat_.AddEntriesFrom(input, _map_perTypeStat_codec);
            break;
          }
        }
      }
#endif
        }

#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input)
        {
            uint tag;
            while ((tag = input.ReadTag()) != 0)
            {
                switch (tag)
                {
                    default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                        break;
                    case 10:
                        {
                            if (context_ == null)
                            {
                                Context = new global::Mdg.Engine.Proto.StatsContext();
                            }
                            input.ReadMessage(Context);
                            break;
                        }
                    case 18:
                        {
                            if (queryLatencyStats_ == null)
                            {
                                QueryLatencyStats = new global::Mdg.Engine.Proto.QueryLatencyStats();
                            }
                            input.ReadMessage(QueryLatencyStats);
                            break;
                        }
                    case 26:
                        {
                            perTypeStat_.AddEntriesFrom(ref input, _map_perTypeStat_codec);
                            break;
                        }
                }
            }
        }
#endif

    }

    /// <summary>
    /// A sequence of traces and stats. An individual trace should either be counted as a stat or trace
    /// </summary>
    public sealed partial class TracesAndStats : pb::IMessage<TracesAndStats>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
#endif
    {
        private static readonly pb::MessageParser<TracesAndStats> _parser = new pb::MessageParser<TracesAndStats>(() => new TracesAndStats());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<TracesAndStats> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor
        {
            get { return global::Mdg.Engine.Proto.ReportsReflection.Descriptor.MessageTypes[13]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor
        {
            get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public TracesAndStats()
        {
            OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public TracesAndStats(TracesAndStats other) : this()
        {
            trace_ = other.trace_.Clone();
            statsWithContext_ = other.statsWithContext_.Clone();
            _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public TracesAndStats Clone()
        {
            return new TracesAndStats(this);
        }

        /// <summary>Field number for the "trace" field.</summary>
        public const int TraceFieldNumber = 1;
        private static readonly pb::FieldCodec<global::Mdg.Engine.Proto.Trace> _repeated_trace_codec
            = pb::FieldCodec.ForMessage(10, global::Mdg.Engine.Proto.Trace.Parser);
        private readonly pbc::RepeatedField<global::Mdg.Engine.Proto.Trace> trace_ = new pbc::RepeatedField<global::Mdg.Engine.Proto.Trace>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::Mdg.Engine.Proto.Trace> Trace
        {
            get { return trace_; }
        }

        /// <summary>Field number for the "stats_with_context" field.</summary>
        public const int StatsWithContextFieldNumber = 2;
        private static readonly pb::FieldCodec<global::Mdg.Engine.Proto.ContextualizedStats> _repeated_statsWithContext_codec
            = pb::FieldCodec.ForMessage(18, global::Mdg.Engine.Proto.ContextualizedStats.Parser);
        private readonly pbc::RepeatedField<global::Mdg.Engine.Proto.ContextualizedStats> statsWithContext_ = new pbc::RepeatedField<global::Mdg.Engine.Proto.ContextualizedStats>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::Mdg.Engine.Proto.ContextualizedStats> StatsWithContext
        {
            get { return statsWithContext_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other)
        {
            return Equals(other as TracesAndStats);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(TracesAndStats other)
        {
            if (ReferenceEquals(other, null))
            {
                return false;
            }
            if (ReferenceEquals(other, this))
            {
                return true;
            }
            if (!trace_.Equals(other.trace_)) return false;
            if (!statsWithContext_.Equals(other.statsWithContext_)) return false;
            return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode()
        {
            int hash = 1;
            hash ^= trace_.GetHashCode();
            hash ^= statsWithContext_.GetHashCode();
            if (_unknownFields != null)
            {
                hash ^= _unknownFields.GetHashCode();
            }
            return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString()
        {
            return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output)
        {
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            output.WriteRawMessage(this);
#else
      trace_.WriteTo(output, _repeated_trace_codec);
      statsWithContext_.WriteTo(output, _repeated_statsWithContext_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
#endif
        }

#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output)
        {
            trace_.WriteTo(ref output, _repeated_trace_codec);
            statsWithContext_.WriteTo(ref output, _repeated_statsWithContext_codec);
            if (_unknownFields != null)
            {
                _unknownFields.WriteTo(ref output);
            }
        }
#endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize()
        {
            int size = 0;
            size += trace_.CalculateSize(_repeated_trace_codec);
            size += statsWithContext_.CalculateSize(_repeated_statsWithContext_codec);
            if (_unknownFields != null)
            {
                size += _unknownFields.CalculateSize();
            }
            return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(TracesAndStats other)
        {
            if (other == null)
            {
                return;
            }
            trace_.Add(other.trace_);
            statsWithContext_.Add(other.statsWithContext_);
            _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input)
        {
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            input.ReadRawMessage(this);
#else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            trace_.AddEntriesFrom(input, _repeated_trace_codec);
            break;
          }
          case 18: {
            statsWithContext_.AddEntriesFrom(input, _repeated_statsWithContext_codec);
            break;
          }
        }
      }
#endif
        }

#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input)
        {
            uint tag;
            while ((tag = input.ReadTag()) != 0)
            {
                switch (tag)
                {
                    default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                        break;
                    case 10:
                        {
                            trace_.AddEntriesFrom(ref input, _repeated_trace_codec);
                            break;
                        }
                    case 18:
                        {
                            statsWithContext_.AddEntriesFrom(ref input, _repeated_statsWithContext_codec);
                            break;
                        }
                }
            }
        }
#endif

    }

    #endregion

}

#endregion Designer generated code