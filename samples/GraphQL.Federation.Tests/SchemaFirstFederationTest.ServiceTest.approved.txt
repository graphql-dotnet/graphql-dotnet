schema @link(url: "https://specs.apollo.dev/link/v1.0", import: ["@link"]) @link(url: "https://specs.apollo.dev/federation/v2.3", import: ["@key", "@external", "@requires", "@provides", "@shareable", "@inaccessible", "@override", "@tag"]) {
  query: Query
}

scalar _Any

type Query {
  _noop: String
  _service: _Service!
  _entities(representations: [_Any!]!): [_Entity]!
}

type SchemaFirstExternalResolvableTestDto @key(fields: "id") {
  id: Int!
  external: String @external
  extended: String! @requires(fields: "external")
}

type SchemaFirstExternalTestDto @key(fields: "id", resolvable: false) {
  id: Int!
}

type SchemaFirstFederatedTestDto @key(fields: "id") {
  id: Int!
  name: String @deprecated(reason: "Test deprecation reason 03.")
  externalTestId: Int!
  externalResolvableTestId: Int!
  externalTest: SchemaFirstExternalTestDto! @deprecated(reason: "Test deprecation reason 04.")
  externalResolvableTest: SchemaFirstExternalResolvableTestDto! @provides(fields: "external")
}

type _Service {
  sdl: String
}

union _Entity = SchemaFirstExternalResolvableTestDto | SchemaFirstFederatedTestDto
